== IN PROGRESS:
1.	Binary Tree
2.	


######################################################################
== NOTES:
1.	File structure: bonus is just additional sources.

2.	Naming functions:
		functions that return allocated spaces that should be freed in the calling
			function (create... OR make...) example: char **create_split_cmds();
		functions that return values that can't be freed (get...) example:
			size_t len_till_splitter();

3.	The WORD tokens shall have the word expansion rules applied to them immediately
		before the associated command is executed, not at the time the command is parsed.

4.	If the token is an operator, the token identifier for that operator shall result.
	If the string consists solely of digits and the delimiter character is one of '<' or '>',
		the token identifier IO_NUMBER shall be returned.
	Otherwise, the token identifier TOKEN results.

5.	TODO:	-Return different numbers from failed deep functions, and handle them differently in
				calling function.

			-Add quoting information to the token, maybe as a struct? or in bits.

			-Store the command token as fragments, example: echo 123"$HOME"'$HOME'
				is stored as framgents {("123", LITERAL),
										("$HOME", DOUBLE_QUOTE),
										("$HOME", SINGLE_QUOTE)}
				while echo "hello xD"
				is stored as {("hello xD", LITERAL)} or DOUBLE_QUOTE idk

			-Remove empty tokens.