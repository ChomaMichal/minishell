
test:     file format elf64-x86-64


Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    $0x8,%rsp
    1008:	48 8b 05 d1 af 00 00 	mov    0xafd1(%rip),%rax        # bfe0 <__gmon_start__@Base>
    100f:	48 85 c0             	test   %rax,%rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   *%rax
    1016:	48 83 c4 08          	add    $0x8,%rsp
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <__strcat_chk@plt-0x10>:
    1020:	ff 35 9a ae 00 00    	push   0xae9a(%rip)        # bec0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 9c ae 00 00    	jmp    *0xae9c(%rip)        # bec8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001030 <__strcat_chk@plt>:
    1030:	ff 25 9a ae 00 00    	jmp    *0xae9a(%rip)        # bed0 <__strcat_chk@GLIBC_2.3.4>
    1036:	68 00 00 00 00       	push   $0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <free@plt>:
    1040:	ff 25 92 ae 00 00    	jmp    *0xae92(%rip)        # bed8 <free@GLIBC_2.2.5>
    1046:	68 01 00 00 00       	push   $0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001050 <__vfprintf_chk@plt>:
    1050:	ff 25 8a ae 00 00    	jmp    *0xae8a(%rip)        # bee0 <__vfprintf_chk@GLIBC_2.3.4>
    1056:	68 02 00 00 00       	push   $0x2
    105b:	e9 c0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001060 <__vprintf_chk@plt>:
    1060:	ff 25 82 ae 00 00    	jmp    *0xae82(%rip)        # bee8 <__vprintf_chk@GLIBC_2.3.4>
    1066:	68 03 00 00 00       	push   $0x3
    106b:	e9 b0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001070 <add_history@plt>:
    1070:	ff 25 7a ae 00 00    	jmp    *0xae7a(%rip)        # bef0 <add_history@Base>
    1076:	68 04 00 00 00       	push   $0x4
    107b:	e9 a0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001080 <__getcwd_chk@plt>:
    1080:	ff 25 72 ae 00 00    	jmp    *0xae72(%rip)        # bef8 <__getcwd_chk@GLIBC_2.4>
    1086:	68 05 00 00 00       	push   $0x5
    108b:	e9 90 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001090 <write@plt>:
    1090:	ff 25 6a ae 00 00    	jmp    *0xae6a(%rip)        # bf00 <write@GLIBC_2.2.5>
    1096:	68 06 00 00 00       	push   $0x6
    109b:	e9 80 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010a0 <__open_2@plt>:
    10a0:	ff 25 62 ae 00 00    	jmp    *0xae62(%rip)        # bf08 <__open_2@GLIBC_2.7>
    10a6:	68 07 00 00 00       	push   $0x7
    10ab:	e9 70 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010b0 <opendir@plt>:
    10b0:	ff 25 5a ae 00 00    	jmp    *0xae5a(%rip)        # bf10 <opendir@GLIBC_2.2.5>
    10b6:	68 08 00 00 00       	push   $0x8
    10bb:	e9 60 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010c0 <strlen@plt>:
    10c0:	ff 25 52 ae 00 00    	jmp    *0xae52(%rip)        # bf18 <strlen@GLIBC_2.2.5>
    10c6:	68 09 00 00 00       	push   $0x9
    10cb:	e9 50 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010d0 <chdir@plt>:
    10d0:	ff 25 4a ae 00 00    	jmp    *0xae4a(%rip)        # bf20 <chdir@GLIBC_2.2.5>
    10d6:	68 0a 00 00 00       	push   $0xa
    10db:	e9 40 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010e0 <__stack_chk_fail@plt>:
    10e0:	ff 25 42 ae 00 00    	jmp    *0xae42(%rip)        # bf28 <__stack_chk_fail@GLIBC_2.4>
    10e6:	68 0b 00 00 00       	push   $0xb
    10eb:	e9 30 ff ff ff       	jmp    1020 <_init+0x20>

00000000000010f0 <dup2@plt>:
    10f0:	ff 25 3a ae 00 00    	jmp    *0xae3a(%rip)        # bf30 <dup2@GLIBC_2.2.5>
    10f6:	68 0c 00 00 00       	push   $0xc
    10fb:	e9 20 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001100 <memset@plt>:
    1100:	ff 25 32 ae 00 00    	jmp    *0xae32(%rip)        # bf38 <memset@GLIBC_2.2.5>
    1106:	68 0d 00 00 00       	push   $0xd
    110b:	e9 10 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001110 <readline@plt>:
    1110:	ff 25 2a ae 00 00    	jmp    *0xae2a(%rip)        # bf40 <readline@Base>
    1116:	68 0e 00 00 00       	push   $0xe
    111b:	e9 00 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001120 <close@plt>:
    1120:	ff 25 22 ae 00 00    	jmp    *0xae22(%rip)        # bf48 <close@GLIBC_2.2.5>
    1126:	68 0f 00 00 00       	push   $0xf
    112b:	e9 f0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001130 <pipe@plt>:
    1130:	ff 25 1a ae 00 00    	jmp    *0xae1a(%rip)        # bf50 <pipe@GLIBC_2.2.5>
    1136:	68 10 00 00 00       	push   $0x10
    113b:	e9 e0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001140 <closedir@plt>:
    1140:	ff 25 12 ae 00 00    	jmp    *0xae12(%rip)        # bf58 <closedir@GLIBC_2.2.5>
    1146:	68 11 00 00 00       	push   $0x11
    114b:	e9 d0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001150 <execve@plt>:
    1150:	ff 25 0a ae 00 00    	jmp    *0xae0a(%rip)        # bf60 <execve@GLIBC_2.2.5>
    1156:	68 12 00 00 00       	push   $0x12
    115b:	e9 c0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001160 <putc@plt>:
    1160:	ff 25 02 ae 00 00    	jmp    *0xae02(%rip)        # bf68 <putc@GLIBC_2.2.5>
    1166:	68 13 00 00 00       	push   $0x13
    116b:	e9 b0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001170 <signal@plt>:
    1170:	ff 25 fa ad 00 00    	jmp    *0xadfa(%rip)        # bf70 <signal@GLIBC_2.2.5>
    1176:	68 14 00 00 00       	push   $0x14
    117b:	e9 a0 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001180 <readdir@plt>:
    1180:	ff 25 f2 ad 00 00    	jmp    *0xadf2(%rip)        # bf78 <readdir@GLIBC_2.2.5>
    1186:	68 15 00 00 00       	push   $0x15
    118b:	e9 90 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001190 <malloc@plt>:
    1190:	ff 25 ea ad 00 00    	jmp    *0xadea(%rip)        # bf80 <malloc@GLIBC_2.2.5>
    1196:	68 16 00 00 00       	push   $0x16
    119b:	e9 80 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011a0 <rl_redisplay@plt>:
    11a0:	ff 25 e2 ad 00 00    	jmp    *0xade2(%rip)        # bf88 <rl_redisplay@Base>
    11a6:	68 17 00 00 00       	push   $0x17
    11ab:	e9 70 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011b0 <rl_on_new_line@plt>:
    11b0:	ff 25 da ad 00 00    	jmp    *0xadda(%rip)        # bf90 <rl_on_new_line@Base>
    11b6:	68 18 00 00 00       	push   $0x18
    11bb:	e9 60 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011c0 <waitpid@plt>:
    11c0:	ff 25 d2 ad 00 00    	jmp    *0xadd2(%rip)        # bf98 <waitpid@GLIBC_2.2.5>
    11c6:	68 19 00 00 00       	push   $0x19
    11cb:	e9 50 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011d0 <open@plt>:
    11d0:	ff 25 ca ad 00 00    	jmp    *0xadca(%rip)        # bfa0 <open@GLIBC_2.2.5>
    11d6:	68 1a 00 00 00       	push   $0x1a
    11db:	e9 40 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011e0 <access@plt>:
    11e0:	ff 25 c2 ad 00 00    	jmp    *0xadc2(%rip)        # bfa8 <access@GLIBC_2.2.5>
    11e6:	68 1b 00 00 00       	push   $0x1b
    11eb:	e9 30 fe ff ff       	jmp    1020 <_init+0x20>

00000000000011f0 <perror@plt>:
    11f0:	ff 25 ba ad 00 00    	jmp    *0xadba(%rip)        # bfb0 <perror@GLIBC_2.2.5>
    11f6:	68 1c 00 00 00       	push   $0x1c
    11fb:	e9 20 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001200 <exit@plt>:
    1200:	ff 25 b2 ad 00 00    	jmp    *0xadb2(%rip)        # bfb8 <exit@GLIBC_2.2.5>
    1206:	68 1d 00 00 00       	push   $0x1d
    120b:	e9 10 fe ff ff       	jmp    1020 <_init+0x20>

0000000000001210 <fork@plt>:
    1210:	ff 25 aa ad 00 00    	jmp    *0xadaa(%rip)        # bfc0 <fork@GLIBC_2.2.5>
    1216:	68 1e 00 00 00       	push   $0x1e
    121b:	e9 00 fe ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .plt.got:

0000000000001220 <__cxa_finalize@plt>:
    1220:	ff 25 ca ad 00 00    	jmp    *0xadca(%rip)        # bff0 <__cxa_finalize@GLIBC_2.2.5>
    1226:	66 90                	xchg   %ax,%ax

Disassembly of section .text:

0000000000001230 <_start>:
    1230:	f3 0f 1e fa          	endbr64
    1234:	31 ed                	xor    %ebp,%ebp
    1236:	49 89 d1             	mov    %rdx,%r9
    1239:	5e                   	pop    %rsi
    123a:	48 89 e2             	mov    %rsp,%rdx
    123d:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
    1241:	50                   	push   %rax
    1242:	54                   	push   %rsp
    1243:	45 31 c0             	xor    %r8d,%r8d
    1246:	31 c9                	xor    %ecx,%ecx
    1248:	48 8d 3d c1 02 00 00 	lea    0x2c1(%rip),%rdi        # 1510 <main>
    124f:	ff 15 73 ad 00 00    	call   *0xad73(%rip)        # bfc8 <__libc_start_main@GLIBC_2.34>
    1255:	f4                   	hlt
    1256:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    125d:	00 00 00 

0000000000001260 <deregister_tm_clones>:
    1260:	48 8d 3d a9 ad 00 00 	lea    0xada9(%rip),%rdi        # c010 <__TMC_END__>
    1267:	48 8d 05 a2 ad 00 00 	lea    0xada2(%rip),%rax        # c010 <__TMC_END__>
    126e:	48 39 f8             	cmp    %rdi,%rax
    1271:	74 15                	je     1288 <deregister_tm_clones+0x28>
    1273:	48 8b 05 56 ad 00 00 	mov    0xad56(%rip),%rax        # bfd0 <_ITM_deregisterTMCloneTable@Base>
    127a:	48 85 c0             	test   %rax,%rax
    127d:	74 09                	je     1288 <deregister_tm_clones+0x28>
    127f:	ff e0                	jmp    *%rax
    1281:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1288:	c3                   	ret
    1289:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001290 <register_tm_clones>:
    1290:	48 8d 3d 79 ad 00 00 	lea    0xad79(%rip),%rdi        # c010 <__TMC_END__>
    1297:	48 8d 35 72 ad 00 00 	lea    0xad72(%rip),%rsi        # c010 <__TMC_END__>
    129e:	48 29 fe             	sub    %rdi,%rsi
    12a1:	48 89 f0             	mov    %rsi,%rax
    12a4:	48 c1 ee 3f          	shr    $0x3f,%rsi
    12a8:	48 c1 f8 03          	sar    $0x3,%rax
    12ac:	48 01 c6             	add    %rax,%rsi
    12af:	48 d1 fe             	sar    $1,%rsi
    12b2:	74 14                	je     12c8 <register_tm_clones+0x38>
    12b4:	48 8b 05 2d ad 00 00 	mov    0xad2d(%rip),%rax        # bfe8 <_ITM_registerTMCloneTable@Base>
    12bb:	48 85 c0             	test   %rax,%rax
    12be:	74 08                	je     12c8 <register_tm_clones+0x38>
    12c0:	ff e0                	jmp    *%rax
    12c2:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    12c8:	c3                   	ret
    12c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000012d0 <__do_global_dtors_aux>:
    12d0:	f3 0f 1e fa          	endbr64
    12d4:	80 3d 35 ad 00 00 00 	cmpb   $0x0,0xad35(%rip)        # c010 <__TMC_END__>
    12db:	75 2b                	jne    1308 <__do_global_dtors_aux+0x38>
    12dd:	55                   	push   %rbp
    12de:	48 83 3d 0a ad 00 00 	cmpq   $0x0,0xad0a(%rip)        # bff0 <__cxa_finalize@GLIBC_2.2.5>
    12e5:	00 
    12e6:	48 89 e5             	mov    %rsp,%rbp
    12e9:	74 0c                	je     12f7 <__do_global_dtors_aux+0x27>
    12eb:	48 8b 3d 16 ad 00 00 	mov    0xad16(%rip),%rdi        # c008 <__dso_handle>
    12f2:	e8 29 ff ff ff       	call   1220 <__cxa_finalize@plt>
    12f7:	e8 64 ff ff ff       	call   1260 <deregister_tm_clones>
    12fc:	c6 05 0d ad 00 00 01 	movb   $0x1,0xad0d(%rip)        # c010 <__TMC_END__>
    1303:	5d                   	pop    %rbp
    1304:	c3                   	ret
    1305:	0f 1f 00             	nopl   (%rax)
    1308:	c3                   	ret
    1309:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001310 <frame_dummy>:
    1310:	f3 0f 1e fa          	endbr64
    1314:	e9 77 ff ff ff       	jmp    1290 <register_tm_clones>
    1319:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000001320 <set_operators>:
    1320:	48 8d 05 dd 6c 00 00 	lea    0x6cdd(%rip),%rax        # 8004 <_IO_stdin_used+0x4>
    1327:	48 89 07             	mov    %rax,(%rdi)
    132a:	48 8d 05 d4 6c 00 00 	lea    0x6cd4(%rip),%rax        # 8005 <_IO_stdin_used+0x5>
    1331:	48 89 47 08          	mov    %rax,0x8(%rdi)
    1335:	48 8d 05 cb 6c 00 00 	lea    0x6ccb(%rip),%rax        # 8007 <_IO_stdin_used+0x7>
    133c:	48 89 47 10          	mov    %rax,0x10(%rdi)
    1340:	48 8d 05 c3 6c 00 00 	lea    0x6cc3(%rip),%rax        # 800a <_IO_stdin_used+0xa>
    1347:	48 89 47 18          	mov    %rax,0x18(%rdi)
    134b:	48 8d 05 d0 6c 00 00 	lea    0x6cd0(%rip),%rax        # 8022 <_IO_stdin_used+0x22>
    1352:	48 89 47 20          	mov    %rax,0x20(%rdi)
    1356:	48 8d 05 b0 6c 00 00 	lea    0x6cb0(%rip),%rax        # 800d <_IO_stdin_used+0xd>
    135d:	48 89 47 28          	mov    %rax,0x28(%rdi)
    1361:	48 8d 05 a6 6c 00 00 	lea    0x6ca6(%rip),%rax        # 800e <_IO_stdin_used+0xe>
    1368:	48 89 47 30          	mov    %rax,0x30(%rdi)
    136c:	48 8d 05 9d 6c 00 00 	lea    0x6c9d(%rip),%rax        # 8010 <_IO_stdin_used+0x10>
    1373:	48 89 47 38          	mov    %rax,0x38(%rdi)
    1377:	48 8d 05 ba 6c 00 00 	lea    0x6cba(%rip),%rax        # 8038 <_IO_stdin_used+0x38>
    137e:	48 89 47 40          	mov    %rax,0x40(%rdi)
    1382:	48 c7 47 48 00 00 00 	movq   $0x0,0x48(%rdi)
    1389:	00 
    138a:	31 c0                	xor    %eax,%eax
    138c:	31 ff                	xor    %edi,%edi
    138e:	c3                   	ret
    138f:	90                   	nop

0000000000001390 <signal_parent_sigint>:
    1390:	50                   	push   %rax
    1391:	48 8d 35 40 71 00 00 	lea    0x7140(%rip),%rsi        # 84d8 <_IO_stdin_used+0x4d8>
    1398:	ba 01 00 00 00       	mov    $0x1,%edx
    139d:	31 ff                	xor    %edi,%edi
    139f:	e8 ec fc ff ff       	call   1090 <write@plt>
    13a4:	e8 07 fe ff ff       	call   11b0 <rl_on_new_line@plt>
    13a9:	58                   	pop    %rax
    13aa:	31 c0                	xor    %eax,%eax
    13ac:	31 ff                	xor    %edi,%edi
    13ae:	31 d2                	xor    %edx,%edx
    13b0:	31 f6                	xor    %esi,%esi
    13b2:	e9 e9 fd ff ff       	jmp    11a0 <rl_redisplay@plt>
    13b7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    13be:	00 00 

00000000000013c0 <delete_bnode>:
    13c0:	48 85 ff             	test   %rdi,%rdi
    13c3:	74 2d                	je     13f2 <delete_bnode+0x32>
    13c5:	53                   	push   %rbx
    13c6:	48 8b 47 10          	mov    0x10(%rdi),%rax
    13ca:	48 89 fb             	mov    %rdi,%rbx
    13cd:	48 89 c7             	mov    %rax,%rdi
    13d0:	e8 6b 0b 00 00       	call   1f40 <free_split>
    13d5:	48 8b 7b 20          	mov    0x20(%rbx),%rdi
    13d9:	e8 62 fc ff ff       	call   1040 <free@plt>
    13de:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    13e2:	e8 59 fc ff ff       	call   1040 <free@plt>
    13e7:	48 89 df             	mov    %rbx,%rdi
    13ea:	5b                   	pop    %rbx
    13eb:	31 c0                	xor    %eax,%eax
    13ed:	e9 4e fc ff ff       	jmp    1040 <free@plt>
    13f2:	31 c0                	xor    %eax,%eax
    13f4:	c3                   	ret
    13f5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    13fc:	00 00 00 00 

0000000000001400 <print_env>:
    1400:	48 8b 17             	mov    (%rdi),%rdx
    1403:	48 85 d2             	test   %rdx,%rdx
    1406:	74 1c                	je     1424 <print_env+0x24>
    1408:	53                   	push   %rbx
    1409:	48 89 fb             	mov    %rdi,%rbx
    140c:	48 83 c3 08          	add    $0x8,%rbx
    1410:	31 c0                	xor    %eax,%eax
    1412:	e8 19 00 00 00       	call   1430 <_ZL6printfPKcU17pass_object_size1z>
    1417:	48 8b 13             	mov    (%rbx),%rdx
    141a:	48 83 c3 08          	add    $0x8,%rbx
    141e:	48 85 d2             	test   %rdx,%rdx
    1421:	75 ed                	jne    1410 <print_env+0x10>
    1423:	5b                   	pop    %rbx
    1424:	31 c0                	xor    %eax,%eax
    1426:	31 ff                	xor    %edi,%edi
    1428:	31 d2                	xor    %edx,%edx
    142a:	c3                   	ret
    142b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001430 <_ZL6printfPKcU17pass_object_size1z>:
    1430:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    1437:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    143c:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    1441:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    1446:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    144b:	84 c0                	test   %al,%al
    144d:	74 31                	je     1480 <_ZL6printfPKcU17pass_object_size1z+0x50>
    144f:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    1454:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
    1459:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
    145e:	0f 29 5c 24 60       	movaps %xmm3,0x60(%rsp)
    1463:	0f 29 64 24 70       	movaps %xmm4,0x70(%rsp)
    1468:	0f 29 ac 24 80 00 00 	movaps %xmm5,0x80(%rsp)
    146f:	00 
    1470:	0f 29 b4 24 90 00 00 	movaps %xmm6,0x90(%rsp)
    1477:	00 
    1478:	0f 29 bc 24 a0 00 00 	movaps %xmm7,0xa0(%rsp)
    147f:	00 
    1480:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1487:	00 00 
    1489:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
    1490:	00 
    1491:	48 89 e0             	mov    %rsp,%rax
    1494:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    149b:	00 
    149c:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
    14a3:	00 
    14a4:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    14ab:	00 
    14ac:	48 b8 10 00 00 00 30 	movabs $0x3000000010,%rax
    14b3:	00 00 00 
    14b6:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
    14bd:	00 
    14be:	48 8d 35 4d 6b 00 00 	lea    0x6b4d(%rip),%rsi        # 8012 <_IO_stdin_used+0x12>
    14c5:	48 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%rdx
    14cc:	00 
    14cd:	bf 01 00 00 00       	mov    $0x1,%edi
    14d2:	e8 89 fb ff ff       	call   1060 <__vprintf_chk@plt>
    14d7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    14de:	00 00 
    14e0:	48 3b 84 24 d0 00 00 	cmp    0xd0(%rsp),%rax
    14e7:	00 
    14e8:	75 18                	jne    1502 <_ZL6printfPKcU17pass_object_size1z+0xd2>
    14ea:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    14f1:	31 c0                	xor    %eax,%eax
    14f3:	31 c9                	xor    %ecx,%ecx
    14f5:	31 ff                	xor    %edi,%edi
    14f7:	31 d2                	xor    %edx,%edx
    14f9:	31 f6                	xor    %esi,%esi
    14fb:	45 31 c0             	xor    %r8d,%r8d
    14fe:	45 31 c9             	xor    %r9d,%r9d
    1501:	c3                   	ret
    1502:	e8 d9 fb ff ff       	call   10e0 <__stack_chk_fail@plt>
    1507:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    150e:	00 00 

0000000000001510 <main>:
    1510:	55                   	push   %rbp
    1511:	41 57                	push   %r15
    1513:	41 56                	push   %r14
    1515:	41 55                	push   %r13
    1517:	41 54                	push   %r12
    1519:	53                   	push   %rbx
    151a:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
    1521:	48 89 d7             	mov    %rdx,%rdi
    1524:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    152b:	00 00 
    152d:	48 89 84 24 80 00 00 	mov    %rax,0x80(%rsp)
    1534:	00 
    1535:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    153c:	00 
    153d:	e8 ee 08 00 00       	call   1e30 <ft_coppyarrstr>
    1542:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1547:	c7 44 24 10 00 00 00 	movl   $0x0,0x10(%rsp)
    154e:	00 
    154f:	0f 57 c0             	xorps  %xmm0,%xmm0
    1552:	0f 11 44 24 18       	movups %xmm0,0x18(%rsp)
    1557:	c7 44 24 28 00 00 00 	movl   $0x0,0x28(%rsp)
    155e:	00 
    155f:	48 8d 05 9e 6a 00 00 	lea    0x6a9e(%rip),%rax        # 8004 <_IO_stdin_used+0x4>
    1566:	48 89 44 24 30       	mov    %rax,0x30(%rsp)
    156b:	48 8d 05 93 6a 00 00 	lea    0x6a93(%rip),%rax        # 8005 <_IO_stdin_used+0x5>
    1572:	48 89 44 24 38       	mov    %rax,0x38(%rsp)
    1577:	48 8d 05 89 6a 00 00 	lea    0x6a89(%rip),%rax        # 8007 <_IO_stdin_used+0x7>
    157e:	48 89 44 24 40       	mov    %rax,0x40(%rsp)
    1583:	48 8d 05 80 6a 00 00 	lea    0x6a80(%rip),%rax        # 800a <_IO_stdin_used+0xa>
    158a:	48 89 44 24 48       	mov    %rax,0x48(%rsp)
    158f:	48 8d 05 8c 6a 00 00 	lea    0x6a8c(%rip),%rax        # 8022 <_IO_stdin_used+0x22>
    1596:	48 89 44 24 50       	mov    %rax,0x50(%rsp)
    159b:	48 8d 05 6b 6a 00 00 	lea    0x6a6b(%rip),%rax        # 800d <_IO_stdin_used+0xd>
    15a2:	48 89 44 24 58       	mov    %rax,0x58(%rsp)
    15a7:	48 8d 05 60 6a 00 00 	lea    0x6a60(%rip),%rax        # 800e <_IO_stdin_used+0xe>
    15ae:	48 89 44 24 60       	mov    %rax,0x60(%rsp)
    15b3:	48 8d 05 56 6a 00 00 	lea    0x6a56(%rip),%rax        # 8010 <_IO_stdin_used+0x10>
    15ba:	48 89 44 24 68       	mov    %rax,0x68(%rsp)
    15bf:	48 8d 05 72 6a 00 00 	lea    0x6a72(%rip),%rax        # 8038 <_IO_stdin_used+0x38>
    15c6:	48 89 44 24 70       	mov    %rax,0x70(%rsp)
    15cb:	48 c7 44 24 78 00 00 	movq   $0x0,0x78(%rsp)
    15d2:	00 00 
    15d4:	48 8d 35 b5 fd ff ff 	lea    -0x24b(%rip),%rsi        # 1390 <signal_parent_sigint>
    15db:	bf 02 00 00 00       	mov    $0x2,%edi
    15e0:	e8 8b fb ff ff       	call   1170 <signal@plt>
    15e5:	48 8d 3d 2a 6a 00 00 	lea    0x6a2a(%rip),%rdi        # 8016 <_IO_stdin_used+0x16>
    15ec:	e8 1f fb ff ff       	call   1110 <readline@plt>
    15f1:	48 85 c0             	test   %rax,%rax
    15f4:	0f 84 9d 00 00 00    	je     1697 <main+0x187>
    15fa:	49 89 c7             	mov    %rax,%r15
    15fd:	48 8d 1d 12 6a 00 00 	lea    0x6a12(%rip),%rbx        # 8016 <_IO_stdin_used+0x16>
    1604:	4c 8d 74 24 30       	lea    0x30(%rsp),%r14
    1609:	4c 8d 64 24 08       	lea    0x8(%rsp),%r12
    160e:	4c 8d 6c 24 04       	lea    0x4(%rsp),%r13
    1613:	eb 28                	jmp    163d <main+0x12d>
    1615:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    161c:	00 00 00 00 
    1620:	e8 8b fb ff ff       	call   11b0 <rl_on_new_line@plt>
    1625:	4c 89 ff             	mov    %r15,%rdi
    1628:	e8 13 fa ff ff       	call   1040 <free@plt>
    162d:	48 89 df             	mov    %rbx,%rdi
    1630:	e8 db fa ff ff       	call   1110 <readline@plt>
    1635:	49 89 c7             	mov    %rax,%r15
    1638:	48 85 c0             	test   %rax,%rax
    163b:	74 5a                	je     1697 <main+0x187>
    163d:	41 80 3f 00          	cmpb   $0x0,(%r15)
    1641:	74 e2                	je     1625 <main+0x115>
    1643:	ff 44 24 04          	incl   0x4(%rsp)
    1647:	4c 89 ff             	mov    %r15,%rdi
    164a:	e8 21 fa ff ff       	call   1070 <add_history@plt>
    164f:	4c 89 ff             	mov    %r15,%rdi
    1652:	4c 89 f6             	mov    %r14,%rsi
    1655:	4c 89 e2             	mov    %r12,%rdx
    1658:	4c 89 e9             	mov    %r13,%rcx
    165b:	e8 00 44 00 00       	call   5a60 <create_exec_tree>
    1660:	48 85 c0             	test   %rax,%rax
    1663:	74 bb                	je     1620 <main+0x110>
    1665:	48 89 c5             	mov    %rax,%rbp
    1668:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    166d:	48 89 c7             	mov    %rax,%rdi
    1670:	4c 89 e6             	mov    %r12,%rsi
    1673:	e8 18 5a 00 00       	call   7090 <execute>
    1678:	48 89 ef             	mov    %rbp,%rdi
    167b:	48 8d 35 3e fd ff ff 	lea    -0x2c2(%rip),%rsi        # 13c0 <delete_bnode>
    1682:	e8 c9 00 00 00       	call   1750 <btree_apply_suffix>
    1687:	48 8b 7c 24 18       	mov    0x18(%rsp),%rdi
    168c:	e8 4f 5a 00 00       	call   70e0 <wait_and_get_exit_value>
    1691:	89 44 24 10          	mov    %eax,0x10(%rsp)
    1695:	eb 89                	jmp    1620 <main+0x110>
    1697:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    169c:	31 f6                	xor    %esi,%esi
    169e:	e8 bd 24 00 00       	call   3b60 <ft_exit>
    16a3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    16aa:	00 00 
    16ac:	48 3b 84 24 80 00 00 	cmp    0x80(%rsp),%rax
    16b3:	00 
    16b4:	75 14                	jne    16ca <main+0x1ba>
    16b6:	31 c0                	xor    %eax,%eax
    16b8:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
    16bf:	5b                   	pop    %rbx
    16c0:	41 5c                	pop    %r12
    16c2:	41 5d                	pop    %r13
    16c4:	41 5e                	pop    %r14
    16c6:	41 5f                	pop    %r15
    16c8:	5d                   	pop    %rbp
    16c9:	c3                   	ret
    16ca:	e8 11 fa ff ff       	call   10e0 <__stack_chk_fail@plt>
    16cf:	90                   	nop

00000000000016d0 <btree_apply_prefix>:
    16d0:	41 56                	push   %r14
    16d2:	53                   	push   %rbx
    16d3:	50                   	push   %rax
    16d4:	48 89 f3             	mov    %rsi,%rbx
    16d7:	49 89 fe             	mov    %rdi,%r14
    16da:	eb 0d                	jmp    16e9 <btree_apply_prefix+0x19>
    16dc:	0f 1f 40 00          	nopl   0x0(%rax)
    16e0:	4d 8b 76 08          	mov    0x8(%r14),%r14
    16e4:	4d 85 f6             	test   %r14,%r14
    16e7:	74 17                	je     1700 <btree_apply_prefix+0x30>
    16e9:	4c 89 f7             	mov    %r14,%rdi
    16ec:	ff d3                	call   *%rbx
    16ee:	49 8b 3e             	mov    (%r14),%rdi
    16f1:	48 85 ff             	test   %rdi,%rdi
    16f4:	74 ea                	je     16e0 <btree_apply_prefix+0x10>
    16f6:	48 89 de             	mov    %rbx,%rsi
    16f9:	e8 d2 ff ff ff       	call   16d0 <btree_apply_prefix>
    16fe:	eb e0                	jmp    16e0 <btree_apply_prefix+0x10>
    1700:	48 83 c4 08          	add    $0x8,%rsp
    1704:	5b                   	pop    %rbx
    1705:	41 5e                	pop    %r14
    1707:	31 ff                	xor    %edi,%edi
    1709:	31 f6                	xor    %esi,%esi
    170b:	c3                   	ret
    170c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001710 <btree_apply_infix>:
    1710:	41 56                	push   %r14
    1712:	53                   	push   %rbx
    1713:	50                   	push   %rax
    1714:	48 89 f3             	mov    %rsi,%rbx
    1717:	49 89 fe             	mov    %rdi,%r14
    171a:	eb 12                	jmp    172e <btree_apply_infix+0x1e>
    171c:	0f 1f 40 00          	nopl   0x0(%rax)
    1720:	4c 89 f7             	mov    %r14,%rdi
    1723:	ff d3                	call   *%rbx
    1725:	4d 8b 76 08          	mov    0x8(%r14),%r14
    1729:	4d 85 f6             	test   %r14,%r14
    172c:	74 12                	je     1740 <btree_apply_infix+0x30>
    172e:	49 8b 3e             	mov    (%r14),%rdi
    1731:	48 85 ff             	test   %rdi,%rdi
    1734:	74 ea                	je     1720 <btree_apply_infix+0x10>
    1736:	48 89 de             	mov    %rbx,%rsi
    1739:	e8 d2 ff ff ff       	call   1710 <btree_apply_infix>
    173e:	eb e0                	jmp    1720 <btree_apply_infix+0x10>
    1740:	48 83 c4 08          	add    $0x8,%rsp
    1744:	5b                   	pop    %rbx
    1745:	41 5e                	pop    %r14
    1747:	31 ff                	xor    %edi,%edi
    1749:	31 f6                	xor    %esi,%esi
    174b:	c3                   	ret
    174c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000001750 <btree_apply_suffix>:
    1750:	41 56                	push   %r14
    1752:	53                   	push   %rbx
    1753:	50                   	push   %rax
    1754:	48 89 fb             	mov    %rdi,%rbx
    1757:	48 8b 3f             	mov    (%rdi),%rdi
    175a:	48 85 ff             	test   %rdi,%rdi
    175d:	74 0b                	je     176a <btree_apply_suffix+0x1a>
    175f:	49 89 f6             	mov    %rsi,%r14
    1762:	e8 e9 ff ff ff       	call   1750 <btree_apply_suffix>
    1767:	4c 89 f6             	mov    %r14,%rsi
    176a:	48 8b 7b 08          	mov    0x8(%rbx),%rdi
    176e:	48 85 ff             	test   %rdi,%rdi
    1771:	74 0b                	je     177e <btree_apply_suffix+0x2e>
    1773:	49 89 f6             	mov    %rsi,%r14
    1776:	e8 d5 ff ff ff       	call   1750 <btree_apply_suffix>
    177b:	4c 89 f6             	mov    %r14,%rsi
    177e:	48 89 df             	mov    %rbx,%rdi
    1781:	48 83 c4 08          	add    $0x8,%rsp
    1785:	5b                   	pop    %rbx
    1786:	41 5e                	pop    %r14
    1788:	ff e6                	jmp    *%rsi
    178a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001790 <print_btree_pyramid>:
    1790:	55                   	push   %rbp
    1791:	41 57                	push   %r15
    1793:	41 56                	push   %r14
    1795:	41 55                	push   %r13
    1797:	41 54                	push   %r12
    1799:	53                   	push   %rbx
    179a:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    17a1:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    17a8:	00 
    17a9:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    17b0:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    17b7:	00 
    17b8:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    17bf:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    17c6:	00 
    17c7:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    17ce:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    17d5:	00 
    17d6:	48 81 ec 38 0e 00 00 	sub    $0xe38,%rsp
    17dd:	49 89 fe             	mov    %rdi,%r14
    17e0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    17e7:	00 00 
    17e9:	48 89 84 24 30 4e 00 	mov    %rax,0x4e30(%rsp)
    17f0:	00 
    17f1:	48 8d 5c 24 10       	lea    0x10(%rsp),%rbx
    17f6:	ba 20 4e 00 00       	mov    $0x4e20,%edx
    17fb:	48 89 df             	mov    %rbx,%rdi
    17fe:	be 20 00 00 00       	mov    $0x20,%esi
    1803:	e8 f8 f8 ff ff       	call   1100 <memset@plt>
    1808:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
    180f:	00 
    1810:	4c 8d 44 24 0c       	lea    0xc(%rsp),%r8
    1815:	4c 89 f7             	mov    %r14,%rdi
    1818:	31 f6                	xor    %esi,%esi
    181a:	ba 32 00 00 00       	mov    $0x32,%edx
    181f:	48 89 d9             	mov    %rbx,%rcx
    1822:	e8 39 01 00 00       	call   1960 <print_ascii_tree>
    1827:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    182b:	83 c0 02             	add    $0x2,%eax
    182e:	85 c0                	test   %eax,%eax
    1830:	0f 8e e5 00 00 00    	jle    191b <print_btree_pyramid+0x18b>
    1836:	89 c0                	mov    %eax,%eax
    1838:	48 89 04 24          	mov    %rax,(%rsp)
    183c:	4c 8d bc 24 d7 00 00 	lea    0xd7(%rsp),%r15
    1843:	00 
    1844:	45 31 e4             	xor    %r12d,%r12d
    1847:	4c 8b 2d 8a a7 00 00 	mov    0xa78a(%rip),%r13        # bfd8 <stdout@GLIBC_2.2.5>
    184e:	eb 29                	jmp    1879 <print_btree_pyramid+0xe9>
    1850:	49 8b 75 00          	mov    0x0(%r13),%rsi
    1854:	bf 0a 00 00 00       	mov    $0xa,%edi
    1859:	e8 02 f9 ff ff       	call   1160 <putc@plt>
    185e:	49 ff c4             	inc    %r12
    1861:	49 81 c7 c8 00 00 00 	add    $0xc8,%r15
    1868:	48 81 c3 c8 00 00 00 	add    $0xc8,%rbx
    186f:	4c 3b 24 24          	cmp    (%rsp),%r12
    1873:	0f 84 a2 00 00 00    	je     191b <print_btree_pyramid+0x18b>
    1879:	b8 c8 00 00 00       	mov    $0xc8,%eax
    187e:	49 69 cc c8 00 00 00 	imul   $0xc8,%r12,%rcx
    1885:	48 01 e1             	add    %rsp,%rcx
    1888:	48 83 c1 10          	add    $0x10,%rcx
    188c:	4c 89 fa             	mov    %r15,%rdx
    188f:	90                   	nop
    1890:	80 3a 20             	cmpb   $0x20,(%rdx)
    1893:	75 2b                	jne    18c0 <print_btree_pyramid+0x130>
    1895:	80 7a ff 20          	cmpb   $0x20,-0x1(%rdx)
    1899:	75 35                	jne    18d0 <print_btree_pyramid+0x140>
    189b:	80 7a fe 20          	cmpb   $0x20,-0x2(%rdx)
    189f:	75 38                	jne    18d9 <print_btree_pyramid+0x149>
    18a1:	8d 70 fc             	lea    -0x4(%rax),%esi
    18a4:	80 3c 0e 20          	cmpb   $0x20,(%rsi,%rcx,1)
    18a8:	75 40                	jne    18ea <print_btree_pyramid+0x15a>
    18aa:	48 83 c2 fc          	add    $0xfffffffffffffffc,%rdx
    18ae:	83 c0 fc             	add    $0xfffffffc,%eax
    18b1:	75 dd                	jne    1890 <print_btree_pyramid+0x100>
    18b3:	eb 9b                	jmp    1850 <print_btree_pyramid+0xc0>
    18b5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    18bc:	00 00 00 00 
    18c0:	8d 70 ff             	lea    -0x1(%rax),%esi
    18c3:	85 f6                	test   %esi,%esi
    18c5:	79 2e                	jns    18f5 <print_btree_pyramid+0x165>
    18c7:	eb 87                	jmp    1850 <print_btree_pyramid+0xc0>
    18c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    18d0:	89 c6                	mov    %eax,%esi
    18d2:	ff c8                	dec    %eax
    18d4:	83 c6 fe             	add    $0xfffffffe,%esi
    18d7:	eb 08                	jmp    18e1 <print_btree_pyramid+0x151>
    18d9:	89 c6                	mov    %eax,%esi
    18db:	83 c0 fe             	add    $0xfffffffe,%eax
    18de:	83 c6 fd             	add    $0xfffffffd,%esi
    18e1:	85 f6                	test   %esi,%esi
    18e3:	79 10                	jns    18f5 <print_btree_pyramid+0x165>
    18e5:	e9 66 ff ff ff       	jmp    1850 <print_btree_pyramid+0xc0>
    18ea:	83 c0 fd             	add    $0xfffffffd,%eax
    18ed:	85 f6                	test   %esi,%esi
    18ef:	0f 88 5b ff ff ff    	js     1850 <print_btree_pyramid+0xc0>
    18f5:	89 c5                	mov    %eax,%ebp
    18f7:	45 31 f6             	xor    %r14d,%r14d
    18fa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1900:	42 0f be 3c 33       	movsbl (%rbx,%r14,1),%edi
    1905:	49 8b 75 00          	mov    0x0(%r13),%rsi
    1909:	e8 52 f8 ff ff       	call   1160 <putc@plt>
    190e:	49 ff c6             	inc    %r14
    1911:	4c 39 f5             	cmp    %r14,%rbp
    1914:	75 ea                	jne    1900 <print_btree_pyramid+0x170>
    1916:	e9 35 ff ff ff       	jmp    1850 <print_btree_pyramid+0xc0>
    191b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1922:	00 00 
    1924:	48 3b 84 24 30 4e 00 	cmp    0x4e30(%rsp),%rax
    192b:	00 
    192c:	75 1f                	jne    194d <print_btree_pyramid+0x1bd>
    192e:	48 81 c4 38 4e 00 00 	add    $0x4e38,%rsp
    1935:	5b                   	pop    %rbx
    1936:	41 5c                	pop    %r12
    1938:	41 5d                	pop    %r13
    193a:	41 5e                	pop    %r14
    193c:	41 5f                	pop    %r15
    193e:	5d                   	pop    %rbp
    193f:	31 c0                	xor    %eax,%eax
    1941:	31 c9                	xor    %ecx,%ecx
    1943:	31 ff                	xor    %edi,%edi
    1945:	31 d2                	xor    %edx,%edx
    1947:	31 f6                	xor    %esi,%esi
    1949:	45 31 c0             	xor    %r8d,%r8d
    194c:	c3                   	ret
    194d:	e8 8e f7 ff ff       	call   10e0 <__stack_chk_fail@plt>
    1952:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    1959:	1f 84 00 00 00 00 00 

0000000000001960 <print_ascii_tree>:
    1960:	55                   	push   %rbp
    1961:	41 57                	push   %r15
    1963:	41 56                	push   %r14
    1965:	41 55                	push   %r13
    1967:	41 54                	push   %r12
    1969:	53                   	push   %rbx
    196a:	48 83 ec 18          	sub    $0x18,%rsp
    196e:	4c 89 44 24 08       	mov    %r8,0x8(%rsp)
    1973:	48 89 0c 24          	mov    %rcx,(%rsp)
    1977:	48 85 ff             	test   %rdi,%rdi
    197a:	0f 84 04 02 00 00    	je     1b84 <print_ascii_tree+0x224>
    1980:	89 d5                	mov    %edx,%ebp
    1982:	41 89 f1             	mov    %esi,%r9d
    1985:	49 89 fe             	mov    %rdi,%r14
    1988:	48 8d 15 95 66 00 00 	lea    0x6695(%rip),%rdx        # 8024 <_IO_stdin_used+0x24>
    198f:	4c 8d 2d 9f 68 00 00 	lea    0x689f(%rip),%r13        # 8235 <_IO_stdin_used+0x235>
    1996:	eb 2d                	jmp    19c5 <print_ascii_tree+0x65>
    1998:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    199f:	00 
    19a0:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    19a5:	41 ff c1             	inc    %r9d
    19a8:	44 01 fd             	add    %r15d,%ebp
    19ab:	4d 89 ee             	mov    %r13,%r14
    19ae:	4d 85 ed             	test   %r13,%r13
    19b1:	48 8d 15 6c 66 00 00 	lea    0x666c(%rip),%rdx        # 8024 <_IO_stdin_used+0x24>
    19b8:	4c 8d 2d 76 68 00 00 	lea    0x6876(%rip),%r13        # 8235 <_IO_stdin_used+0x235>
    19bf:	0f 84 bf 01 00 00    	je     1b84 <print_ascii_tree+0x224>
    19c5:	41 8b 46 18          	mov    0x18(%r14),%eax
    19c9:	48 83 f8 04          	cmp    $0x4,%rax
    19cd:	4c 89 4c 24 10       	mov    %r9,0x10(%rsp)
    19d2:	0f 87 bb 00 00 00    	ja     1a93 <print_ascii_tree+0x133>
    19d8:	48 8d 0d 71 6b 00 00 	lea    0x6b71(%rip),%rcx        # 8550 <_IO_stdin_used+0x550>
    19df:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    19e3:	48 01 c8             	add    %rcx,%rax
    19e6:	4c 8d 25 18 66 00 00 	lea    0x6618(%rip),%r12        # 8005 <_IO_stdin_used+0x5>
    19ed:	48 8b 0c 24          	mov    (%rsp),%rcx
    19f1:	ff e0                	jmp    *%rax
    19f3:	49 8b 46 10          	mov    0x10(%r14),%rax
    19f7:	4c 8d 25 35 66 00 00 	lea    0x6635(%rip),%r12        # 8033 <_IO_stdin_used+0x33>
    19fe:	48 85 c0             	test   %rax,%rax
    1a01:	0f 84 99 00 00 00    	je     1aa0 <print_ascii_tree+0x140>
    1a07:	c6 05 12 a6 00 00 00 	movb   $0x0,0xa612(%rip)        # c020 <get_label.buf>
    1a0e:	48 8b 30             	mov    (%rax),%rsi
    1a11:	4c 8d 25 08 a6 00 00 	lea    0xa608(%rip),%r12        # c020 <get_label.buf>
    1a18:	48 85 f6             	test   %rsi,%rsi
    1a1b:	0f 84 cf 00 00 00    	je     1af0 <print_ascii_tree+0x190>
    1a21:	bb 01 00 00 00       	mov    $0x1,%ebx
    1a26:	4c 8d 25 f3 a5 00 00 	lea    0xa5f3(%rip),%r12        # c020 <get_label.buf>
    1a2d:	0f 1f 00             	nopl   (%rax)
    1a30:	80 3e 00             	cmpb   $0x0,(%rsi)
    1a33:	48 0f 44 f2          	cmove  %rdx,%rsi
    1a37:	ba 00 01 00 00       	mov    $0x100,%edx
    1a3c:	4c 89 e7             	mov    %r12,%rdi
    1a3f:	e8 ec f5 ff ff       	call   1030 <__strcat_chk@plt>
    1a44:	ba 00 01 00 00       	mov    $0x100,%edx
    1a49:	4c 89 e7             	mov    %r12,%rdi
    1a4c:	4c 89 ee             	mov    %r13,%rsi
    1a4f:	e8 dc f5 ff ff       	call   1030 <__strcat_chk@plt>
    1a54:	48 8d 15 c9 65 00 00 	lea    0x65c9(%rip),%rdx        # 8024 <_IO_stdin_used+0x24>
    1a5b:	49 8b 46 10          	mov    0x10(%r14),%rax
    1a5f:	48 63 db             	movslq %ebx,%rbx
    1a62:	48 8b 34 d8          	mov    (%rax,%rbx,8),%rsi
    1a66:	ff c3                	inc    %ebx
    1a68:	48 85 f6             	test   %rsi,%rsi
    1a6b:	75 c3                	jne    1a30 <print_ascii_tree+0xd0>
    1a6d:	48 8b 0c 24          	mov    (%rsp),%rcx
    1a71:	4c 8b 4c 24 10       	mov    0x10(%rsp),%r9
    1a76:	eb 28                	jmp    1aa0 <print_ascii_tree+0x140>
    1a78:	4c 8d 25 b8 65 00 00 	lea    0x65b8(%rip),%r12        # 8037 <_IO_stdin_used+0x37>
    1a7f:	eb 1f                	jmp    1aa0 <print_ascii_tree+0x140>
    1a81:	4c 8d 25 7f 65 00 00 	lea    0x657f(%rip),%r12        # 8007 <_IO_stdin_used+0x7>
    1a88:	eb 16                	jmp    1aa0 <print_ascii_tree+0x140>
    1a8a:	4c 8d 25 73 65 00 00 	lea    0x6573(%rip),%r12        # 8004 <_IO_stdin_used+0x4>
    1a91:	eb 0d                	jmp    1aa0 <print_ascii_tree+0x140>
    1a93:	4c 8d 25 a0 65 00 00 	lea    0x65a0(%rip),%r12        # 803a <_IO_stdin_used+0x3a>
    1a9a:	48 8b 0c 24          	mov    (%rsp),%rcx
    1a9e:	66 90                	xchg   %ax,%ax
    1aa0:	41 0f b6 04 24       	movzbl (%r12),%eax
    1aa5:	84 c0                	test   %al,%al
    1aa7:	74 47                	je     1af0 <print_ascii_tree+0x190>
    1aa9:	43 8d 1c 09          	lea    (%r9,%r9,1),%ebx
    1aad:	48 63 d3             	movslq %ebx,%rdx
    1ab0:	41 b8 01 00 00 00    	mov    $0x1,%r8d
    1ab6:	48 69 d2 c8 00 00 00 	imul   $0xc8,%rdx,%rdx
    1abd:	48 01 ca             	add    %rcx,%rdx
    1ac0:	89 ee                	mov    %ebp,%esi
    1ac2:	eb 1d                	jmp    1ae1 <print_ascii_tree+0x181>
    1ac4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    1acb:	00 00 00 00 00 
    1ad0:	4d 63 c0             	movslq %r8d,%r8
    1ad3:	43 0f b6 04 04       	movzbl (%r12,%r8,1),%eax
    1ad8:	ff c6                	inc    %esi
    1ada:	41 ff c0             	inc    %r8d
    1add:	84 c0                	test   %al,%al
    1adf:	74 13                	je     1af4 <print_ascii_tree+0x194>
    1ae1:	81 fe c7 00 00 00    	cmp    $0xc7,%esi
    1ae7:	77 e7                	ja     1ad0 <print_ascii_tree+0x170>
    1ae9:	89 f7                	mov    %esi,%edi
    1aeb:	88 04 17             	mov    %al,(%rdi,%rdx,1)
    1aee:	eb e0                	jmp    1ad0 <print_ascii_tree+0x170>
    1af0:	43 8d 1c 09          	lea    (%r9,%r9,1),%ebx
    1af4:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1af9:	3b 18                	cmp    (%rax),%ebx
    1afb:	7e 07                	jle    1b04 <print_ascii_tree+0x1a4>
    1afd:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    1b02:	89 18                	mov    %ebx,(%rax)
    1b04:	44 8d 7b 06          	lea    0x6(%rbx),%r15d
    1b08:	49 8b 3e             	mov    (%r14),%rdi
    1b0b:	48 85 ff             	test   %rdi,%rdi
    1b0e:	74 34                	je     1b44 <print_ascii_tree+0x1e4>
    1b10:	89 e8                	mov    %ebp,%eax
    1b12:	ff c8                	dec    %eax
    1b14:	78 1b                	js     1b31 <print_ascii_tree+0x1d1>
    1b16:	89 da                	mov    %ebx,%edx
    1b18:	83 ca 01             	or     $0x1,%edx
    1b1b:	48 63 d2             	movslq %edx,%rdx
    1b1e:	89 c0                	mov    %eax,%eax
    1b20:	48 69 d2 c8 00 00 00 	imul   $0xc8,%rdx,%rdx
    1b27:	48 01 ca             	add    %rcx,%rdx
    1b2a:	c6 04 10 2f          	movb   $0x2f,(%rax,%rdx,1)
    1b2e:	49 8b 3e             	mov    (%r14),%rdi
    1b31:	41 8d 71 01          	lea    0x1(%r9),%esi
    1b35:	89 ea                	mov    %ebp,%edx
    1b37:	44 29 fa             	sub    %r15d,%edx
    1b3a:	4c 8b 44 24 08       	mov    0x8(%rsp),%r8
    1b3f:	e8 1c fe ff ff       	call   1960 <print_ascii_tree>
    1b44:	4d 8b 6e 08          	mov    0x8(%r14),%r13
    1b48:	4d 85 ed             	test   %r13,%r13
    1b4b:	74 37                	je     1b84 <print_ascii_tree+0x224>
    1b4d:	4c 89 e7             	mov    %r12,%rdi
    1b50:	e8 6b f5 ff ff       	call   10c0 <strlen@plt>
    1b55:	01 c5                	add    %eax,%ebp
    1b57:	81 fd c7 00 00 00    	cmp    $0xc7,%ebp
    1b5d:	0f 8f 3d fe ff ff    	jg     19a0 <print_ascii_tree+0x40>
    1b63:	83 cb 01             	or     $0x1,%ebx
    1b66:	48 63 c3             	movslq %ebx,%rax
    1b69:	48 63 cd             	movslq %ebp,%rcx
    1b6c:	48 69 c0 c8 00 00 00 	imul   $0xc8,%rax,%rax
    1b73:	48 03 04 24          	add    (%rsp),%rax
    1b77:	c6 04 01 5c          	movb   $0x5c,(%rcx,%rax,1)
    1b7b:	4d 8b 6e 08          	mov    0x8(%r14),%r13
    1b7f:	e9 1c fe ff ff       	jmp    19a0 <print_ascii_tree+0x40>
    1b84:	48 83 c4 18          	add    $0x18,%rsp
    1b88:	5b                   	pop    %rbx
    1b89:	41 5c                	pop    %r12
    1b8b:	41 5d                	pop    %r13
    1b8d:	41 5e                	pop    %r14
    1b8f:	41 5f                	pop    %r15
    1b91:	5d                   	pop    %rbp
    1b92:	31 c0                	xor    %eax,%eax
    1b94:	31 c9                	xor    %ecx,%ecx
    1b96:	31 ff                	xor    %edi,%edi
    1b98:	31 d2                	xor    %edx,%edx
    1b9a:	31 f6                	xor    %esi,%esi
    1b9c:	45 31 c0             	xor    %r8d,%r8d
    1b9f:	45 31 c9             	xor    %r9d,%r9d
    1ba2:	c3                   	ret
    1ba3:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1baa:	00 00 00 
    1bad:	0f 1f 00             	nopl   (%rax)

0000000000001bb0 <ft_append_arr_str>:
    1bb0:	41 56                	push   %r14
    1bb2:	53                   	push   %rbx
    1bb3:	50                   	push   %rax
    1bb4:	48 89 fb             	mov    %rdi,%rbx
    1bb7:	48 85 f6             	test   %rsi,%rsi
    1bba:	74 7e                	je     1c3a <ft_append_arr_str+0x8a>
    1bbc:	49 89 f6             	mov    %rsi,%r14
    1bbf:	48 85 db             	test   %rbx,%rbx
    1bc2:	74 7b                	je     1c3f <ft_append_arr_str+0x8f>
    1bc4:	48 8b 03             	mov    (%rbx),%rax
    1bc7:	48 85 c0             	test   %rax,%rax
    1bca:	74 24                	je     1bf0 <ft_append_arr_str+0x40>
    1bcc:	bf 02 00 00 00       	mov    $0x2,%edi
    1bd1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    1bd8:	0f 1f 84 00 00 00 00 
    1bdf:	00 
    1be0:	48 83 7c f8 f0 00    	cmpq   $0x0,-0x10(%rax,%rdi,8)
    1be6:	74 0d                	je     1bf5 <ft_append_arr_str+0x45>
    1be8:	48 ff c7             	inc    %rdi
    1beb:	48 85 c0             	test   %rax,%rax
    1bee:	75 f0                	jne    1be0 <ft_append_arr_str+0x30>
    1bf0:	bf 02 00 00 00       	mov    $0x2,%edi
    1bf5:	be 08 00 00 00       	mov    $0x8,%esi
    1bfa:	e8 e1 01 00 00       	call   1de0 <ft_calloc>
    1bff:	48 85 c0             	test   %rax,%rax
    1c02:	74 51                	je     1c55 <ft_append_arr_str+0xa5>
    1c04:	48 85 db             	test   %rbx,%rbx
    1c07:	74 50                	je     1c59 <ft_append_arr_str+0xa9>
    1c09:	48 8b 13             	mov    (%rbx),%rdx
    1c0c:	31 c9                	xor    %ecx,%ecx
    1c0e:	48 85 d2             	test   %rdx,%rdx
    1c11:	74 48                	je     1c5b <ft_append_arr_str+0xab>
    1c13:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    1c1a:	84 00 00 00 00 00 
    1c20:	48 8b 14 ca          	mov    (%rdx,%rcx,8),%rdx
    1c24:	48 85 d2             	test   %rdx,%rdx
    1c27:	74 32                	je     1c5b <ft_append_arr_str+0xab>
    1c29:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
    1c2d:	48 ff c1             	inc    %rcx
    1c30:	48 8b 13             	mov    (%rbx),%rdx
    1c33:	48 85 d2             	test   %rdx,%rdx
    1c36:	75 e8                	jne    1c20 <ft_append_arr_str+0x70>
    1c38:	eb 21                	jmp    1c5b <ft_append_arr_str+0xab>
    1c3a:	48 8b 03             	mov    (%rbx),%rax
    1c3d:	eb 31                	jmp    1c70 <ft_append_arr_str+0xc0>
    1c3f:	bf 02 00 00 00       	mov    $0x2,%edi
    1c44:	be 08 00 00 00       	mov    $0x8,%esi
    1c49:	e8 92 01 00 00       	call   1de0 <ft_calloc>
    1c4e:	31 c9                	xor    %ecx,%ecx
    1c50:	48 85 c0             	test   %rax,%rax
    1c53:	75 06                	jne    1c5b <ft_append_arr_str+0xab>
    1c55:	31 c0                	xor    %eax,%eax
    1c57:	eb 17                	jmp    1c70 <ft_append_arr_str+0xc0>
    1c59:	31 c9                	xor    %ecx,%ecx
    1c5b:	4c 89 34 c8          	mov    %r14,(%rax,%rcx,8)
    1c5f:	48 8b 3b             	mov    (%rbx),%rdi
    1c62:	49 89 c6             	mov    %rax,%r14
    1c65:	e8 d6 f3 ff ff       	call   1040 <free@plt>
    1c6a:	4c 89 f0             	mov    %r14,%rax
    1c6d:	4c 89 33             	mov    %r14,(%rbx)
    1c70:	48 83 c4 08          	add    $0x8,%rsp
    1c74:	5b                   	pop    %rbx
    1c75:	41 5e                	pop    %r14
    1c77:	31 c9                	xor    %ecx,%ecx
    1c79:	31 ff                	xor    %edi,%edi
    1c7b:	31 d2                	xor    %edx,%edx
    1c7d:	31 f6                	xor    %esi,%esi
    1c7f:	c3                   	ret

0000000000001c80 <ft_arrlen>:
    1c80:	48 85 ff             	test   %rdi,%rdi
    1c83:	74 1c                	je     1ca1 <ft_arrlen+0x21>
    1c85:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    1c8c:	0f 1f 40 00          	nopl   0x0(%rax)
    1c90:	48 8d 41 01          	lea    0x1(%rcx),%rax
    1c94:	48 83 7c cf 08 00    	cmpq   $0x0,0x8(%rdi,%rcx,8)
    1c9a:	48 89 c1             	mov    %rax,%rcx
    1c9d:	75 f1                	jne    1c90 <ft_arrlen+0x10>
    1c9f:	eb 02                	jmp    1ca3 <ft_arrlen+0x23>
    1ca1:	31 c0                	xor    %eax,%eax
    1ca3:	31 c9                	xor    %ecx,%ecx
    1ca5:	31 ff                	xor    %edi,%edi
    1ca7:	c3                   	ret
    1ca8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1caf:	00 

0000000000001cb0 <ft_atoi>:
    1cb0:	55                   	push   %rbp
    1cb1:	41 57                	push   %r15
    1cb3:	41 56                	push   %r14
    1cb5:	41 55                	push   %r13
    1cb7:	41 54                	push   %r12
    1cb9:	53                   	push   %rbx
    1cba:	50                   	push   %rax
    1cbb:	48 89 fb             	mov    %rdi,%rbx
    1cbe:	45 31 f6             	xor    %r14d,%r14d
    1cc1:	eb 10                	jmp    1cd3 <ft_atoi+0x23>
    1cc3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    1cca:	84 00 00 00 00 00 
    1cd0:	41 ff c6             	inc    %r14d
    1cd3:	49 63 c6             	movslq %r14d,%rax
    1cd6:	0f b6 04 03          	movzbl (%rbx,%rax,1),%eax
    1cda:	8d 48 f7             	lea    -0x9(%rax),%ecx
    1cdd:	80 f9 05             	cmp    $0x5,%cl
    1ce0:	72 ee                	jb     1cd0 <ft_atoi+0x20>
    1ce2:	83 f8 20             	cmp    $0x20,%eax
    1ce5:	74 e9                	je     1cd0 <ft_atoi+0x20>
    1ce7:	83 f8 2b             	cmp    $0x2b,%eax
    1cea:	74 05                	je     1cf1 <ft_atoi+0x41>
    1cec:	83 f8 2d             	cmp    $0x2d,%eax
    1cef:	75 16                	jne    1d07 <ft_atoi+0x57>
    1cf1:	41 ff c6             	inc    %r14d
    1cf4:	83 f8 2d             	cmp    $0x2d,%eax
    1cf7:	75 0e                	jne    1d07 <ft_atoi+0x57>
    1cf9:	bf ff ff ff ff       	mov    $0xffffffff,%edi
    1cfe:	b0 01                	mov    $0x1,%al
    1d00:	89 04 24             	mov    %eax,(%rsp)
    1d03:	31 ed                	xor    %ebp,%ebp
    1d05:	eb 0f                	jmp    1d16 <ft_atoi+0x66>
    1d07:	bf 01 00 00 00       	mov    $0x1,%edi
    1d0c:	40 b5 01             	mov    $0x1,%bpl
    1d0f:	c7 04 24 00 00 00 00 	movl   $0x0,(%rsp)
    1d16:	4d 63 ee             	movslq %r14d,%r13
    1d19:	42 0f b6 04 2b       	movzbl (%rbx,%r13,1),%eax
    1d1e:	84 c0                	test   %al,%al
    1d20:	74 35                	je     1d57 <ft_atoi+0xa7>
    1d22:	89 7c 24 04          	mov    %edi,0x4(%rsp)
    1d26:	4e 8d 24 2b          	lea    (%rbx,%r13,1),%r12
    1d2a:	49 ff c4             	inc    %r12
    1d2d:	45 31 ff             	xor    %r15d,%r15d
    1d30:	0f be f8             	movsbl %al,%edi
    1d33:	e8 58 03 00 00       	call   2090 <ft_isdigit>
    1d38:	85 c0                	test   %eax,%eax
    1d3a:	74 0c                	je     1d48 <ft_atoi+0x98>
    1d3c:	43 0f b6 04 3c       	movzbl (%r12,%r15,1),%eax
    1d41:	49 ff c7             	inc    %r15
    1d44:	84 c0                	test   %al,%al
    1d46:	75 e8                	jne    1d30 <ft_atoi+0x80>
    1d48:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    1d4d:	49 83 ff 0b          	cmp    $0xb,%r15
    1d51:	8b 7c 24 04          	mov    0x4(%rsp),%edi
    1d55:	77 6a                	ja     1dc1 <ft_atoi+0x111>
    1d57:	42 0f b6 04 2b       	movzbl (%rbx,%r13,1),%eax
    1d5c:	8d 48 d0             	lea    -0x30(%rax),%ecx
    1d5f:	80 f9 09             	cmp    $0x9,%cl
    1d62:	77 56                	ja     1dba <ft_atoi+0x10a>
    1d64:	41 ff c6             	inc    %r14d
    1d67:	31 c9                	xor    %ecx,%ecx
    1d69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    1d70:	48 8d 0c 89          	lea    (%rcx,%rcx,4),%rcx
    1d74:	04 d0                	add    $0xd0,%al
    1d76:	0f b6 c0             	movzbl %al,%eax
    1d79:	48 8d 0c 48          	lea    (%rax,%rcx,2),%rcx
    1d7d:	4d 63 f6             	movslq %r14d,%r14
    1d80:	42 0f b6 04 33       	movzbl (%rbx,%r14,1),%eax
    1d85:	8d 50 d0             	lea    -0x30(%rax),%edx
    1d88:	41 ff c6             	inc    %r14d
    1d8b:	80 fa 0a             	cmp    $0xa,%dl
    1d8e:	72 e0                	jb     1d70 <ft_atoi+0xc0>
    1d90:	48 81 f9 ff ff ff 7f 	cmp    $0x7fffffff,%rcx
    1d97:	0f 9f c2             	setg   %dl
    1d9a:	b8 ff ff ff 7f       	mov    $0x7fffffff,%eax
    1d9f:	40 84 d5             	test   %dl,%bpl
    1da2:	75 1d                	jne    1dc1 <ft_atoi+0x111>
    1da4:	48 81 f9 ff ff ff 7f 	cmp    $0x7fffffff,%rcx
    1dab:	0f 9f c2             	setg   %dl
    1dae:	b8 00 00 00 80       	mov    $0x80000000,%eax
    1db3:	84 14 24             	test   %dl,(%rsp)
    1db6:	74 04                	je     1dbc <ft_atoi+0x10c>
    1db8:	eb 07                	jmp    1dc1 <ft_atoi+0x111>
    1dba:	31 c9                	xor    %ecx,%ecx
    1dbc:	0f af f9             	imul   %ecx,%edi
    1dbf:	89 f8                	mov    %edi,%eax
    1dc1:	48 83 c4 08          	add    $0x8,%rsp
    1dc5:	5b                   	pop    %rbx
    1dc6:	41 5c                	pop    %r12
    1dc8:	41 5d                	pop    %r13
    1dca:	41 5e                	pop    %r14
    1dcc:	41 5f                	pop    %r15
    1dce:	5d                   	pop    %rbp
    1dcf:	31 c9                	xor    %ecx,%ecx
    1dd1:	31 ff                	xor    %edi,%edi
    1dd3:	31 d2                	xor    %edx,%edx
    1dd5:	c3                   	ret
    1dd6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1ddd:	00 00 00 

0000000000001de0 <ft_calloc>:
    1de0:	53                   	push   %rbx
    1de1:	48 85 ff             	test   %rdi,%rdi
    1de4:	0f 95 c0             	setne  %al
    1de7:	48 85 f6             	test   %rsi,%rsi
    1dea:	0f 95 c1             	setne  %cl
    1ded:	84 c8                	test   %cl,%al
    1def:	75 08                	jne    1df9 <ft_calloc+0x19>
    1df1:	31 ff                	xor    %edi,%edi
    1df3:	5b                   	pop    %rbx
    1df4:	e9 97 f3 ff ff       	jmp    1190 <malloc@plt>
    1df9:	48 89 f8             	mov    %rdi,%rax
    1dfc:	48 f7 e6             	mul    %rsi
    1dff:	70 23                	jo     1e24 <ft_calloc+0x44>
    1e01:	48 89 c3             	mov    %rax,%rbx
    1e04:	48 89 c7             	mov    %rax,%rdi
    1e07:	e8 84 f3 ff ff       	call   1190 <malloc@plt>
    1e0c:	48 85 c0             	test   %rax,%rax
    1e0f:	74 13                	je     1e24 <ft_calloc+0x44>
    1e11:	48 85 db             	test   %rbx,%rbx
    1e14:	74 12                	je     1e28 <ft_calloc+0x48>
    1e16:	48 89 c7             	mov    %rax,%rdi
    1e19:	31 f6                	xor    %esi,%esi
    1e1b:	48 89 da             	mov    %rbx,%rdx
    1e1e:	5b                   	pop    %rbx
    1e1f:	e9 dc f2 ff ff       	jmp    1100 <memset@plt>
    1e24:	31 c0                	xor    %eax,%eax
    1e26:	5b                   	pop    %rbx
    1e27:	c3                   	ret
    1e28:	5b                   	pop    %rbx
    1e29:	c3                   	ret
    1e2a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000001e30 <ft_coppyarrstr>:
    1e30:	41 57                	push   %r15
    1e32:	41 56                	push   %r14
    1e34:	53                   	push   %rbx
    1e35:	48 83 ec 10          	sub    $0x10,%rsp
    1e39:	49 89 fe             	mov    %rdi,%r14
    1e3c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1e43:	00 00 
    1e45:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    1e4a:	31 ff                	xor    %edi,%edi
    1e4c:	0f 1f 40 00          	nopl   0x0(%rax)
    1e50:	49 83 3c fe 00       	cmpq   $0x0,(%r14,%rdi,8)
    1e55:	48 8d 7f 01          	lea    0x1(%rdi),%rdi
    1e59:	75 f5                	jne    1e50 <ft_coppyarrstr+0x20>
    1e5b:	be 08 00 00 00       	mov    $0x8,%esi
    1e60:	e8 7b ff ff ff       	call   1de0 <ft_calloc>
    1e65:	48 89 04 24          	mov    %rax,(%rsp)
    1e69:	48 85 c0             	test   %rax,%rax
    1e6c:	74 3f                	je     1ead <ft_coppyarrstr+0x7d>
    1e6e:	48 89 c3             	mov    %rax,%rbx
    1e71:	49 8b 3e             	mov    (%r14),%rdi
    1e74:	45 31 ff             	xor    %r15d,%r15d
    1e77:	48 85 ff             	test   %rdi,%rdi
    1e7a:	74 1f                	je     1e9b <ft_coppyarrstr+0x6b>
    1e7c:	0f 1f 40 00          	nopl   0x0(%rax)
    1e80:	e8 1b 0e 00 00       	call   2ca0 <ft_strdup>
    1e85:	4a 89 04 fb          	mov    %rax,(%rbx,%r15,8)
    1e89:	48 85 c0             	test   %rax,%rax
    1e8c:	74 17                	je     1ea5 <ft_coppyarrstr+0x75>
    1e8e:	4b 8b 7c fe 08       	mov    0x8(%r14,%r15,8),%rdi
    1e93:	49 ff c7             	inc    %r15
    1e96:	48 85 ff             	test   %rdi,%rdi
    1e99:	75 e5                	jne    1e80 <ft_coppyarrstr+0x50>
    1e9b:	4a c7 04 fb 00 00 00 	movq   $0x0,(%rbx,%r15,8)
    1ea2:	00 
    1ea3:	eb 0a                	jmp    1eaf <ft_coppyarrstr+0x7f>
    1ea5:	48 89 e7             	mov    %rsp,%rdi
    1ea8:	e8 33 00 00 00       	call   1ee0 <free_arr>
    1ead:	31 db                	xor    %ebx,%ebx
    1eaf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    1eb6:	00 00 
    1eb8:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
    1ebd:	75 11                	jne    1ed0 <ft_coppyarrstr+0xa0>
    1ebf:	48 89 d8             	mov    %rbx,%rax
    1ec2:	48 83 c4 10          	add    $0x10,%rsp
    1ec6:	5b                   	pop    %rbx
    1ec7:	41 5e                	pop    %r14
    1ec9:	41 5f                	pop    %r15
    1ecb:	31 ff                	xor    %edi,%edi
    1ecd:	31 f6                	xor    %esi,%esi
    1ecf:	c3                   	ret
    1ed0:	e8 0b f2 ff ff       	call   10e0 <__stack_chk_fail@plt>
    1ed5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1edc:	00 00 00 
    1edf:	90                   	nop

0000000000001ee0 <free_arr>:
    1ee0:	48 85 ff             	test   %rdi,%rdi
    1ee3:	74 56                	je     1f3b <free_arr+0x5b>
    1ee5:	41 56                	push   %r14
    1ee7:	53                   	push   %rbx
    1ee8:	50                   	push   %rax
    1ee9:	48 89 fb             	mov    %rdi,%rbx
    1eec:	48 8b 3f             	mov    (%rdi),%rdi
    1eef:	48 85 ff             	test   %rdi,%rdi
    1ef2:	74 40                	je     1f34 <free_arr+0x54>
    1ef4:	48 8b 07             	mov    (%rdi),%rax
    1ef7:	48 85 c0             	test   %rax,%rax
    1efa:	74 2c                	je     1f28 <free_arr+0x48>
    1efc:	41 be 08 00 00 00    	mov    $0x8,%r14d
    1f02:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    1f09:	1f 84 00 00 00 00 00 
    1f10:	48 89 c7             	mov    %rax,%rdi
    1f13:	e8 28 f1 ff ff       	call   1040 <free@plt>
    1f18:	48 8b 3b             	mov    (%rbx),%rdi
    1f1b:	4a 8b 04 37          	mov    (%rdi,%r14,1),%rax
    1f1f:	49 83 c6 08          	add    $0x8,%r14
    1f23:	48 85 c0             	test   %rax,%rax
    1f26:	75 e8                	jne    1f10 <free_arr+0x30>
    1f28:	e8 13 f1 ff ff       	call   1040 <free@plt>
    1f2d:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    1f34:	48 83 c4 08          	add    $0x8,%rsp
    1f38:	5b                   	pop    %rbx
    1f39:	41 5e                	pop    %r14
    1f3b:	31 c0                	xor    %eax,%eax
    1f3d:	31 ff                	xor    %edi,%edi
    1f3f:	c3                   	ret

0000000000001f40 <free_split>:
    1f40:	48 85 ff             	test   %rdi,%rdi
    1f43:	74 3b                	je     1f80 <free_split+0x40>
    1f45:	41 56                	push   %r14
    1f47:	53                   	push   %rbx
    1f48:	50                   	push   %rax
    1f49:	48 89 fb             	mov    %rdi,%rbx
    1f4c:	48 8b 3f             	mov    (%rdi),%rdi
    1f4f:	48 85 ff             	test   %rdi,%rdi
    1f52:	74 1d                	je     1f71 <free_split+0x31>
    1f54:	4c 8d 73 08          	lea    0x8(%rbx),%r14
    1f58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    1f5f:	00 
    1f60:	e8 db f0 ff ff       	call   1040 <free@plt>
    1f65:	49 8b 3e             	mov    (%r14),%rdi
    1f68:	49 83 c6 08          	add    $0x8,%r14
    1f6c:	48 85 ff             	test   %rdi,%rdi
    1f6f:	75 ef                	jne    1f60 <free_split+0x20>
    1f71:	48 89 df             	mov    %rbx,%rdi
    1f74:	48 83 c4 08          	add    $0x8,%rsp
    1f78:	5b                   	pop    %rbx
    1f79:	41 5e                	pop    %r14
    1f7b:	e9 c0 f0 ff ff       	jmp    1040 <free@plt>
    1f80:	c3                   	ret
    1f81:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    1f88:	00 00 00 
    1f8b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000001f90 <ft_get_env_value>:
    1f90:	41 57                	push   %r15
    1f92:	41 56                	push   %r14
    1f94:	53                   	push   %rbx
    1f95:	48 89 f0             	mov    %rsi,%rax
    1f98:	48 89 fb             	mov    %rdi,%rbx
    1f9b:	48 8d 35 d9 64 00 00 	lea    0x64d9(%rip),%rsi        # 847b <_IO_stdin_used+0x47b>
    1fa2:	48 89 c7             	mov    %rax,%rdi
    1fa5:	e8 46 0d 00 00       	call   2cf0 <ft_strjoin>
    1faa:	48 85 c0             	test   %rax,%rax
    1fad:	74 52                	je     2001 <ft_get_env_value+0x71>
    1faf:	49 89 c6             	mov    %rax,%r14
    1fb2:	4c 8b 3b             	mov    (%rbx),%r15
    1fb5:	4d 85 ff             	test   %r15,%r15
    1fb8:	74 2e                	je     1fe8 <ft_get_env_value+0x58>
    1fba:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    1fc0:	4c 89 f7             	mov    %r14,%rdi
    1fc3:	e8 48 0e 00 00       	call   2e10 <ft_strlen>
    1fc8:	4c 89 ff             	mov    %r15,%rdi
    1fcb:	4c 89 f6             	mov    %r14,%rsi
    1fce:	48 89 c2             	mov    %rax,%rdx
    1fd1:	e8 ba 0e 00 00       	call   2e90 <ft_strnstr>
    1fd6:	48 85 c0             	test   %rax,%rax
    1fd9:	75 2e                	jne    2009 <ft_get_env_value+0x79>
    1fdb:	4c 8b 7b 08          	mov    0x8(%rbx),%r15
    1fdf:	48 83 c3 08          	add    $0x8,%rbx
    1fe3:	4d 85 ff             	test   %r15,%r15
    1fe6:	75 d8                	jne    1fc0 <ft_get_env_value+0x30>
    1fe8:	4c 89 f7             	mov    %r14,%rdi
    1feb:	e8 50 f0 ff ff       	call   1040 <free@plt>
    1ff0:	48 8d 3d 45 62 00 00 	lea    0x6245(%rip),%rdi        # 823c <_IO_stdin_used+0x23c>
    1ff7:	5b                   	pop    %rbx
    1ff8:	41 5e                	pop    %r14
    1ffa:	41 5f                	pop    %r15
    1ffc:	e9 9f 0c 00 00       	jmp    2ca0 <ft_strdup>
    2001:	31 c0                	xor    %eax,%eax
    2003:	5b                   	pop    %rbx
    2004:	41 5e                	pop    %r14
    2006:	41 5f                	pop    %r15
    2008:	c3                   	ret
    2009:	4c 89 f7             	mov    %r14,%rdi
    200c:	e8 2f f0 ff ff       	call   1040 <free@plt>
    2011:	4c 8b 33             	mov    (%rbx),%r14
    2014:	4c 89 f7             	mov    %r14,%rdi
    2017:	be 3d 00 00 00       	mov    $0x3d,%esi
    201c:	e8 3f 0c 00 00       	call   2c60 <ft_strchr>
    2021:	48 8b 3b             	mov    (%rbx),%rdi
    2024:	29 f8                	sub    %edi,%eax
    2026:	8d 58 01             	lea    0x1(%rax),%ebx
    2029:	e8 e2 0d 00 00       	call   2e10 <ft_strlen>
    202e:	4c 89 f7             	mov    %r14,%rdi
    2031:	89 de                	mov    %ebx,%esi
    2033:	48 89 c2             	mov    %rax,%rdx
    2036:	5b                   	pop    %rbx
    2037:	41 5e                	pop    %r14
    2039:	41 5f                	pop    %r15
    203b:	e9 a0 0f 00 00       	jmp    2fe0 <ft_substr>

0000000000002040 <ft_isalnum>:
    2040:	53                   	push   %rbx
    2041:	89 fb                	mov    %edi,%ebx
    2043:	e8 28 00 00 00       	call   2070 <ft_isalpha>
    2048:	89 c1                	mov    %eax,%ecx
    204a:	b8 01 00 00 00       	mov    $0x1,%eax
    204f:	85 c9                	test   %ecx,%ecx
    2051:	75 10                	jne    2063 <ft_isalnum+0x23>
    2053:	89 df                	mov    %ebx,%edi
    2055:	e8 36 00 00 00       	call   2090 <ft_isdigit>
    205a:	89 c1                	mov    %eax,%ecx
    205c:	31 c0                	xor    %eax,%eax
    205e:	85 c9                	test   %ecx,%ecx
    2060:	0f 95 c0             	setne  %al
    2063:	5b                   	pop    %rbx
    2064:	31 c9                	xor    %ecx,%ecx
    2066:	31 ff                	xor    %edi,%edi
    2068:	c3                   	ret
    2069:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000002070 <ft_isalpha>:
    2070:	83 e7 df             	and    $0xffffffdf,%edi
    2073:	83 c7 bf             	add    $0xffffffbf,%edi
    2076:	31 c0                	xor    %eax,%eax
    2078:	83 ff 1a             	cmp    $0x1a,%edi
    207b:	0f 92 c0             	setb   %al
    207e:	31 ff                	xor    %edi,%edi
    2080:	c3                   	ret
    2081:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2088:	00 00 00 
    208b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002090 <ft_isdigit>:
    2090:	83 c7 d0             	add    $0xffffffd0,%edi
    2093:	31 c0                	xor    %eax,%eax
    2095:	83 ff 0a             	cmp    $0xa,%edi
    2098:	0f 92 c0             	setb   %al
    209b:	31 ff                	xor    %edi,%edi
    209d:	c3                   	ret
    209e:	66 90                	xchg   %ax,%ax

00000000000020a0 <ft_itoa>:
    20a0:	41 56                	push   %r14
    20a2:	53                   	push   %rbx
    20a3:	50                   	push   %rax
    20a4:	89 fb                	mov    %edi,%ebx
    20a6:	41 89 fe             	mov    %edi,%r14d
    20a9:	41 c1 ee 1f          	shr    $0x1f,%r14d
    20ad:	49 ff c6             	inc    %r14
    20b0:	89 f8                	mov    %edi,%eax
    20b2:	f7 d8                	neg    %eax
    20b4:	0f 48 c7             	cmovs  %edi,%eax
    20b7:	83 f8 0a             	cmp    $0xa,%eax
    20ba:	72 2a                	jb     20e6 <ft_itoa+0x46>
    20bc:	89 c1                	mov    %eax,%ecx
    20be:	48 be cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rsi
    20c5:	cc cc cc 
    20c8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    20cf:	00 
    20d0:	48 89 c8             	mov    %rcx,%rax
    20d3:	48 f7 e6             	mul    %rsi
    20d6:	48 c1 ea 03          	shr    $0x3,%rdx
    20da:	49 ff c6             	inc    %r14
    20dd:	48 83 f9 63          	cmp    $0x63,%rcx
    20e1:	48 89 d1             	mov    %rdx,%rcx
    20e4:	77 ea                	ja     20d0 <ft_itoa+0x30>
    20e6:	49 8d 7e 01          	lea    0x1(%r14),%rdi
    20ea:	e8 a1 f0 ff ff       	call   1190 <malloc@plt>
    20ef:	48 89 c1             	mov    %rax,%rcx
    20f2:	48 85 c0             	test   %rax,%rax
    20f5:	74 7b                	je     2172 <ft_itoa+0xd2>
    20f7:	48 63 f3             	movslq %ebx,%rsi
    20fa:	42 c6 04 31 00       	movb   $0x0,(%rcx,%r14,1)
    20ff:	85 db                	test   %ebx,%ebx
    2101:	79 06                	jns    2109 <ft_itoa+0x69>
    2103:	c6 01 2d             	movb   $0x2d,(%rcx)
    2106:	48 f7 de             	neg    %rsi
    2109:	48 85 f6             	test   %rsi,%rsi
    210c:	0f 94 c0             	sete   %al
    210f:	4d 85 f6             	test   %r14,%r14
    2112:	0f 94 c2             	sete   %dl
    2115:	08 c2                	or     %al,%dl
    2117:	75 52                	jne    216b <ft_itoa+0xcb>
    2119:	49 ff ce             	dec    %r14
    211c:	48 bf 67 66 66 66 66 	movabs $0x6666666666666667,%rdi
    2123:	66 66 66 
    2126:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    212d:	00 00 00 
    2130:	48 89 f0             	mov    %rsi,%rax
    2133:	48 f7 ef             	imul   %rdi
    2136:	48 89 d0             	mov    %rdx,%rax
    2139:	48 c1 e8 3f          	shr    $0x3f,%rax
    213d:	48 c1 fa 02          	sar    $0x2,%rdx
    2141:	48 01 c2             	add    %rax,%rdx
    2144:	8d 04 12             	lea    (%rdx,%rdx,1),%eax
    2147:	8d 04 80             	lea    (%rax,%rax,4),%eax
    214a:	41 89 f0             	mov    %esi,%r8d
    214d:	41 29 c0             	sub    %eax,%r8d
    2150:	41 80 c0 30          	add    $0x30,%r8b
    2154:	46 88 04 31          	mov    %r8b,(%rcx,%r14,1)
    2158:	49 83 ee 01          	sub    $0x1,%r14
    215c:	72 0d                	jb     216b <ft_itoa+0xcb>
    215e:	48 83 c6 09          	add    $0x9,%rsi
    2162:	48 83 fe 12          	cmp    $0x12,%rsi
    2166:	48 89 d6             	mov    %rdx,%rsi
    2169:	77 c5                	ja     2130 <ft_itoa+0x90>
    216b:	85 db                	test   %ebx,%ebx
    216d:	75 03                	jne    2172 <ft_itoa+0xd2>
    216f:	c6 01 30             	movb   $0x30,(%rcx)
    2172:	48 89 c8             	mov    %rcx,%rax
    2175:	48 83 c4 08          	add    $0x8,%rsp
    2179:	5b                   	pop    %rbx
    217a:	41 5e                	pop    %r14
    217c:	31 c9                	xor    %ecx,%ecx
    217e:	31 ff                	xor    %edi,%edi
    2180:	31 d2                	xor    %edx,%edx
    2182:	31 f6                	xor    %esi,%esi
    2184:	45 31 c0             	xor    %r8d,%r8d
    2187:	c3                   	ret
    2188:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    218f:	00 

0000000000002190 <handle_sign>:
    2190:	53                   	push   %rbx
    2191:	83 c6 db             	add    $0xffffffdb,%esi
    2194:	83 fe 53             	cmp    $0x53,%esi
    2197:	0f 87 73 01 00 00    	ja     2310 <handle_sign+0x180>
    219d:	48 89 cb             	mov    %rcx,%rbx
    21a0:	48 8d 05 bd 63 00 00 	lea    0x63bd(%rip),%rax        # 8564 <_IO_stdin_used+0x564>
    21a7:	48 63 0c b0          	movslq (%rax,%rsi,4),%rcx
    21ab:	48 01 c1             	add    %rax,%rcx
    21ae:	ff e1                	jmp    *%rcx
    21b0:	8b 0a                	mov    (%rdx),%ecx
    21b2:	48 83 f9 28          	cmp    $0x28,%rcx
    21b6:	77 0e                	ja     21c6 <handle_sign+0x36>
    21b8:	48 89 c8             	mov    %rcx,%rax
    21bb:	48 03 42 10          	add    0x10(%rdx),%rax
    21bf:	83 c1 08             	add    $0x8,%ecx
    21c2:	89 0a                	mov    %ecx,(%rdx)
    21c4:	eb 0c                	jmp    21d2 <handle_sign+0x42>
    21c6:	48 8b 42 08          	mov    0x8(%rdx),%rax
    21ca:	48 8d 48 08          	lea    0x8(%rax),%rcx
    21ce:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    21d2:	8b 30                	mov    (%rax),%esi
    21d4:	e8 87 0f 00 00       	call   3160 <write_di>
    21d9:	e9 2e 01 00 00       	jmp    230c <handle_sign+0x17c>
    21de:	8b 0a                	mov    (%rdx),%ecx
    21e0:	48 83 f9 28          	cmp    $0x28,%rcx
    21e4:	0f 87 a3 00 00 00    	ja     228d <handle_sign+0xfd>
    21ea:	48 89 c8             	mov    %rcx,%rax
    21ed:	48 03 42 10          	add    0x10(%rdx),%rax
    21f1:	83 c1 08             	add    $0x8,%ecx
    21f4:	89 0a                	mov    %ecx,(%rdx)
    21f6:	e9 9e 00 00 00       	jmp    2299 <handle_sign+0x109>
    21fb:	8b 0a                	mov    (%rdx),%ecx
    21fd:	48 83 f9 28          	cmp    $0x28,%rcx
    2201:	0f 87 9c 00 00 00    	ja     22a3 <handle_sign+0x113>
    2207:	48 89 c8             	mov    %rcx,%rax
    220a:	48 03 42 10          	add    0x10(%rdx),%rax
    220e:	83 c1 08             	add    $0x8,%ecx
    2211:	89 0a                	mov    %ecx,(%rdx)
    2213:	e9 97 00 00 00       	jmp    22af <handle_sign+0x11f>
    2218:	8b 0a                	mov    (%rdx),%ecx
    221a:	48 83 f9 28          	cmp    $0x28,%rcx
    221e:	0f 87 95 00 00 00    	ja     22b9 <handle_sign+0x129>
    2224:	48 89 c8             	mov    %rcx,%rax
    2227:	48 03 42 10          	add    0x10(%rdx),%rax
    222b:	83 c1 08             	add    $0x8,%ecx
    222e:	89 0a                	mov    %ecx,(%rdx)
    2230:	e9 90 00 00 00       	jmp    22c5 <handle_sign+0x135>
    2235:	48 8d 35 00 5e 00 00 	lea    0x5e00(%rip),%rsi        # 803c <_IO_stdin_used+0x3c>
    223c:	ba 01 00 00 00       	mov    $0x1,%edx
    2241:	e8 4a ee ff ff       	call   1090 <write@plt>
    2246:	e9 c1 00 00 00       	jmp    230c <handle_sign+0x17c>
    224b:	8b 0a                	mov    (%rdx),%ecx
    224d:	48 83 f9 28          	cmp    $0x28,%rcx
    2251:	77 7b                	ja     22ce <handle_sign+0x13e>
    2253:	48 89 c8             	mov    %rcx,%rax
    2256:	48 03 42 10          	add    0x10(%rdx),%rax
    225a:	83 c1 08             	add    $0x8,%ecx
    225d:	89 0a                	mov    %ecx,(%rdx)
    225f:	eb 79                	jmp    22da <handle_sign+0x14a>
    2261:	8b 0a                	mov    (%rdx),%ecx
    2263:	48 83 f9 28          	cmp    $0x28,%rcx
    2267:	77 7a                	ja     22e3 <handle_sign+0x153>
    2269:	48 89 c8             	mov    %rcx,%rax
    226c:	48 03 42 10          	add    0x10(%rdx),%rax
    2270:	83 c1 08             	add    $0x8,%ecx
    2273:	89 0a                	mov    %ecx,(%rdx)
    2275:	eb 78                	jmp    22ef <handle_sign+0x15f>
    2277:	8b 0a                	mov    (%rdx),%ecx
    2279:	48 83 f9 28          	cmp    $0x28,%rcx
    227d:	77 79                	ja     22f8 <handle_sign+0x168>
    227f:	48 89 c8             	mov    %rcx,%rax
    2282:	48 03 42 10          	add    0x10(%rdx),%rax
    2286:	83 c1 08             	add    $0x8,%ecx
    2289:	89 0a                	mov    %ecx,(%rdx)
    228b:	eb 77                	jmp    2304 <handle_sign+0x174>
    228d:	48 8b 42 08          	mov    0x8(%rdx),%rax
    2291:	48 8d 48 08          	lea    0x8(%rax),%rcx
    2295:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    2299:	0f be 30             	movsbl (%rax),%esi
    229c:	e8 bf 0d 00 00       	call   3060 <write_c>
    22a1:	eb 69                	jmp    230c <handle_sign+0x17c>
    22a3:	48 8b 42 08          	mov    0x8(%rdx),%rax
    22a7:	48 8d 48 08          	lea    0x8(%rax),%rcx
    22ab:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    22af:	48 8b 30             	mov    (%rax),%rsi
    22b2:	e8 f9 0d 00 00       	call   30b0 <write_s>
    22b7:	eb 53                	jmp    230c <handle_sign+0x17c>
    22b9:	48 8b 42 08          	mov    0x8(%rdx),%rax
    22bd:	48 8d 48 08          	lea    0x8(%rax),%rcx
    22c1:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    22c5:	8b 30                	mov    (%rax),%esi
    22c7:	e8 a4 0e 00 00       	call   3170 <write_u>
    22cc:	eb 3e                	jmp    230c <handle_sign+0x17c>
    22ce:	48 8b 42 08          	mov    0x8(%rdx),%rax
    22d2:	48 8d 48 08          	lea    0x8(%rax),%rcx
    22d6:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    22da:	8b 30                	mov    (%rax),%esi
    22dc:	e8 af 0e 00 00       	call   3190 <write_cap_x>
    22e1:	eb 29                	jmp    230c <handle_sign+0x17c>
    22e3:	48 8b 42 08          	mov    0x8(%rdx),%rax
    22e7:	48 8d 48 08          	lea    0x8(%rax),%rcx
    22eb:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    22ef:	8b 30                	mov    (%rax),%esi
    22f1:	e8 8a 0e 00 00       	call   3180 <write_x>
    22f6:	eb 14                	jmp    230c <handle_sign+0x17c>
    22f8:	48 8b 42 08          	mov    0x8(%rdx),%rax
    22fc:	48 8d 48 08          	lea    0x8(%rax),%rcx
    2300:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    2304:	48 8b 30             	mov    (%rax),%rsi
    2307:	e8 f4 0d 00 00       	call   3100 <write_p>
    230c:	03 03                	add    (%rbx),%eax
    230e:	89 03                	mov    %eax,(%rbx)
    2310:	5b                   	pop    %rbx
    2311:	31 c0                	xor    %eax,%eax
    2313:	31 c9                	xor    %ecx,%ecx
    2315:	31 d2                	xor    %edx,%edx
    2317:	31 f6                	xor    %esi,%esi
    2319:	c3                   	ret
    231a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002320 <parse_format>:
    2320:	55                   	push   %rbp
    2321:	41 57                	push   %r15
    2323:	41 56                	push   %r14
    2325:	41 55                	push   %r13
    2327:	41 54                	push   %r12
    2329:	53                   	push   %rbx
    232a:	48 83 ec 18          	sub    $0x18,%rsp
    232e:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    2333:	80 3e 00             	cmpb   $0x0,(%rsi)
    2336:	0f 84 db 00 00 00    	je     2417 <parse_format+0xf7>
    233c:	49 89 f4             	mov    %rsi,%r12
    233f:	41 89 ff             	mov    %edi,%r15d
    2342:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    2347:	31 db                	xor    %ebx,%ebx
    2349:	49 89 f5             	mov    %rsi,%r13
    234c:	89 7c 24 04          	mov    %edi,0x4(%rsp)
    2350:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
    2355:	eb 58                	jmp    23af <parse_format+0x8f>
    2357:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    235e:	00 00 
    2360:	41 8b 06             	mov    (%r14),%eax
    2363:	80 f9 01             	cmp    $0x1,%cl
    2366:	83 d8 00             	sbb    $0x0,%eax
    2369:	83 c0 02             	add    $0x2,%eax
    236c:	41 89 06             	mov    %eax,(%r14)
    236f:	49 01 ed             	add    %rbp,%r13
    2372:	43 80 3c 3c 01       	cmpb   $0x1,(%r12,%r15,1)
    2377:	ba 02 00 00 00       	mov    $0x2,%edx
    237c:	48 83 da 00          	sbb    $0x0,%rdx
    2380:	8b 7c 24 04          	mov    0x4(%rsp),%edi
    2384:	4c 89 ee             	mov    %r13,%rsi
    2387:	e8 04 ed ff ff       	call   1090 <write@plt>
    238c:	43 80 3c 3c 00       	cmpb   $0x0,(%r12,%r15,1)
    2391:	0f 84 80 00 00 00    	je     2417 <parse_format+0xf7>
    2397:	49 8d 5f 01          	lea    0x1(%r15),%rbx
    239b:	4f 8d 2c 3c          	lea    (%r12,%r15,1),%r13
    239f:	49 ff c5             	inc    %r13
    23a2:	43 80 7c 3c 01 00    	cmpb   $0x0,0x1(%r12,%r15,1)
    23a8:	44 8b 7c 24 04       	mov    0x4(%rsp),%r15d
    23ad:	74 68                	je     2417 <parse_format+0xf7>
    23af:	4c 89 ef             	mov    %r13,%rdi
    23b2:	be 25 00 00 00       	mov    $0x25,%esi
    23b7:	e8 a4 08 00 00       	call   2c60 <ft_strchr>
    23bc:	48 85 c0             	test   %rax,%rax
    23bf:	74 5e                	je     241f <parse_format+0xff>
    23c1:	48 89 c5             	mov    %rax,%rbp
    23c4:	4c 29 ed             	sub    %r13,%rbp
    23c7:	44 89 ff             	mov    %r15d,%edi
    23ca:	4c 89 ee             	mov    %r13,%rsi
    23cd:	48 89 ea             	mov    %rbp,%rdx
    23d0:	e8 bb ec ff ff       	call   1090 <write@plt>
    23d5:	4c 8d 3c 2b          	lea    (%rbx,%rbp,1),%r15
    23d9:	49 ff c7             	inc    %r15
    23dc:	48 01 eb             	add    %rbp,%rbx
    23df:	41 01 2e             	add    %ebp,(%r14)
    23e2:	41 0f be 7c 1c 01    	movsbl 0x1(%r12,%rbx,1),%edi
    23e8:	e8 c3 01 00 00       	call   25b0 <is_valid_sign>
    23ed:	41 0f b6 4c 1c 01    	movzbl 0x1(%r12,%rbx,1),%ecx
    23f3:	85 c0                	test   %eax,%eax
    23f5:	0f 84 65 ff ff ff    	je     2360 <parse_format+0x40>
    23fb:	84 c9                	test   %cl,%cl
    23fd:	74 98                	je     2397 <parse_format+0x77>
    23ff:	0f be f1             	movsbl %cl,%esi
    2402:	8b 7c 24 04          	mov    0x4(%rsp),%edi
    2406:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    240b:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    2410:	e8 7b fd ff ff       	call   2190 <handle_sign>
    2415:	eb 80                	jmp    2397 <parse_format+0x77>
    2417:	41 bf 01 00 00 00    	mov    $0x1,%r15d
    241d:	eb 14                	jmp    2433 <parse_format+0x113>
    241f:	4c 89 ef             	mov    %r13,%rdi
    2422:	be 01 00 00 00       	mov    $0x1,%esi
    2427:	e8 64 03 00 00       	call   2790 <ft_putstr_fd>
    242c:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    2431:	01 01                	add    %eax,(%rcx)
    2433:	44 89 f8             	mov    %r15d,%eax
    2436:	48 83 c4 18          	add    $0x18,%rsp
    243a:	5b                   	pop    %rbx
    243b:	41 5c                	pop    %r12
    243d:	41 5d                	pop    %r13
    243f:	41 5e                	pop    %r14
    2441:	41 5f                	pop    %r15
    2443:	5d                   	pop    %rbp
    2444:	31 c9                	xor    %ecx,%ecx
    2446:	31 ff                	xor    %edi,%edi
    2448:	31 d2                	xor    %edx,%edx
    244a:	31 f6                	xor    %esi,%esi
    244c:	c3                   	ret
    244d:	0f 1f 00             	nopl   (%rax)

0000000000002450 <ft_printf>:
    2450:	55                   	push   %rbp
    2451:	41 57                	push   %r15
    2453:	41 56                	push   %r14
    2455:	53                   	push   %rbx
    2456:	48 81 ec e8 00 00 00 	sub    $0xe8,%rsp
    245d:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    2462:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    2467:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    246c:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    2471:	84 c0                	test   %al,%al
    2473:	74 31                	je     24a6 <ft_printf+0x56>
    2475:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    247a:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
    247f:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
    2484:	0f 29 5c 24 60       	movaps %xmm3,0x60(%rsp)
    2489:	0f 29 64 24 70       	movaps %xmm4,0x70(%rsp)
    248e:	0f 29 ac 24 80 00 00 	movaps %xmm5,0x80(%rsp)
    2495:	00 
    2496:	0f 29 b4 24 90 00 00 	movaps %xmm6,0x90(%rsp)
    249d:	00 
    249e:	0f 29 bc 24 a0 00 00 	movaps %xmm7,0xa0(%rsp)
    24a5:	00 
    24a6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    24ad:	00 00 
    24af:	48 89 84 24 e0 00 00 	mov    %rax,0xe0(%rsp)
    24b6:	00 
    24b7:	c7 84 24 bc 00 00 00 	movl   $0x0,0xbc(%rsp)
    24be:	00 00 00 00 
    24c2:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
    24c8:	48 85 f6             	test   %rsi,%rsi
    24cb:	0f 84 a0 00 00 00    	je     2571 <ft_printf+0x121>
    24d1:	48 89 f3             	mov    %rsi,%rbx
    24d4:	89 fd                	mov    %edi,%ebp
    24d6:	31 f6                	xor    %esi,%esi
    24d8:	31 d2                	xor    %edx,%edx
    24da:	e8 b1 eb ff ff       	call   1090 <write@plt>
    24df:	48 85 c0             	test   %rax,%rax
    24e2:	0f 88 89 00 00 00    	js     2571 <ft_printf+0x121>
    24e8:	48 89 df             	mov    %rbx,%rdi
    24eb:	be 25 00 00 00       	mov    $0x25,%esi
    24f0:	e8 6b 07 00 00       	call   2c60 <ft_strchr>
    24f5:	49 89 c7             	mov    %rax,%r15
    24f8:	48 89 df             	mov    %rbx,%rdi
    24fb:	e8 10 09 00 00       	call   2e10 <ft_strlen>
    2500:	4d 85 ff             	test   %r15,%r15
    2503:	74 5c                	je     2561 <ft_printf+0x111>
    2505:	48 83 f8 01          	cmp    $0x1,%rax
    2509:	75 05                	jne    2510 <ft_printf+0xc0>
    250b:	80 3b 25             	cmpb   $0x25,(%rbx)
    250e:	74 61                	je     2571 <ft_printf+0x121>
    2510:	48 89 e0             	mov    %rsp,%rax
    2513:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
    251a:	00 
    251b:	48 8d 84 24 10 01 00 	lea    0x110(%rsp),%rax
    2522:	00 
    2523:	48 89 84 24 c8 00 00 	mov    %rax,0xc8(%rsp)
    252a:	00 
    252b:	48 b8 10 00 00 00 30 	movabs $0x3000000010,%rax
    2532:	00 00 00 
    2535:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    253c:	00 
    253d:	48 8d 94 24 c0 00 00 	lea    0xc0(%rsp),%rdx
    2544:	00 
    2545:	48 8d 8c 24 bc 00 00 	lea    0xbc(%rsp),%rcx
    254c:	00 
    254d:	89 ef                	mov    %ebp,%edi
    254f:	48 89 de             	mov    %rbx,%rsi
    2552:	e8 c9 fd ff ff       	call   2320 <parse_format>
    2557:	44 8b b4 24 bc 00 00 	mov    0xbc(%rsp),%r14d
    255e:	00 
    255f:	eb 10                	jmp    2571 <ft_printf+0x121>
    2561:	89 ef                	mov    %ebp,%edi
    2563:	48 89 de             	mov    %rbx,%rsi
    2566:	48 89 c2             	mov    %rax,%rdx
    2569:	e8 22 eb ff ff       	call   1090 <write@plt>
    256e:	49 89 c6             	mov    %rax,%r14
    2571:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2578:	00 00 
    257a:	48 3b 84 24 e0 00 00 	cmp    0xe0(%rsp),%rax
    2581:	00 
    2582:	75 1f                	jne    25a3 <ft_printf+0x153>
    2584:	44 89 f0             	mov    %r14d,%eax
    2587:	48 81 c4 e8 00 00 00 	add    $0xe8,%rsp
    258e:	5b                   	pop    %rbx
    258f:	41 5e                	pop    %r14
    2591:	41 5f                	pop    %r15
    2593:	5d                   	pop    %rbp
    2594:	31 c9                	xor    %ecx,%ecx
    2596:	31 ff                	xor    %edi,%edi
    2598:	31 d2                	xor    %edx,%edx
    259a:	31 f6                	xor    %esi,%esi
    259c:	45 31 c0             	xor    %r8d,%r8d
    259f:	45 31 c9             	xor    %r9d,%r9d
    25a2:	c3                   	ret
    25a3:	e8 38 eb ff ff       	call   10e0 <__stack_chk_fail@plt>
    25a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    25af:	00 

00000000000025b0 <is_valid_sign>:
    25b0:	83 c7 db             	add    $0xffffffdb,%edi
    25b3:	83 ff 53             	cmp    $0x53,%edi
    25b6:	77 1c                	ja     25d4 <is_valid_sign+0x24>
    25b8:	b8 01 00 00 00       	mov    $0x1,%eax
    25bd:	48 8d 0d f0 60 00 00 	lea    0x60f0(%rip),%rcx        # 86b4 <_IO_stdin_used+0x6b4>
    25c4:	48 63 14 b9          	movslq (%rcx,%rdi,4),%rdx
    25c8:	48 01 ca             	add    %rcx,%rdx
    25cb:	ff e2                	jmp    *%rdx
    25cd:	31 c9                	xor    %ecx,%ecx
    25cf:	31 ff                	xor    %edi,%edi
    25d1:	31 d2                	xor    %edx,%edx
    25d3:	c3                   	ret
    25d4:	31 c0                	xor    %eax,%eax
    25d6:	eb f5                	jmp    25cd <is_valid_sign+0x1d>
    25d8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    25df:	00 

00000000000025e0 <print_number>:
    25e0:	55                   	push   %rbp
    25e1:	41 57                	push   %r15
    25e3:	41 56                	push   %r14
    25e5:	41 54                	push   %r12
    25e7:	53                   	push   %rbx
    25e8:	4c 89 c3             	mov    %r8,%rbx
    25eb:	49 89 cf             	mov    %rcx,%r15
    25ee:	49 89 d6             	mov    %rdx,%r14
    25f1:	49 89 f4             	mov    %rsi,%r12
    25f4:	48 39 ce             	cmp    %rcx,%rsi
    25f7:	72 33                	jb     262c <print_number+0x4c>
    25f9:	4c 89 e0             	mov    %r12,%rax
    25fc:	4c 09 f8             	or     %r15,%rax
    25ff:	48 c1 e8 20          	shr    $0x20,%rax
    2603:	74 0a                	je     260f <print_number+0x2f>
    2605:	4c 89 e0             	mov    %r12,%rax
    2608:	31 d2                	xor    %edx,%edx
    260a:	49 f7 f7             	div    %r15
    260d:	eb 08                	jmp    2617 <print_number+0x37>
    260f:	44 89 e0             	mov    %r12d,%eax
    2612:	31 d2                	xor    %edx,%edx
    2614:	41 f7 f7             	div    %r15d
    2617:	89 fd                	mov    %edi,%ebp
    2619:	48 89 c6             	mov    %rax,%rsi
    261c:	4c 89 f2             	mov    %r14,%rdx
    261f:	4c 89 f9             	mov    %r15,%rcx
    2622:	49 89 d8             	mov    %rbx,%r8
    2625:	e8 b6 ff ff ff       	call   25e0 <print_number>
    262a:	89 ef                	mov    %ebp,%edi
    262c:	4c 89 e0             	mov    %r12,%rax
    262f:	4c 09 f8             	or     %r15,%rax
    2632:	48 c1 e8 20          	shr    $0x20,%rax
    2636:	74 0a                	je     2642 <print_number+0x62>
    2638:	4c 89 e0             	mov    %r12,%rax
    263b:	31 d2                	xor    %edx,%edx
    263d:	49 f7 f7             	div    %r15
    2640:	eb 08                	jmp    264a <print_number+0x6a>
    2642:	44 89 e0             	mov    %r12d,%eax
    2645:	31 d2                	xor    %edx,%edx
    2647:	41 f7 f7             	div    %r15d
    264a:	49 01 d6             	add    %rdx,%r14
    264d:	ba 01 00 00 00       	mov    $0x1,%edx
    2652:	4c 89 f6             	mov    %r14,%rsi
    2655:	e8 36 ea ff ff       	call   1090 <write@plt>
    265a:	ff 03                	incl   (%rbx)
    265c:	5b                   	pop    %rbx
    265d:	41 5c                	pop    %r12
    265f:	41 5e                	pop    %r14
    2661:	41 5f                	pop    %r15
    2663:	5d                   	pop    %rbp
    2664:	31 c0                	xor    %eax,%eax
    2666:	31 c9                	xor    %ecx,%ecx
    2668:	31 ff                	xor    %edi,%edi
    266a:	31 d2                	xor    %edx,%edx
    266c:	31 f6                	xor    %esi,%esi
    266e:	45 31 c0             	xor    %r8d,%r8d
    2671:	c3                   	ret
    2672:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    2679:	1f 84 00 00 00 00 00 

0000000000002680 <ft_putnbr_base_p>:
    2680:	55                   	push   %rbp
    2681:	41 56                	push   %r14
    2683:	53                   	push   %rbx
    2684:	48 83 ec 10          	sub    $0x10,%rsp
    2688:	48 89 d3             	mov    %rdx,%rbx
    268b:	49 89 f6             	mov    %rsi,%r14
    268e:	89 fd                	mov    %edi,%ebp
    2690:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2697:	00 00 
    2699:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    269e:	48 89 d7             	mov    %rdx,%rdi
    26a1:	e8 6a 07 00 00       	call   2e10 <ft_strlen>
    26a6:	c7 44 24 04 00 00 00 	movl   $0x0,0x4(%rsp)
    26ad:	00 
    26ae:	4c 8d 44 24 04       	lea    0x4(%rsp),%r8
    26b3:	89 ef                	mov    %ebp,%edi
    26b5:	4c 89 f6             	mov    %r14,%rsi
    26b8:	48 89 da             	mov    %rbx,%rdx
    26bb:	48 89 c1             	mov    %rax,%rcx
    26be:	e8 1d ff ff ff       	call   25e0 <print_number>
    26c3:	8b 44 24 04          	mov    0x4(%rsp),%eax
    26c7:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    26ce:	00 00 
    26d0:	48 3b 4c 24 08       	cmp    0x8(%rsp),%rcx
    26d5:	75 14                	jne    26eb <ft_putnbr_base_p+0x6b>
    26d7:	48 83 c4 10          	add    $0x10,%rsp
    26db:	5b                   	pop    %rbx
    26dc:	41 5e                	pop    %r14
    26de:	5d                   	pop    %rbp
    26df:	31 c9                	xor    %ecx,%ecx
    26e1:	31 ff                	xor    %edi,%edi
    26e3:	31 d2                	xor    %edx,%edx
    26e5:	31 f6                	xor    %esi,%esi
    26e7:	45 31 c0             	xor    %r8d,%r8d
    26ea:	c3                   	ret
    26eb:	e8 f0 e9 ff ff       	call   10e0 <__stack_chk_fail@plt>

00000000000026f0 <ft_putnbr_base>:
    26f0:	55                   	push   %rbp
    26f1:	41 57                	push   %r15
    26f3:	41 56                	push   %r14
    26f5:	53                   	push   %rbx
    26f6:	48 83 ec 18          	sub    $0x18,%rsp
    26fa:	48 89 d3             	mov    %rdx,%rbx
    26fd:	49 89 f6             	mov    %rsi,%r14
    2700:	89 fd                	mov    %edi,%ebp
    2702:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    2709:	00 00 
    270b:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    2710:	48 89 d7             	mov    %rdx,%rdi
    2713:	e8 f8 06 00 00       	call   2e10 <ft_strlen>
    2718:	49 89 c7             	mov    %rax,%r15
    271b:	c7 44 24 0c 00 00 00 	movl   $0x0,0xc(%rsp)
    2722:	00 
    2723:	4d 85 f6             	test   %r14,%r14
    2726:	79 1e                	jns    2746 <ft_putnbr_base+0x56>
    2728:	48 8d 35 0f 59 00 00 	lea    0x590f(%rip),%rsi        # 803e <_IO_stdin_used+0x3e>
    272f:	ba 01 00 00 00       	mov    $0x1,%edx
    2734:	89 ef                	mov    %ebp,%edi
    2736:	e8 55 e9 ff ff       	call   1090 <write@plt>
    273b:	49 f7 de             	neg    %r14
    273e:	c7 44 24 0c 01 00 00 	movl   $0x1,0xc(%rsp)
    2745:	00 
    2746:	4c 8d 44 24 0c       	lea    0xc(%rsp),%r8
    274b:	89 ef                	mov    %ebp,%edi
    274d:	4c 89 f6             	mov    %r14,%rsi
    2750:	48 89 da             	mov    %rbx,%rdx
    2753:	4c 89 f9             	mov    %r15,%rcx
    2756:	e8 85 fe ff ff       	call   25e0 <print_number>
    275b:	8b 44 24 0c          	mov    0xc(%rsp),%eax
    275f:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    2766:	00 00 
    2768:	48 3b 4c 24 10       	cmp    0x10(%rsp),%rcx
    276d:	75 16                	jne    2785 <ft_putnbr_base+0x95>
    276f:	48 83 c4 18          	add    $0x18,%rsp
    2773:	5b                   	pop    %rbx
    2774:	41 5e                	pop    %r14
    2776:	41 5f                	pop    %r15
    2778:	5d                   	pop    %rbp
    2779:	31 c9                	xor    %ecx,%ecx
    277b:	31 ff                	xor    %edi,%edi
    277d:	31 d2                	xor    %edx,%edx
    277f:	31 f6                	xor    %esi,%esi
    2781:	45 31 c0             	xor    %r8d,%r8d
    2784:	c3                   	ret
    2785:	e8 56 e9 ff ff       	call   10e0 <__stack_chk_fail@plt>
    278a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000002790 <ft_putstr_fd>:
    2790:	41 56                	push   %r14
    2792:	53                   	push   %rbx
    2793:	50                   	push   %rax
    2794:	89 f3                	mov    %esi,%ebx
    2796:	49 89 fe             	mov    %rdi,%r14
    2799:	e8 72 06 00 00       	call   2e10 <ft_strlen>
    279e:	89 df                	mov    %ebx,%edi
    27a0:	4c 89 f6             	mov    %r14,%rsi
    27a3:	48 89 c2             	mov    %rax,%rdx
    27a6:	48 83 c4 08          	add    $0x8,%rsp
    27aa:	5b                   	pop    %rbx
    27ab:	41 5e                	pop    %r14
    27ad:	31 c0                	xor    %eax,%eax
    27af:	e9 dc e8 ff ff       	jmp    1090 <write@plt>
    27b4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    27bb:	00 00 00 
    27be:	66 90                	xchg   %ax,%ax

00000000000027c0 <ft_putstrerr>:
    27c0:	be 02 00 00 00       	mov    $0x2,%esi
    27c5:	e9 c6 ff ff ff       	jmp    2790 <ft_putstr_fd>
    27ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000027d0 <ft_split_dels>:
    27d0:	41 57                	push   %r15
    27d2:	41 56                	push   %r14
    27d4:	41 54                	push   %r12
    27d6:	53                   	push   %rbx
    27d7:	48 83 ec 18          	sub    $0x18,%rsp
    27db:	48 89 f3             	mov    %rsi,%rbx
    27de:	49 89 fe             	mov    %rdi,%r14
    27e1:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    27e8:	00 00 
    27ea:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    27ef:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    27f6:	00 00 
    27f8:	0f b6 07             	movzbl (%rdi),%eax
    27fb:	84 c0                	test   %al,%al
    27fd:	0f 84 9b 00 00 00    	je     289e <ft_split_dels+0xce>
    2803:	4c 8d 64 24 08       	lea    0x8(%rsp),%r12
    2808:	45 31 ff             	xor    %r15d,%r15d
    280b:	0f be f0             	movsbl %al,%esi
    280e:	48 89 df             	mov    %rbx,%rdi
    2811:	e8 4a 04 00 00       	call   2c60 <ft_strchr>
    2816:	48 85 c0             	test   %rax,%rax
    2819:	75 44                	jne    285f <ft_split_dels+0x8f>
    281b:	4c 89 e7             	mov    %r12,%rdi
    281e:	4c 89 fe             	mov    %r15,%rsi
    2821:	4c 89 f2             	mov    %r14,%rdx
    2824:	48 89 d9             	mov    %rbx,%rcx
    2827:	e8 d4 00 00 00       	call   2900 <one_more_string>
    282c:	85 c0                	test   %eax,%eax
    282e:	0f 84 93 00 00 00    	je     28c7 <ft_split_dels+0xf7>
    2834:	41 0f b6 06          	movzbl (%r14),%eax
    2838:	84 c0                	test   %al,%al
    283a:	74 20                	je     285c <ft_split_dels+0x8c>
    283c:	0f 1f 40 00          	nopl   0x0(%rax)
    2840:	0f be f0             	movsbl %al,%esi
    2843:	48 89 df             	mov    %rbx,%rdi
    2846:	e8 15 04 00 00       	call   2c60 <ft_strchr>
    284b:	48 85 c0             	test   %rax,%rax
    284e:	75 0c                	jne    285c <ft_split_dels+0x8c>
    2850:	41 0f b6 46 01       	movzbl 0x1(%r14),%eax
    2855:	49 ff c6             	inc    %r14
    2858:	84 c0                	test   %al,%al
    285a:	75 e4                	jne    2840 <ft_split_dels+0x70>
    285c:	49 ff c7             	inc    %r15
    285f:	41 0f b6 06          	movzbl (%r14),%eax
    2863:	84 c0                	test   %al,%al
    2865:	74 3a                	je     28a1 <ft_split_dels+0xd1>
    2867:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    286e:	00 00 
    2870:	0f be f0             	movsbl %al,%esi
    2873:	48 89 df             	mov    %rbx,%rdi
    2876:	e8 e5 03 00 00       	call   2c60 <ft_strchr>
    287b:	48 85 c0             	test   %rax,%rax
    287e:	74 10                	je     2890 <ft_split_dels+0xc0>
    2880:	41 0f b6 46 01       	movzbl 0x1(%r14),%eax
    2885:	49 ff c6             	inc    %r14
    2888:	84 c0                	test   %al,%al
    288a:	75 e4                	jne    2870 <ft_split_dels+0xa0>
    288c:	eb 13                	jmp    28a1 <ft_split_dels+0xd1>
    288e:	66 90                	xchg   %ax,%ax
    2890:	41 0f b6 06          	movzbl (%r14),%eax
    2894:	84 c0                	test   %al,%al
    2896:	0f 85 6f ff ff ff    	jne    280b <ft_split_dels+0x3b>
    289c:	eb 03                	jmp    28a1 <ft_split_dels+0xd1>
    289e:	45 31 ff             	xor    %r15d,%r15d
    28a1:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    28a6:	4c 89 fe             	mov    %r15,%rsi
    28a9:	4c 89 f2             	mov    %r14,%rdx
    28ac:	48 89 d9             	mov    %rbx,%rcx
    28af:	e8 4c 00 00 00       	call   2900 <one_more_string>
    28b4:	85 c0                	test   %eax,%eax
    28b6:	74 0f                	je     28c7 <ft_split_dels+0xf7>
    28b8:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    28bd:	4a c7 04 f8 00 00 00 	movq   $0x0,(%rax,%r15,8)
    28c4:	00 
    28c5:	eb 02                	jmp    28c9 <ft_split_dels+0xf9>
    28c7:	31 c0                	xor    %eax,%eax
    28c9:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    28d0:	00 00 
    28d2:	48 3b 4c 24 10       	cmp    0x10(%rsp),%rcx
    28d7:	75 14                	jne    28ed <ft_split_dels+0x11d>
    28d9:	48 83 c4 18          	add    $0x18,%rsp
    28dd:	5b                   	pop    %rbx
    28de:	41 5c                	pop    %r12
    28e0:	41 5e                	pop    %r14
    28e2:	41 5f                	pop    %r15
    28e4:	31 c9                	xor    %ecx,%ecx
    28e6:	31 ff                	xor    %edi,%edi
    28e8:	31 d2                	xor    %edx,%edx
    28ea:	31 f6                	xor    %esi,%esi
    28ec:	c3                   	ret
    28ed:	e8 ee e7 ff ff       	call   10e0 <__stack_chk_fail@plt>
    28f2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    28f9:	1f 84 00 00 00 00 00 

0000000000002900 <one_more_string>:
    2900:	55                   	push   %rbp
    2901:	41 57                	push   %r15
    2903:	41 56                	push   %r14
    2905:	41 55                	push   %r13
    2907:	41 54                	push   %r12
    2909:	53                   	push   %rbx
    290a:	50                   	push   %rax
    290b:	49 89 cc             	mov    %rcx,%r12
    290e:	49 89 d7             	mov    %rdx,%r15
    2911:	48 89 f3             	mov    %rsi,%rbx
    2914:	49 89 fe             	mov    %rdi,%r14
    2917:	48 8d 3c f5 08 00 00 	lea    0x8(,%rsi,8),%rdi
    291e:	00 
    291f:	e8 6c e8 ff ff       	call   1190 <malloc@plt>
    2924:	48 85 c0             	test   %rax,%rax
    2927:	74 65                	je     298e <one_more_string+0x8e>
    2929:	49 89 c5             	mov    %rax,%r13
    292c:	49 8b 3e             	mov    (%r14),%rdi
    292f:	48 85 db             	test   %rbx,%rbx
    2932:	0f 84 b9 00 00 00    	je     29f1 <one_more_string+0xf1>
    2938:	31 c0                	xor    %eax,%eax
    293a:	48 83 fb 06          	cmp    $0x6,%rbx
    293e:	72 76                	jb     29b6 <one_more_string+0xb6>
    2940:	4c 89 e9             	mov    %r13,%rcx
    2943:	48 29 f9             	sub    %rdi,%rcx
    2946:	48 83 f9 1f          	cmp    $0x1f,%rcx
    294a:	76 6a                	jbe    29b6 <one_more_string+0xb6>
    294c:	48 89 d8             	mov    %rbx,%rax
    294f:	48 83 e0 fc          	and    $0xfffffffffffffffc,%rax
    2953:	31 c9                	xor    %ecx,%ecx
    2955:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    295c:	00 00 00 00 
    2960:	0f 10 04 cf          	movups (%rdi,%rcx,8),%xmm0
    2964:	0f 10 4c cf 10       	movups 0x10(%rdi,%rcx,8),%xmm1
    2969:	41 0f 11 44 cd 00    	movups %xmm0,0x0(%r13,%rcx,8)
    296f:	41 0f 11 4c cd 10    	movups %xmm1,0x10(%r13,%rcx,8)
    2975:	48 83 c1 04          	add    $0x4,%rcx
    2979:	48 39 c8             	cmp    %rcx,%rax
    297c:	75 e2                	jne    2960 <one_more_string+0x60>
    297e:	48 39 d8             	cmp    %rbx,%rax
    2981:	75 33                	jne    29b6 <one_more_string+0xb6>
    2983:	48 ff c8             	dec    %rax
    2986:	48 89 c5             	mov    %rax,%rbp
    2989:	e9 cc 00 00 00       	jmp    2a5a <one_more_string+0x15a>
    298e:	4d 8b 36             	mov    (%r14),%r14
    2991:	48 85 db             	test   %rbx,%rbx
    2994:	0f 84 57 01 00 00    	je     2af1 <one_more_string+0x1f1>
    299a:	45 31 ff             	xor    %r15d,%r15d
    299d:	0f 1f 00             	nopl   (%rax)
    29a0:	4b 8b 3c fe          	mov    (%r14,%r15,8),%rdi
    29a4:	49 ff c7             	inc    %r15
    29a7:	e8 94 e6 ff ff       	call   1040 <free@plt>
    29ac:	4c 39 fb             	cmp    %r15,%rbx
    29af:	75 ef                	jne    29a0 <one_more_string+0xa0>
    29b1:	e9 3b 01 00 00       	jmp    2af1 <one_more_string+0x1f1>
    29b6:	48 89 d9             	mov    %rbx,%rcx
    29b9:	48 83 e1 03          	and    $0x3,%rcx
    29bd:	74 3b                	je     29fa <one_more_string+0xfa>
    29bf:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
    29c6:	00 
    29c7:	48 f7 d9             	neg    %rcx
    29ca:	31 f6                	xor    %esi,%esi
    29cc:	0f 1f 40 00          	nopl   0x0(%rax)
    29d0:	4c 8b 04 17          	mov    (%rdi,%rdx,1),%r8
    29d4:	4d 89 44 15 00       	mov    %r8,0x0(%r13,%rdx,1)
    29d9:	48 ff ce             	dec    %rsi
    29dc:	48 83 c2 08          	add    $0x8,%rdx
    29e0:	48 39 f1             	cmp    %rsi,%rcx
    29e3:	75 eb                	jne    29d0 <one_more_string+0xd0>
    29e5:	48 89 c1             	mov    %rax,%rcx
    29e8:	48 29 f1             	sub    %rsi,%rcx
    29eb:	48 8d 69 ff          	lea    -0x1(%rcx),%rbp
    29ef:	eb 0c                	jmp    29fd <one_more_string+0xfd>
    29f1:	48 c7 c5 ff ff ff ff 	mov    $0xffffffffffffffff,%rbp
    29f8:	eb 60                	jmp    2a5a <one_more_string+0x15a>
    29fa:	48 89 c1             	mov    %rax,%rcx
    29fd:	48 29 d8             	sub    %rbx,%rax
    2a00:	48 83 f8 fc          	cmp    $0xfffffffffffffffc,%rax
    2a04:	77 54                	ja     2a5a <one_more_string+0x15a>
    2a06:	48 89 d8             	mov    %rbx,%rax
    2a09:	48 f7 d8             	neg    %rax
    2a0c:	48 ff c9             	dec    %rcx
    2a0f:	48 89 cd             	mov    %rcx,%rbp
    2a12:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    2a19:	1f 84 00 00 00 00 00 
    2a20:	48 8b 4c ef 08       	mov    0x8(%rdi,%rbp,8),%rcx
    2a25:	49 89 4c ed 08       	mov    %rcx,0x8(%r13,%rbp,8)
    2a2a:	48 8b 4c ef 10       	mov    0x10(%rdi,%rbp,8),%rcx
    2a2f:	49 89 4c ed 10       	mov    %rcx,0x10(%r13,%rbp,8)
    2a34:	48 8b 4c ef 18       	mov    0x18(%rdi,%rbp,8),%rcx
    2a39:	49 89 4c ed 18       	mov    %rcx,0x18(%r13,%rbp,8)
    2a3e:	48 8b 4c ef 20       	mov    0x20(%rdi,%rbp,8),%rcx
    2a43:	49 89 4c ed 20       	mov    %rcx,0x20(%r13,%rbp,8)
    2a48:	48 8d 0c 28          	lea    (%rax,%rbp,1),%rcx
    2a4c:	48 83 c1 04          	add    $0x4,%rcx
    2a50:	48 83 c5 04          	add    $0x4,%rbp
    2a54:	48 83 f9 ff          	cmp    $0xffffffffffffffff,%rcx
    2a58:	75 c6                	jne    2a20 <one_more_string+0x120>
    2a5a:	e8 e1 e5 ff ff       	call   1040 <free@plt>
    2a5f:	4d 89 2e             	mov    %r13,(%r14)
    2a62:	41 0f b6 0f          	movzbl (%r15),%ecx
    2a66:	b8 01 00 00 00       	mov    $0x1,%eax
    2a6b:	84 c9                	test   %cl,%cl
    2a6d:	0f 84 88 00 00 00    	je     2afb <one_more_string+0x1fb>
    2a73:	45 31 ed             	xor    %r13d,%r13d
    2a76:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2a7d:	00 00 00 
    2a80:	0f be f1             	movsbl %cl,%esi
    2a83:	4c 89 e7             	mov    %r12,%rdi
    2a86:	e8 d5 01 00 00       	call   2c60 <ft_strchr>
    2a8b:	48 85 c0             	test   %rax,%rax
    2a8e:	75 0d                	jne    2a9d <one_more_string+0x19d>
    2a90:	43 0f b6 4c 2f 01    	movzbl 0x1(%r15,%r13,1),%ecx
    2a96:	49 ff c5             	inc    %r13
    2a99:	84 c9                	test   %cl,%cl
    2a9b:	75 e3                	jne    2a80 <one_more_string+0x180>
    2a9d:	49 ff c5             	inc    %r13
    2aa0:	4c 89 ef             	mov    %r13,%rdi
    2aa3:	e8 e8 e6 ff ff       	call   1190 <malloc@plt>
    2aa8:	48 85 c0             	test   %rax,%rax
    2aab:	74 1f                	je     2acc <one_more_string+0x1cc>
    2aad:	48 89 c7             	mov    %rax,%rdi
    2ab0:	4c 89 fe             	mov    %r15,%rsi
    2ab3:	4c 89 ea             	mov    %r13,%rdx
    2ab6:	49 89 c7             	mov    %rax,%r15
    2ab9:	e8 02 03 00 00       	call   2dc0 <ft_strlcpy>
    2abe:	49 8b 06             	mov    (%r14),%rax
    2ac1:	4c 89 3c d8          	mov    %r15,(%rax,%rbx,8)
    2ac5:	b8 01 00 00 00       	mov    $0x1,%eax
    2aca:	eb 2f                	jmp    2afb <one_more_string+0x1fb>
    2acc:	4d 8b 36             	mov    (%r14),%r14
    2acf:	48 85 db             	test   %rbx,%rbx
    2ad2:	74 1d                	je     2af1 <one_more_string+0x1f1>
    2ad4:	48 ff c5             	inc    %rbp
    2ad7:	31 db                	xor    %ebx,%ebx
    2ad9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2ae0:	49 8b 3c de          	mov    (%r14,%rbx,8),%rdi
    2ae4:	48 ff c3             	inc    %rbx
    2ae7:	e8 54 e5 ff ff       	call   1040 <free@plt>
    2aec:	48 39 dd             	cmp    %rbx,%rbp
    2aef:	75 ef                	jne    2ae0 <one_more_string+0x1e0>
    2af1:	4c 89 f7             	mov    %r14,%rdi
    2af4:	e8 47 e5 ff ff       	call   1040 <free@plt>
    2af9:	31 c0                	xor    %eax,%eax
    2afb:	48 83 c4 08          	add    $0x8,%rsp
    2aff:	5b                   	pop    %rbx
    2b00:	41 5c                	pop    %r12
    2b02:	41 5d                	pop    %r13
    2b04:	41 5e                	pop    %r14
    2b06:	41 5f                	pop    %r15
    2b08:	5d                   	pop    %rbp
    2b09:	31 c9                	xor    %ecx,%ecx
    2b0b:	31 ff                	xor    %edi,%edi
    2b0d:	31 d2                	xor    %edx,%edx
    2b0f:	31 f6                	xor    %esi,%esi
    2b11:	45 31 c0             	xor    %r8d,%r8d
    2b14:	c3                   	ret
    2b15:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2b1c:	00 00 00 
    2b1f:	90                   	nop

0000000000002b20 <ft_split>:
    2b20:	41 57                	push   %r15
    2b22:	41 56                	push   %r14
    2b24:	41 55                	push   %r13
    2b26:	41 54                	push   %r12
    2b28:	53                   	push   %rbx
    2b29:	89 f3                	mov    %esi,%ebx
    2b2b:	49 89 fe             	mov    %rdi,%r14
    2b2e:	0f b6 0f             	movzbl (%rdi),%ecx
    2b31:	84 c9                	test   %cl,%cl
    2b33:	74 48                	je     2b7d <ft_split+0x5d>
    2b35:	31 ff                	xor    %edi,%edi
    2b37:	31 c0                	xor    %eax,%eax
    2b39:	eb 12                	jmp    2b4d <ft_split+0x2d>
    2b3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2b40:	41 0f b6 4c 06 01    	movzbl 0x1(%r14,%rax,1),%ecx
    2b46:	48 ff c0             	inc    %rax
    2b49:	84 c9                	test   %cl,%cl
    2b4b:	74 2b                	je     2b78 <ft_split+0x58>
    2b4d:	38 d9                	cmp    %bl,%cl
    2b4f:	74 ef                	je     2b40 <ft_split+0x20>
    2b51:	48 ff c8             	dec    %rax
    2b54:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    2b5b:	00 00 00 00 00 
    2b60:	41 0f b6 4c 06 01    	movzbl 0x1(%r14,%rax,1),%ecx
    2b66:	48 ff c0             	inc    %rax
    2b69:	84 c9                	test   %cl,%cl
    2b6b:	74 04                	je     2b71 <ft_split+0x51>
    2b6d:	38 d9                	cmp    %bl,%cl
    2b6f:	75 ef                	jne    2b60 <ft_split+0x40>
    2b71:	48 ff c7             	inc    %rdi
    2b74:	84 c9                	test   %cl,%cl
    2b76:	75 d5                	jne    2b4d <ft_split+0x2d>
    2b78:	48 ff c7             	inc    %rdi
    2b7b:	eb 05                	jmp    2b82 <ft_split+0x62>
    2b7d:	bf 01 00 00 00       	mov    $0x1,%edi
    2b82:	be 08 00 00 00       	mov    $0x8,%esi
    2b87:	e8 54 f2 ff ff       	call   1de0 <ft_calloc>
    2b8c:	48 85 c0             	test   %rax,%rax
    2b8f:	0f 84 a4 00 00 00    	je     2c39 <ft_split+0x119>
    2b95:	49 89 c7             	mov    %rax,%r15
    2b98:	41 0f b6 06          	movzbl (%r14),%eax
    2b9c:	84 c0                	test   %al,%al
    2b9e:	0f 84 98 00 00 00    	je     2c3c <ft_split+0x11c>
    2ba4:	45 31 e4             	xor    %r12d,%r12d
    2ba7:	4c 89 f7             	mov    %r14,%rdi
    2baa:	eb 14                	jmp    2bc0 <ft_split+0xa0>
    2bac:	0f 1f 40 00          	nopl   0x0(%rax)
    2bb0:	49 ff c4             	inc    %r12
    2bb3:	4b 8d 3c 26          	lea    (%r14,%r12,1),%rdi
    2bb7:	43 0f b6 04 26       	movzbl (%r14,%r12,1),%eax
    2bbc:	84 c0                	test   %al,%al
    2bbe:	74 7c                	je     2c3c <ft_split+0x11c>
    2bc0:	38 d8                	cmp    %bl,%al
    2bc2:	74 ec                	je     2bb0 <ft_split+0x90>
    2bc4:	4b 8d 04 26          	lea    (%r14,%r12,1),%rax
    2bc8:	31 d2                	xor    %edx,%edx
    2bca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    2bd0:	0f b6 0c 10          	movzbl (%rax,%rdx,1),%ecx
    2bd4:	48 ff c2             	inc    %rdx
    2bd7:	38 d9                	cmp    %bl,%cl
    2bd9:	74 04                	je     2bdf <ft_split+0xbf>
    2bdb:	84 c9                	test   %cl,%cl
    2bdd:	75 f1                	jne    2bd0 <ft_split+0xb0>
    2bdf:	49 01 d4             	add    %rdx,%r12
    2be2:	49 ff cc             	dec    %r12
    2be5:	48 ff ca             	dec    %rdx
    2be8:	4d 89 fd             	mov    %r15,%r13
    2beb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2bf0:	49 83 7d 00 00       	cmpq   $0x0,0x0(%r13)
    2bf5:	4d 8d 6d 08          	lea    0x8(%r13),%r13
    2bf9:	75 f5                	jne    2bf0 <ft_split+0xd0>
    2bfb:	31 f6                	xor    %esi,%esi
    2bfd:	e8 de 03 00 00       	call   2fe0 <ft_substr>
    2c02:	48 85 c0             	test   %rax,%rax
    2c05:	74 06                	je     2c0d <ft_split+0xed>
    2c07:	49 89 45 f8          	mov    %rax,-0x8(%r13)
    2c0b:	eb a6                	jmp    2bb3 <ft_split+0x93>
    2c0d:	49 8b 3f             	mov    (%r15),%rdi
    2c10:	48 85 ff             	test   %rdi,%rdi
    2c13:	74 1c                	je     2c31 <ft_split+0x111>
    2c15:	4c 89 fb             	mov    %r15,%rbx
    2c18:	48 83 c3 08          	add    $0x8,%rbx
    2c1c:	0f 1f 40 00          	nopl   0x0(%rax)
    2c20:	e8 1b e4 ff ff       	call   1040 <free@plt>
    2c25:	48 8b 3b             	mov    (%rbx),%rdi
    2c28:	48 83 c3 08          	add    $0x8,%rbx
    2c2c:	48 85 ff             	test   %rdi,%rdi
    2c2f:	75 ef                	jne    2c20 <ft_split+0x100>
    2c31:	4c 89 ff             	mov    %r15,%rdi
    2c34:	e8 07 e4 ff ff       	call   1040 <free@plt>
    2c39:	45 31 ff             	xor    %r15d,%r15d
    2c3c:	4c 89 f8             	mov    %r15,%rax
    2c3f:	5b                   	pop    %rbx
    2c40:	41 5c                	pop    %r12
    2c42:	41 5d                	pop    %r13
    2c44:	41 5e                	pop    %r14
    2c46:	41 5f                	pop    %r15
    2c48:	31 c9                	xor    %ecx,%ecx
    2c4a:	31 ff                	xor    %edi,%edi
    2c4c:	31 d2                	xor    %edx,%edx
    2c4e:	31 f6                	xor    %esi,%esi
    2c50:	c3                   	ret
    2c51:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2c58:	00 00 00 
    2c5b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002c60 <ft_strchr>:
    2c60:	0f b6 0f             	movzbl (%rdi),%ecx
    2c63:	31 c0                	xor    %eax,%eax
    2c65:	84 c9                	test   %cl,%cl
    2c67:	74 1a                	je     2c83 <ft_strchr+0x23>
    2c69:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2c70:	0f be c9             	movsbl %cl,%ecx
    2c73:	39 f1                	cmp    %esi,%ecx
    2c75:	74 19                	je     2c90 <ft_strchr+0x30>
    2c77:	0f b6 4c 07 01       	movzbl 0x1(%rdi,%rax,1),%ecx
    2c7c:	48 ff c0             	inc    %rax
    2c7f:	84 c9                	test   %cl,%cl
    2c81:	75 ed                	jne    2c70 <ft_strchr+0x10>
    2c83:	48 01 c7             	add    %rax,%rdi
    2c86:	31 c0                	xor    %eax,%eax
    2c88:	85 f6                	test   %esi,%esi
    2c8a:	48 0f 44 c7          	cmove  %rdi,%rax
    2c8e:	eb 06                	jmp    2c96 <ft_strchr+0x36>
    2c90:	48 01 c7             	add    %rax,%rdi
    2c93:	48 89 f8             	mov    %rdi,%rax
    2c96:	31 c9                	xor    %ecx,%ecx
    2c98:	31 ff                	xor    %edi,%edi
    2c9a:	31 f6                	xor    %esi,%esi
    2c9c:	c3                   	ret
    2c9d:	0f 1f 00             	nopl   (%rax)

0000000000002ca0 <ft_strdup>:
    2ca0:	53                   	push   %rbx
    2ca1:	48 89 fb             	mov    %rdi,%rbx
    2ca4:	31 ff                	xor    %edi,%edi
    2ca6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2cad:	00 00 00 
    2cb0:	80 3c 3b 00          	cmpb   $0x0,(%rbx,%rdi,1)
    2cb4:	48 8d 7f 01          	lea    0x1(%rdi),%rdi
    2cb8:	75 f6                	jne    2cb0 <ft_strdup+0x10>
    2cba:	e8 d1 e4 ff ff       	call   1190 <malloc@plt>
    2cbf:	48 85 c0             	test   %rax,%rax
    2cc2:	74 1f                	je     2ce3 <ft_strdup+0x43>
    2cc4:	0f b6 13             	movzbl (%rbx),%edx
    2cc7:	31 c9                	xor    %ecx,%ecx
    2cc9:	84 d2                	test   %dl,%dl
    2ccb:	74 12                	je     2cdf <ft_strdup+0x3f>
    2ccd:	0f 1f 00             	nopl   (%rax)
    2cd0:	88 14 08             	mov    %dl,(%rax,%rcx,1)
    2cd3:	0f b6 54 0b 01       	movzbl 0x1(%rbx,%rcx,1),%edx
    2cd8:	48 ff c1             	inc    %rcx
    2cdb:	84 d2                	test   %dl,%dl
    2cdd:	75 f1                	jne    2cd0 <ft_strdup+0x30>
    2cdf:	c6 04 08 00          	movb   $0x0,(%rax,%rcx,1)
    2ce3:	5b                   	pop    %rbx
    2ce4:	31 c9                	xor    %ecx,%ecx
    2ce6:	31 ff                	xor    %edi,%edi
    2ce8:	31 d2                	xor    %edx,%edx
    2cea:	c3                   	ret
    2ceb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002cf0 <ft_strjoin>:
    2cf0:	41 57                	push   %r15
    2cf2:	41 56                	push   %r14
    2cf4:	53                   	push   %rbx
    2cf5:	48 89 f3             	mov    %rsi,%rbx
    2cf8:	49 89 fe             	mov    %rdi,%r14
    2cfb:	e8 10 01 00 00       	call   2e10 <ft_strlen>
    2d00:	49 89 c7             	mov    %rax,%r15
    2d03:	48 89 df             	mov    %rbx,%rdi
    2d06:	e8 05 01 00 00       	call   2e10 <ft_strlen>
    2d0b:	49 8d 3c 07          	lea    (%r15,%rax,1),%rdi
    2d0f:	48 ff c7             	inc    %rdi
    2d12:	e8 79 e4 ff ff       	call   1190 <malloc@plt>
    2d17:	48 85 c0             	test   %rax,%rax
    2d1a:	74 63                	je     2d7f <ft_strjoin+0x8f>
    2d1c:	4d 85 f6             	test   %r14,%r14
    2d1f:	74 26                	je     2d47 <ft_strjoin+0x57>
    2d21:	41 0f b6 16          	movzbl (%r14),%edx
    2d25:	31 c9                	xor    %ecx,%ecx
    2d27:	84 d2                	test   %dl,%dl
    2d29:	74 15                	je     2d40 <ft_strjoin+0x50>
    2d2b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2d30:	88 14 08             	mov    %dl,(%rax,%rcx,1)
    2d33:	41 0f b6 54 0e 01    	movzbl 0x1(%r14,%rcx,1),%edx
    2d39:	48 ff c1             	inc    %rcx
    2d3c:	84 d2                	test   %dl,%dl
    2d3e:	75 f0                	jne    2d30 <ft_strjoin+0x40>
    2d40:	48 85 db             	test   %rbx,%rbx
    2d43:	75 09                	jne    2d4e <ft_strjoin+0x5e>
    2d45:	eb 2c                	jmp    2d73 <ft_strjoin+0x83>
    2d47:	31 c9                	xor    %ecx,%ecx
    2d49:	48 85 db             	test   %rbx,%rbx
    2d4c:	74 25                	je     2d73 <ft_strjoin+0x83>
    2d4e:	0f b6 33             	movzbl (%rbx),%esi
    2d51:	40 84 f6             	test   %sil,%sil
    2d54:	74 1d                	je     2d73 <ft_strjoin+0x83>
    2d56:	48 8d 3c 08          	lea    (%rax,%rcx,1),%rdi
    2d5a:	31 d2                	xor    %edx,%edx
    2d5c:	0f 1f 40 00          	nopl   0x0(%rax)
    2d60:	40 88 34 17          	mov    %sil,(%rdi,%rdx,1)
    2d64:	0f b6 74 13 01       	movzbl 0x1(%rbx,%rdx,1),%esi
    2d69:	48 ff c2             	inc    %rdx
    2d6c:	40 84 f6             	test   %sil,%sil
    2d6f:	75 ef                	jne    2d60 <ft_strjoin+0x70>
    2d71:	eb 02                	jmp    2d75 <ft_strjoin+0x85>
    2d73:	31 d2                	xor    %edx,%edx
    2d75:	48 89 c6             	mov    %rax,%rsi
    2d78:	48 01 d6             	add    %rdx,%rsi
    2d7b:	c6 04 31 00          	movb   $0x0,(%rcx,%rsi,1)
    2d7f:	5b                   	pop    %rbx
    2d80:	41 5e                	pop    %r14
    2d82:	41 5f                	pop    %r15
    2d84:	31 c9                	xor    %ecx,%ecx
    2d86:	31 ff                	xor    %edi,%edi
    2d88:	31 d2                	xor    %edx,%edx
    2d8a:	31 f6                	xor    %esi,%esi
    2d8c:	c3                   	ret
    2d8d:	0f 1f 00             	nopl   (%rax)

0000000000002d90 <ft_strjoinf1>:
    2d90:	41 56                	push   %r14
    2d92:	53                   	push   %rbx
    2d93:	50                   	push   %rax
    2d94:	48 89 fb             	mov    %rdi,%rbx
    2d97:	e8 54 ff ff ff       	call   2cf0 <ft_strjoin>
    2d9c:	49 89 c6             	mov    %rax,%r14
    2d9f:	48 89 df             	mov    %rbx,%rdi
    2da2:	e8 99 e2 ff ff       	call   1040 <free@plt>
    2da7:	4c 89 f0             	mov    %r14,%rax
    2daa:	48 83 c4 08          	add    $0x8,%rsp
    2dae:	5b                   	pop    %rbx
    2daf:	41 5e                	pop    %r14
    2db1:	31 ff                	xor    %edi,%edi
    2db3:	c3                   	ret
    2db4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2dbb:	00 00 00 
    2dbe:	66 90                	xchg   %ax,%ax

0000000000002dc0 <ft_strlcpy>:
    2dc0:	0f b6 0e             	movzbl (%rsi),%ecx
    2dc3:	84 c9                	test   %cl,%cl
    2dc5:	74 24                	je     2deb <ft_strlcpy+0x2b>
    2dc7:	4c 8d 42 ff          	lea    -0x1(%rdx),%r8
    2dcb:	31 c0                	xor    %eax,%eax
    2dcd:	0f 1f 00             	nopl   (%rax)
    2dd0:	48 85 d2             	test   %rdx,%rdx
    2dd3:	74 18                	je     2ded <ft_strlcpy+0x2d>
    2dd5:	4c 39 c0             	cmp    %r8,%rax
    2dd8:	73 13                	jae    2ded <ft_strlcpy+0x2d>
    2dda:	88 0c 07             	mov    %cl,(%rdi,%rax,1)
    2ddd:	0f b6 4c 06 01       	movzbl 0x1(%rsi,%rax,1),%ecx
    2de2:	48 ff c0             	inc    %rax
    2de5:	84 c9                	test   %cl,%cl
    2de7:	75 e7                	jne    2dd0 <ft_strlcpy+0x10>
    2de9:	eb 07                	jmp    2df2 <ft_strlcpy+0x32>
    2deb:	31 c0                	xor    %eax,%eax
    2ded:	48 85 d2             	test   %rdx,%rdx
    2df0:	74 04                	je     2df6 <ft_strlcpy+0x36>
    2df2:	c6 04 07 00          	movb   $0x0,(%rdi,%rax,1)
    2df6:	48 89 f7             	mov    %rsi,%rdi
    2df9:	31 c0                	xor    %eax,%eax
    2dfb:	31 d2                	xor    %edx,%edx
    2dfd:	31 f6                	xor    %esi,%esi
    2dff:	45 31 c0             	xor    %r8d,%r8d
    2e02:	e9 09 00 00 00       	jmp    2e10 <ft_strlen>
    2e07:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2e0e:	00 00 

0000000000002e10 <ft_strlen>:
    2e10:	48 85 ff             	test   %rdi,%rdi
    2e13:	74 1b                	je     2e30 <ft_strlen+0x20>
    2e15:	48 c7 c1 ff ff ff ff 	mov    $0xffffffffffffffff,%rcx
    2e1c:	0f 1f 40 00          	nopl   0x0(%rax)
    2e20:	48 8d 41 01          	lea    0x1(%rcx),%rax
    2e24:	80 7c 0f 01 00       	cmpb   $0x0,0x1(%rdi,%rcx,1)
    2e29:	48 89 c1             	mov    %rax,%rcx
    2e2c:	75 f2                	jne    2e20 <ft_strlen+0x10>
    2e2e:	eb 02                	jmp    2e32 <ft_strlen+0x22>
    2e30:	31 c0                	xor    %eax,%eax
    2e32:	31 c9                	xor    %ecx,%ecx
    2e34:	31 ff                	xor    %edi,%edi
    2e36:	c3                   	ret
    2e37:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    2e3e:	00 00 

0000000000002e40 <ft_strncmp>:
    2e40:	31 c0                	xor    %eax,%eax
    2e42:	48 85 d2             	test   %rdx,%rdx
    2e45:	74 34                	je     2e7b <ft_strncmp+0x3b>
    2e47:	31 c9                	xor    %ecx,%ecx
    2e49:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    2e50:	44 0f b6 04 0f       	movzbl (%rdi,%rcx,1),%r8d
    2e55:	44 0f b6 0c 0e       	movzbl (%rsi,%rcx,1),%r9d
    2e5a:	45 89 c2             	mov    %r8d,%r10d
    2e5d:	45 08 ca             	or     %r9b,%r10b
    2e60:	74 19                	je     2e7b <ft_strncmp+0x3b>
    2e62:	45 38 c8             	cmp    %r9b,%r8b
    2e65:	75 0a                	jne    2e71 <ft_strncmp+0x31>
    2e67:	48 ff c1             	inc    %rcx
    2e6a:	48 39 ca             	cmp    %rcx,%rdx
    2e6d:	75 e1                	jne    2e50 <ft_strncmp+0x10>
    2e6f:	eb 0a                	jmp    2e7b <ft_strncmp+0x3b>
    2e71:	41 0f b6 c1          	movzbl %r9b,%eax
    2e75:	41 29 c0             	sub    %eax,%r8d
    2e78:	44 89 c0             	mov    %r8d,%eax
    2e7b:	31 c9                	xor    %ecx,%ecx
    2e7d:	31 ff                	xor    %edi,%edi
    2e7f:	31 d2                	xor    %edx,%edx
    2e81:	31 f6                	xor    %esi,%esi
    2e83:	45 31 c0             	xor    %r8d,%r8d
    2e86:	45 31 c9             	xor    %r9d,%r9d
    2e89:	45 31 d2             	xor    %r10d,%r10d
    2e8c:	c3                   	ret
    2e8d:	0f 1f 00             	nopl   (%rax)

0000000000002e90 <ft_strnstr>:
    2e90:	0f b6 0e             	movzbl (%rsi),%ecx
    2e93:	84 c9                	test   %cl,%cl
    2e95:	74 75                	je     2f0c <ft_strnstr+0x7c>
    2e97:	44 0f b6 0f          	movzbl (%rdi),%r9d
    2e9b:	45 84 c9             	test   %r9b,%r9b
    2e9e:	0f 94 c0             	sete   %al
    2ea1:	48 85 d2             	test   %rdx,%rdx
    2ea4:	41 0f 94 c0          	sete   %r8b
    2ea8:	41 08 c0             	or     %al,%r8b
    2eab:	75 64                	jne    2f11 <ft_strnstr+0x81>
    2ead:	53                   	push   %rbx
    2eae:	31 c0                	xor    %eax,%eax
    2eb0:	45 31 c0             	xor    %r8d,%r8d
    2eb3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    2eba:	84 00 00 00 00 00 
    2ec0:	41 38 c9             	cmp    %cl,%r9b
    2ec3:	75 2e                	jne    2ef3 <ft_strnstr+0x63>
    2ec5:	49 89 f1             	mov    %rsi,%r9
    2ec8:	4d 89 c2             	mov    %r8,%r10
    2ecb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    2ed0:	45 0f b6 19          	movzbl (%r9),%r11d
    2ed4:	45 84 db             	test   %r11b,%r11b
    2ed7:	74 15                	je     2eee <ft_strnstr+0x5e>
    2ed9:	49 39 d2             	cmp    %rdx,%r10
    2edc:	73 10                	jae    2eee <ft_strnstr+0x5e>
    2ede:	49 8d 5a 01          	lea    0x1(%r10),%rbx
    2ee2:	49 ff c1             	inc    %r9
    2ee5:	46 3a 1c 17          	cmp    (%rdi,%r10,1),%r11b
    2ee9:	49 89 da             	mov    %rbx,%r10
    2eec:	74 e2                	je     2ed0 <ft_strnstr+0x40>
    2eee:	45 84 db             	test   %r11b,%r11b
    2ef1:	74 22                	je     2f15 <ft_strnstr+0x85>
    2ef3:	4d 8d 50 01          	lea    0x1(%r8),%r10
    2ef7:	49 39 d2             	cmp    %rdx,%r10
    2efa:	73 1f                	jae    2f1b <ft_strnstr+0x8b>
    2efc:	46 0f b6 4c 07 01    	movzbl 0x1(%rdi,%r8,1),%r9d
    2f02:	4d 89 d0             	mov    %r10,%r8
    2f05:	45 84 c9             	test   %r9b,%r9b
    2f08:	75 b6                	jne    2ec0 <ft_strnstr+0x30>
    2f0a:	eb 0f                	jmp    2f1b <ft_strnstr+0x8b>
    2f0c:	48 89 f8             	mov    %rdi,%rax
    2f0f:	eb 0b                	jmp    2f1c <ft_strnstr+0x8c>
    2f11:	31 c0                	xor    %eax,%eax
    2f13:	eb 07                	jmp    2f1c <ft_strnstr+0x8c>
    2f15:	4c 01 c7             	add    %r8,%rdi
    2f18:	48 89 f8             	mov    %rdi,%rax
    2f1b:	5b                   	pop    %rbx
    2f1c:	31 c9                	xor    %ecx,%ecx
    2f1e:	31 ff                	xor    %edi,%edi
    2f20:	31 d2                	xor    %edx,%edx
    2f22:	31 f6                	xor    %esi,%esi
    2f24:	45 31 c0             	xor    %r8d,%r8d
    2f27:	45 31 c9             	xor    %r9d,%r9d
    2f2a:	45 31 d2             	xor    %r10d,%r10d
    2f2d:	45 31 db             	xor    %r11d,%r11d
    2f30:	c3                   	ret
    2f31:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    2f38:	00 00 00 
    2f3b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000002f40 <ft_strsjoin>:
    2f40:	55                   	push   %rbp
    2f41:	41 57                	push   %r15
    2f43:	41 56                	push   %r14
    2f45:	41 55                	push   %r13
    2f47:	41 54                	push   %r12
    2f49:	53                   	push   %rbx
    2f4a:	50                   	push   %rax
    2f4b:	48 89 d3             	mov    %rdx,%rbx
    2f4e:	49 89 f6             	mov    %rsi,%r14
    2f51:	49 89 fd             	mov    %rdi,%r13
    2f54:	e8 b7 fe ff ff       	call   2e10 <ft_strlen>
    2f59:	48 89 c5             	mov    %rax,%rbp
    2f5c:	4c 89 f7             	mov    %r14,%rdi
    2f5f:	e8 ac fe ff ff       	call   2e10 <ft_strlen>
    2f64:	49 89 c7             	mov    %rax,%r15
    2f67:	48 89 1c 24          	mov    %rbx,(%rsp)
    2f6b:	48 89 df             	mov    %rbx,%rdi
    2f6e:	e8 9d fe ff ff       	call   2e10 <ft_strlen>
    2f73:	49 8d 0c 2f          	lea    (%r15,%rbp,1),%rcx
    2f77:	4c 8d 24 08          	lea    (%rax,%rcx,1),%r12
    2f7b:	49 ff c4             	inc    %r12
    2f7e:	4c 89 e7             	mov    %r12,%rdi
    2f81:	e8 0a e2 ff ff       	call   1190 <malloc@plt>
    2f86:	48 89 c3             	mov    %rax,%rbx
    2f89:	48 85 c0             	test   %rax,%rax
    2f8c:	74 34                	je     2fc2 <ft_strsjoin+0x82>
    2f8e:	48 89 df             	mov    %rbx,%rdi
    2f91:	4c 89 ee             	mov    %r13,%rsi
    2f94:	4c 89 e2             	mov    %r12,%rdx
    2f97:	e8 24 fe ff ff       	call   2dc0 <ft_strlcpy>
    2f9c:	49 89 dd             	mov    %rbx,%r13
    2f9f:	49 01 ed             	add    %rbp,%r13
    2fa2:	4c 89 ef             	mov    %r13,%rdi
    2fa5:	4c 89 f6             	mov    %r14,%rsi
    2fa8:	4c 89 e2             	mov    %r12,%rdx
    2fab:	e8 10 fe ff ff       	call   2dc0 <ft_strlcpy>
    2fb0:	4d 01 fd             	add    %r15,%r13
    2fb3:	4c 89 ef             	mov    %r13,%rdi
    2fb6:	48 8b 34 24          	mov    (%rsp),%rsi
    2fba:	4c 89 e2             	mov    %r12,%rdx
    2fbd:	e8 fe fd ff ff       	call   2dc0 <ft_strlcpy>
    2fc2:	48 89 d8             	mov    %rbx,%rax
    2fc5:	48 83 c4 08          	add    $0x8,%rsp
    2fc9:	5b                   	pop    %rbx
    2fca:	41 5c                	pop    %r12
    2fcc:	41 5d                	pop    %r13
    2fce:	41 5e                	pop    %r14
    2fd0:	41 5f                	pop    %r15
    2fd2:	5d                   	pop    %rbp
    2fd3:	31 c9                	xor    %ecx,%ecx
    2fd5:	31 ff                	xor    %edi,%edi
    2fd7:	31 d2                	xor    %edx,%edx
    2fd9:	31 f6                	xor    %esi,%esi
    2fdb:	c3                   	ret
    2fdc:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000002fe0 <ft_substr>:
    2fe0:	41 57                	push   %r15
    2fe2:	41 56                	push   %r14
    2fe4:	53                   	push   %rbx
    2fe5:	48 89 d3             	mov    %rdx,%rbx
    2fe8:	49 89 fe             	mov    %rdi,%r14
    2feb:	41 89 f7             	mov    %esi,%r15d
    2fee:	e8 1d fe ff ff       	call   2e10 <ft_strlen>
    2ff3:	4c 39 f8             	cmp    %r15,%rax
    2ff6:	76 31                	jbe    3029 <ft_substr+0x49>
    2ff8:	48 8d 7b 02          	lea    0x2(%rbx),%rdi
    2ffc:	e8 8f e1 ff ff       	call   1190 <malloc@plt>
    3001:	48 85 c0             	test   %rax,%rax
    3004:	74 3a                	je     3040 <ft_substr+0x60>
    3006:	48 85 db             	test   %rbx,%rbx
    3009:	74 39                	je     3044 <ft_substr+0x64>
    300b:	4d 01 fe             	add    %r15,%r14
    300e:	31 c9                	xor    %ecx,%ecx
    3010:	41 0f b6 14 0e       	movzbl (%r14,%rcx,1),%edx
    3015:	84 d2                	test   %dl,%dl
    3017:	74 2d                	je     3046 <ft_substr+0x66>
    3019:	88 14 08             	mov    %dl,(%rax,%rcx,1)
    301c:	48 ff c1             	inc    %rcx
    301f:	48 39 cb             	cmp    %rcx,%rbx
    3022:	75 ec                	jne    3010 <ft_substr+0x30>
    3024:	48 89 d9             	mov    %rbx,%rcx
    3027:	eb 1d                	jmp    3046 <ft_substr+0x66>
    3029:	48 8d 3d 0c 52 00 00 	lea    0x520c(%rip),%rdi        # 823c <_IO_stdin_used+0x23c>
    3030:	5b                   	pop    %rbx
    3031:	41 5e                	pop    %r14
    3033:	41 5f                	pop    %r15
    3035:	31 c9                	xor    %ecx,%ecx
    3037:	31 d2                	xor    %edx,%edx
    3039:	31 f6                	xor    %esi,%esi
    303b:	e9 60 fc ff ff       	jmp    2ca0 <ft_strdup>
    3040:	31 c0                	xor    %eax,%eax
    3042:	eb 06                	jmp    304a <ft_substr+0x6a>
    3044:	31 c9                	xor    %ecx,%ecx
    3046:	c6 04 08 00          	movb   $0x0,(%rax,%rcx,1)
    304a:	5b                   	pop    %rbx
    304b:	41 5e                	pop    %r14
    304d:	41 5f                	pop    %r15
    304f:	31 c9                	xor    %ecx,%ecx
    3051:	31 d2                	xor    %edx,%edx
    3053:	31 f6                	xor    %esi,%esi
    3055:	c3                   	ret
    3056:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    305d:	00 00 00 

0000000000003060 <write_c>:
    3060:	48 83 ec 18          	sub    $0x18,%rsp
    3064:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    306b:	00 00 
    306d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    3072:	40 88 74 24 0f       	mov    %sil,0xf(%rsp)
    3077:	48 8d 74 24 0f       	lea    0xf(%rsp),%rsi
    307c:	ba 01 00 00 00       	mov    $0x1,%edx
    3081:	e8 0a e0 ff ff       	call   1090 <write@plt>
    3086:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    308d:	00 00 
    308f:	48 3b 44 24 10       	cmp    0x10(%rsp),%rax
    3094:	75 0e                	jne    30a4 <write_c+0x44>
    3096:	b8 01 00 00 00       	mov    $0x1,%eax
    309b:	48 83 c4 18          	add    $0x18,%rsp
    309f:	31 d2                	xor    %edx,%edx
    30a1:	31 f6                	xor    %esi,%esi
    30a3:	c3                   	ret
    30a4:	e8 37 e0 ff ff       	call   10e0 <__stack_chk_fail@plt>
    30a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000000030b0 <write_s>:
    30b0:	55                   	push   %rbp
    30b1:	41 56                	push   %r14
    30b3:	53                   	push   %rbx
    30b4:	48 85 f6             	test   %rsi,%rsi
    30b7:	74 1f                	je     30d8 <write_s+0x28>
    30b9:	89 fd                	mov    %edi,%ebp
    30bb:	48 89 f7             	mov    %rsi,%rdi
    30be:	49 89 f6             	mov    %rsi,%r14
    30c1:	e8 4a fd ff ff       	call   2e10 <ft_strlen>
    30c6:	48 89 c3             	mov    %rax,%rbx
    30c9:	48 63 d3             	movslq %ebx,%rdx
    30cc:	89 ef                	mov    %ebp,%edi
    30ce:	4c 89 f6             	mov    %r14,%rsi
    30d1:	e8 ba df ff ff       	call   1090 <write@plt>
    30d6:	eb 16                	jmp    30ee <write_s+0x3e>
    30d8:	48 8d 35 61 4f 00 00 	lea    0x4f61(%rip),%rsi        # 8040 <_IO_stdin_used+0x40>
    30df:	ba 06 00 00 00       	mov    $0x6,%edx
    30e4:	e8 a7 df ff ff       	call   1090 <write@plt>
    30e9:	bb 06 00 00 00       	mov    $0x6,%ebx
    30ee:	89 d8                	mov    %ebx,%eax
    30f0:	5b                   	pop    %rbx
    30f1:	41 5e                	pop    %r14
    30f3:	5d                   	pop    %rbp
    30f4:	31 ff                	xor    %edi,%edi
    30f6:	31 d2                	xor    %edx,%edx
    30f8:	31 f6                	xor    %esi,%esi
    30fa:	c3                   	ret
    30fb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003100 <write_p>:
    3100:	55                   	push   %rbp
    3101:	53                   	push   %rbx
    3102:	50                   	push   %rax
    3103:	48 85 f6             	test   %rsi,%rsi
    3106:	74 2c                	je     3134 <write_p+0x34>
    3108:	48 89 f3             	mov    %rsi,%rbx
    310b:	48 8d 35 3b 4f 00 00 	lea    0x4f3b(%rip),%rsi        # 804d <_IO_stdin_used+0x4d>
    3112:	ba 02 00 00 00       	mov    $0x2,%edx
    3117:	89 fd                	mov    %edi,%ebp
    3119:	e8 72 df ff ff       	call   1090 <write@plt>
    311e:	48 8d 15 2b 4f 00 00 	lea    0x4f2b(%rip),%rdx        # 8050 <_IO_stdin_used+0x50>
    3125:	89 ef                	mov    %ebp,%edi
    3127:	48 89 de             	mov    %rbx,%rsi
    312a:	e8 51 f5 ff ff       	call   2680 <ft_putnbr_base_p>
    312f:	83 c0 02             	add    $0x2,%eax
    3132:	eb 1b                	jmp    314f <write_p+0x4f>
    3134:	48 8d 35 0c 4f 00 00 	lea    0x4f0c(%rip),%rsi        # 8047 <_IO_stdin_used+0x47>
    313b:	ba 05 00 00 00       	mov    $0x5,%edx
    3140:	bf 01 00 00 00       	mov    $0x1,%edi
    3145:	e8 46 df ff ff       	call   1090 <write@plt>
    314a:	b8 05 00 00 00       	mov    $0x5,%eax
    314f:	48 83 c4 08          	add    $0x8,%rsp
    3153:	5b                   	pop    %rbx
    3154:	5d                   	pop    %rbp
    3155:	31 ff                	xor    %edi,%edi
    3157:	31 d2                	xor    %edx,%edx
    3159:	31 f6                	xor    %esi,%esi
    315b:	c3                   	ret
    315c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003160 <write_di>:
    3160:	48 63 f6             	movslq %esi,%rsi
    3163:	48 8d 15 f7 4e 00 00 	lea    0x4ef7(%rip),%rdx        # 8061 <_IO_stdin_used+0x61>
    316a:	e9 81 f5 ff ff       	jmp    26f0 <ft_putnbr_base>
    316f:	90                   	nop

0000000000003170 <write_u>:
    3170:	89 f6                	mov    %esi,%esi
    3172:	48 8d 15 e8 4e 00 00 	lea    0x4ee8(%rip),%rdx        # 8061 <_IO_stdin_used+0x61>
    3179:	e9 72 f5 ff ff       	jmp    26f0 <ft_putnbr_base>
    317e:	66 90                	xchg   %ax,%ax

0000000000003180 <write_x>:
    3180:	89 f6                	mov    %esi,%esi
    3182:	48 8d 15 c7 4e 00 00 	lea    0x4ec7(%rip),%rdx        # 8050 <_IO_stdin_used+0x50>
    3189:	e9 62 f5 ff ff       	jmp    26f0 <ft_putnbr_base>
    318e:	66 90                	xchg   %ax,%ax

0000000000003190 <write_cap_x>:
    3190:	89 f6                	mov    %esi,%esi
    3192:	48 8d 15 d3 4e 00 00 	lea    0x4ed3(%rip),%rdx        # 806c <_IO_stdin_used+0x6c>
    3199:	e9 52 f5 ff ff       	jmp    26f0 <ft_putnbr_base>
    319e:	66 90                	xchg   %ax,%ax

00000000000031a0 <add_last_id>:
    31a0:	41 57                	push   %r15
    31a2:	41 56                	push   %r14
    31a4:	53                   	push   %rbx
    31a5:	89 f3                	mov    %esi,%ebx
    31a7:	49 89 fe             	mov    %rdi,%r14
    31aa:	48 8b 07             	mov    (%rdi),%rax
    31ad:	0f 1f 00             	nopl   (%rax)
    31b0:	4d 89 f7             	mov    %r14,%r15
    31b3:	48 85 c0             	test   %rax,%rax
    31b6:	74 32                	je     31ea <add_last_id+0x4a>
    31b8:	49 89 c6             	mov    %rax,%r14
    31bb:	48 8b 00             	mov    (%rax),%rax
    31be:	48 85 c0             	test   %rax,%rax
    31c1:	75 ed                	jne    31b0 <add_last_id+0x10>
    31c3:	bf 10 00 00 00       	mov    $0x10,%edi
    31c8:	e8 c3 df ff ff       	call   1190 <malloc@plt>
    31cd:	49 89 06             	mov    %rax,(%r14)
    31d0:	49 8b 07             	mov    (%r15),%rax
    31d3:	48 8b 00             	mov    (%rax),%rax
    31d6:	48 85 c0             	test   %rax,%rax
    31d9:	74 2f                	je     320a <add_last_id+0x6a>
    31db:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    31e2:	49 8b 07             	mov    (%r15),%rax
    31e5:	48 8b 00             	mov    (%rax),%rax
    31e8:	eb 19                	jmp    3203 <add_last_id+0x63>
    31ea:	bf 10 00 00 00       	mov    $0x10,%edi
    31ef:	e8 9c df ff ff       	call   1190 <malloc@plt>
    31f4:	49 89 07             	mov    %rax,(%r15)
    31f7:	48 85 c0             	test   %rax,%rax
    31fa:	74 0e                	je     320a <add_last_id+0x6a>
    31fc:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    3203:	89 58 08             	mov    %ebx,0x8(%rax)
    3206:	31 c0                	xor    %eax,%eax
    3208:	eb 05                	jmp    320f <add_last_id+0x6f>
    320a:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    320f:	5b                   	pop    %rbx
    3210:	41 5e                	pop    %r14
    3212:	41 5f                	pop    %r15
    3214:	31 ff                	xor    %edi,%edi
    3216:	31 f6                	xor    %esi,%esi
    3218:	c3                   	ret
    3219:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003220 <free_pids>:
    3220:	48 85 ff             	test   %rdi,%rdi
    3223:	74 21                	je     3246 <free_pids+0x26>
    3225:	53                   	push   %rbx
    3226:	48 89 fb             	mov    %rdi,%rbx
    3229:	48 8b 3f             	mov    (%rdi),%rdi
    322c:	48 85 ff             	test   %rdi,%rdi
    322f:	74 14                	je     3245 <free_pids+0x25>
    3231:	e8 ea ff ff ff       	call   3220 <free_pids>
    3236:	48 8b 3b             	mov    (%rbx),%rdi
    3239:	e8 02 de ff ff       	call   1040 <free@plt>
    323e:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    3245:	5b                   	pop    %rbx
    3246:	31 ff                	xor    %edi,%edi
    3248:	c3                   	ret
    3249:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003250 <cd_path>:
    3250:	41 57                	push   %r15
    3252:	41 56                	push   %r14
    3254:	41 55                	push   %r13
    3256:	41 54                	push   %r12
    3258:	53                   	push   %rbx
    3259:	48 83 ec 10          	sub    $0x10,%rsp
    325d:	49 89 f6             	mov    %rsi,%r14
    3260:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3267:	00 00 
    3269:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    326e:	48 8b 3f             	mov    (%rdi),%rdi
    3271:	48 8d 35 05 4e 00 00 	lea    0x4e05(%rip),%rsi        # 807d <_IO_stdin_used+0x7d>
    3278:	e8 13 ed ff ff       	call   1f90 <ft_get_env_value>
    327d:	31 db                	xor    %ebx,%ebx
    327f:	48 85 c0             	test   %rax,%rax
    3282:	0f 84 b7 00 00 00    	je     333f <cd_path+0xef>
    3288:	49 89 c4             	mov    %rax,%r12
    328b:	48 89 c7             	mov    %rax,%rdi
    328e:	be 3a 00 00 00       	mov    $0x3a,%esi
    3293:	e8 88 f8 ff ff       	call   2b20 <ft_split>
    3298:	49 89 c7             	mov    %rax,%r15
    329b:	48 89 04 24          	mov    %rax,(%rsp)
    329f:	4c 89 e7             	mov    %r12,%rdi
    32a2:	e8 99 dd ff ff       	call   1040 <free@plt>
    32a7:	4d 85 ff             	test   %r15,%r15
    32aa:	0f 84 8f 00 00 00    	je     333f <cd_path+0xef>
    32b0:	49 8b 3f             	mov    (%r15),%rdi
    32b3:	48 85 ff             	test   %rdi,%rdi
    32b6:	74 59                	je     3311 <cd_path+0xc1>
    32b8:	49 83 c7 08          	add    $0x8,%r15
    32bc:	4c 8d 25 c1 4d 00 00 	lea    0x4dc1(%rip),%r12        # 8084 <_IO_stdin_used+0x84>
    32c3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    32ca:	84 00 00 00 00 00 
    32d0:	4c 89 e6             	mov    %r12,%rsi
    32d3:	e8 18 fa ff ff       	call   2cf0 <ft_strjoin>
    32d8:	48 85 c0             	test   %rax,%rax
    32db:	74 43                	je     3320 <cd_path+0xd0>
    32dd:	49 8b 36             	mov    (%r14),%rsi
    32e0:	48 89 c7             	mov    %rax,%rdi
    32e3:	e8 a8 fa ff ff       	call   2d90 <ft_strjoinf1>
    32e8:	48 85 c0             	test   %rax,%rax
    32eb:	74 33                	je     3320 <cd_path+0xd0>
    32ed:	49 89 c5             	mov    %rax,%r13
    32f0:	48 89 c7             	mov    %rax,%rdi
    32f3:	e8 d8 dd ff ff       	call   10d0 <chdir@plt>
    32f8:	83 f8 ff             	cmp    $0xffffffff,%eax
    32fb:	75 2d                	jne    332a <cd_path+0xda>
    32fd:	4c 89 ef             	mov    %r13,%rdi
    3300:	e8 3b dd ff ff       	call   1040 <free@plt>
    3305:	49 8b 3f             	mov    (%r15),%rdi
    3308:	49 83 c7 08          	add    $0x8,%r15
    330c:	48 85 ff             	test   %rdi,%rdi
    330f:	75 bf                	jne    32d0 <cd_path+0x80>
    3311:	48 89 e7             	mov    %rsp,%rdi
    3314:	e8 c7 eb ff ff       	call   1ee0 <free_arr>
    3319:	bb 01 00 00 00       	mov    $0x1,%ebx
    331e:	eb 1f                	jmp    333f <cd_path+0xef>
    3320:	48 89 e7             	mov    %rsp,%rdi
    3323:	e8 b8 eb ff ff       	call   1ee0 <free_arr>
    3328:	eb 15                	jmp    333f <cd_path+0xef>
    332a:	48 89 e7             	mov    %rsp,%rdi
    332d:	e8 ae eb ff ff       	call   1ee0 <free_arr>
    3332:	4c 89 ef             	mov    %r13,%rdi
    3335:	e8 06 dd ff ff       	call   1040 <free@plt>
    333a:	bb 02 00 00 00       	mov    $0x2,%ebx
    333f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3346:	00 00 
    3348:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
    334d:	75 14                	jne    3363 <cd_path+0x113>
    334f:	89 d8                	mov    %ebx,%eax
    3351:	48 83 c4 10          	add    $0x10,%rsp
    3355:	5b                   	pop    %rbx
    3356:	41 5c                	pop    %r12
    3358:	41 5d                	pop    %r13
    335a:	41 5e                	pop    %r14
    335c:	41 5f                	pop    %r15
    335e:	31 ff                	xor    %edi,%edi
    3360:	31 f6                	xor    %esi,%esi
    3362:	c3                   	ret
    3363:	e8 78 dd ff ff       	call   10e0 <__stack_chk_fail@plt>
    3368:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    336f:	00 

0000000000003370 <ft_cd>:
    3370:	41 56                	push   %r14
    3372:	53                   	push   %rbx
    3373:	48 83 ec 18          	sub    $0x18,%rsp
    3377:	49 89 f6             	mov    %rsi,%r14
    337a:	48 89 fb             	mov    %rdi,%rbx
    337d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3384:	00 00 
    3386:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    338b:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    3390:	80 3e 2f             	cmpb   $0x2f,(%rsi)
    3393:	75 28                	jne    33bd <ft_cd+0x4d>
    3395:	4c 89 f7             	mov    %r14,%rdi
    3398:	e8 33 dd ff ff       	call   10d0 <chdir@plt>
    339d:	48 83 c3 08          	add    $0x8,%rbx
    33a1:	83 f8 ff             	cmp    $0xffffffff,%eax
    33a4:	74 33                	je     33d9 <ft_cd+0x69>
    33a6:	c7 03 00 00 00 00    	movl   $0x0,(%rbx)
    33ac:	48 89 df             	mov    %rbx,%rdi
    33af:	31 f6                	xor    %esi,%esi
    33b1:	e8 da 07 00 00       	call   3b90 <set_rt>
    33b6:	b8 01 00 00 00       	mov    $0x1,%eax
    33bb:	eb 75                	jmp    3432 <ft_cd+0xc2>
    33bd:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    33c2:	48 89 df             	mov    %rbx,%rdi
    33c5:	e8 86 fe ff ff       	call   3250 <cd_path>
    33ca:	83 f8 02             	cmp    $0x2,%eax
    33cd:	74 50                	je     341f <ft_cd+0xaf>
    33cf:	85 c0                	test   %eax,%eax
    33d1:	75 7d                	jne    3450 <ft_cd+0xe0>
    33d3:	48 83 c3 08          	add    $0x8,%rbx
    33d7:	eb 35                	jmp    340e <ft_cd+0x9e>
    33d9:	c7 03 01 00 00 00    	movl   $0x1,(%rbx)
    33df:	48 8d 3d a5 4c 00 00 	lea    0x4ca5(%rip),%rdi        # 808b <_IO_stdin_used+0x8b>
    33e6:	be 02 00 00 00       	mov    $0x2,%esi
    33eb:	e8 a0 f3 ff ff       	call   2790 <ft_putstr_fd>
    33f0:	4c 89 f7             	mov    %r14,%rdi
    33f3:	be 02 00 00 00       	mov    $0x2,%esi
    33f8:	e8 93 f3 ff ff       	call   2790 <ft_putstr_fd>
    33fd:	48 8d 3d 92 4c 00 00 	lea    0x4c92(%rip),%rdi        # 8096 <_IO_stdin_used+0x96>
    3404:	be 02 00 00 00       	mov    $0x2,%esi
    3409:	e8 82 f3 ff ff       	call   2790 <ft_putstr_fd>
    340e:	48 89 df             	mov    %rbx,%rdi
    3411:	be 01 00 00 00       	mov    $0x1,%esi
    3416:	e8 75 07 00 00       	call   3b90 <set_rt>
    341b:	31 c0                	xor    %eax,%eax
    341d:	eb 13                	jmp    3432 <ft_cd+0xc2>
    341f:	48 83 c3 08          	add    $0x8,%rbx
    3423:	48 89 df             	mov    %rbx,%rdi
    3426:	31 f6                	xor    %esi,%esi
    3428:	e8 63 07 00 00       	call   3b90 <set_rt>
    342d:	b8 02 00 00 00       	mov    $0x2,%eax
    3432:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    3439:	00 00 
    343b:	48 3b 4c 24 10       	cmp    0x10(%rsp),%rcx
    3440:	75 40                	jne    3482 <ft_cd+0x112>
    3442:	48 83 c4 18          	add    $0x18,%rsp
    3446:	5b                   	pop    %rbx
    3447:	41 5e                	pop    %r14
    3449:	31 c9                	xor    %ecx,%ecx
    344b:	31 ff                	xor    %edi,%edi
    344d:	31 f6                	xor    %esi,%esi
    344f:	c3                   	ret
    3450:	41 80 3e 00          	cmpb   $0x0,(%r14)
    3454:	0f 85 3b ff ff ff    	jne    3395 <ft_cd+0x25>
    345a:	4c 89 f7             	mov    %r14,%rdi
    345d:	e8 de db ff ff       	call   1040 <free@plt>
    3462:	48 8b 3b             	mov    (%rbx),%rdi
    3465:	48 8d 35 1a 4c 00 00 	lea    0x4c1a(%rip),%rsi        # 8086 <_IO_stdin_used+0x86>
    346c:	e8 1f eb ff ff       	call   1f90 <ft_get_env_value>
    3471:	49 89 c6             	mov    %rax,%r14
    3474:	48 85 c0             	test   %rax,%rax
    3477:	0f 85 18 ff ff ff    	jne    3395 <ft_cd+0x25>
    347d:	e9 51 ff ff ff       	jmp    33d3 <ft_cd+0x63>
    3482:	e8 59 dc ff ff       	call   10e0 <__stack_chk_fail@plt>
    3487:	90                   	nop
    3488:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    348f:	00 

0000000000003490 <ft_echo>:
    3490:	41 56                	push   %r14
    3492:	53                   	push   %rbx
    3493:	50                   	push   %rax
    3494:	83 fa 01             	cmp    $0x1,%edx
    3497:	74 0d                	je     34a6 <ft_echo+0x16>
    3499:	85 d2                	test   %edx,%edx
    349b:	75 2a                	jne    34c7 <ft_echo+0x37>
    349d:	48 8d 05 6e 4b 00 00 	lea    0x4b6e(%rip),%rax        # 8012 <_IO_stdin_used+0x12>
    34a4:	eb 07                	jmp    34ad <ft_echo+0x1d>
    34a6:	48 8d 05 06 4c 00 00 	lea    0x4c06(%rip),%rax        # 80b3 <_IO_stdin_used+0xb3>
    34ad:	31 db                	xor    %ebx,%ebx
    34af:	49 89 fe             	mov    %rdi,%r14
    34b2:	48 89 c7             	mov    %rax,%rdi
    34b5:	48 89 f2             	mov    %rsi,%rdx
    34b8:	31 c0                	xor    %eax,%eax
    34ba:	e8 41 00 00 00       	call   3500 <_ZL6printfPKcU17pass_object_size1z>
    34bf:	4c 89 f7             	mov    %r14,%rdi
    34c2:	83 f8 ff             	cmp    $0xffffffff,%eax
    34c5:	74 09                	je     34d0 <ft_echo+0x40>
    34c7:	bb 01 00 00 00       	mov    $0x1,%ebx
    34cc:	31 f6                	xor    %esi,%esi
    34ce:	eb 05                	jmp    34d5 <ft_echo+0x45>
    34d0:	be 01 00 00 00       	mov    $0x1,%esi
    34d5:	89 77 08             	mov    %esi,0x8(%rdi)
    34d8:	48 83 c7 08          	add    $0x8,%rdi
    34dc:	e8 af 06 00 00       	call   3b90 <set_rt>
    34e1:	89 d8                	mov    %ebx,%eax
    34e3:	48 83 c4 08          	add    $0x8,%rsp
    34e7:	5b                   	pop    %rbx
    34e8:	41 5e                	pop    %r14
    34ea:	31 ff                	xor    %edi,%edi
    34ec:	31 d2                	xor    %edx,%edx
    34ee:	31 f6                	xor    %esi,%esi
    34f0:	c3                   	ret
    34f1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    34f8:	0f 1f 84 00 00 00 00 
    34ff:	00 

0000000000003500 <_ZL6printfPKcU17pass_object_size1z>:
    3500:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    3507:	48 89 fe             	mov    %rdi,%rsi
    350a:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    350f:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    3514:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    3519:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    351e:	84 c0                	test   %al,%al
    3520:	74 31                	je     3553 <_ZL6printfPKcU17pass_object_size1z+0x53>
    3522:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    3527:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
    352c:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
    3531:	0f 29 5c 24 60       	movaps %xmm3,0x60(%rsp)
    3536:	0f 29 64 24 70       	movaps %xmm4,0x70(%rsp)
    353b:	0f 29 ac 24 80 00 00 	movaps %xmm5,0x80(%rsp)
    3542:	00 
    3543:	0f 29 b4 24 90 00 00 	movaps %xmm6,0x90(%rsp)
    354a:	00 
    354b:	0f 29 bc 24 a0 00 00 	movaps %xmm7,0xa0(%rsp)
    3552:	00 
    3553:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    355a:	00 00 
    355c:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
    3563:	00 
    3564:	48 89 e0             	mov    %rsp,%rax
    3567:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    356e:	00 
    356f:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
    3576:	00 
    3577:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    357e:	00 
    357f:	48 b8 10 00 00 00 30 	movabs $0x3000000010,%rax
    3586:	00 00 00 
    3589:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
    3590:	00 
    3591:	48 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%rdx
    3598:	00 
    3599:	bf 01 00 00 00       	mov    $0x1,%edi
    359e:	e8 bd da ff ff       	call   1060 <__vprintf_chk@plt>
    35a3:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    35aa:	00 00 
    35ac:	48 3b 8c 24 d0 00 00 	cmp    0xd0(%rsp),%rcx
    35b3:	00 
    35b4:	75 16                	jne    35cc <_ZL6printfPKcU17pass_object_size1z+0xcc>
    35b6:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    35bd:	31 c9                	xor    %ecx,%ecx
    35bf:	31 ff                	xor    %edi,%edi
    35c1:	31 d2                	xor    %edx,%edx
    35c3:	31 f6                	xor    %esi,%esi
    35c5:	45 31 c0             	xor    %r8d,%r8d
    35c8:	45 31 c9             	xor    %r9d,%r9d
    35cb:	c3                   	ret
    35cc:	e8 0f db ff ff       	call   10e0 <__stack_chk_fail@plt>
    35d1:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    35d8:	00 00 00 
    35db:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000035e0 <ft_env>:
    35e0:	41 56                	push   %r14
    35e2:	53                   	push   %rbx
    35e3:	50                   	push   %rax
    35e4:	48 89 fb             	mov    %rdi,%rbx
    35e7:	48 8b 07             	mov    (%rdi),%rax
    35ea:	48 85 c0             	test   %rax,%rax
    35ed:	74 2d                	je     361c <ft_env+0x3c>
    35ef:	48 8b 10             	mov    (%rax),%rdx
    35f2:	48 85 d2             	test   %rdx,%rdx
    35f5:	74 25                	je     361c <ft_env+0x3c>
    35f7:	41 be 08 00 00 00    	mov    $0x8,%r14d
    35fd:	0f 1f 00             	nopl   (%rax)
    3600:	31 c0                	xor    %eax,%eax
    3602:	e8 59 00 00 00       	call   3660 <_ZL6printfPKcU17pass_object_size1z>
    3607:	83 f8 ff             	cmp    $0xffffffff,%eax
    360a:	74 31                	je     363d <ft_env+0x5d>
    360c:	48 8b 03             	mov    (%rbx),%rax
    360f:	4a 8b 14 30          	mov    (%rax,%r14,1),%rdx
    3613:	49 83 c6 08          	add    $0x8,%r14
    3617:	48 85 d2             	test   %rdx,%rdx
    361a:	75 e4                	jne    3600 <ft_env+0x20>
    361c:	48 83 c3 08          	add    $0x8,%rbx
    3620:	48 89 df             	mov    %rbx,%rdi
    3623:	31 f6                	xor    %esi,%esi
    3625:	e8 66 05 00 00       	call   3b90 <set_rt>
    362a:	b8 01 00 00 00       	mov    $0x1,%eax
    362f:	48 83 c4 08          	add    $0x8,%rsp
    3633:	5b                   	pop    %rbx
    3634:	41 5e                	pop    %r14
    3636:	31 ff                	xor    %edi,%edi
    3638:	31 d2                	xor    %edx,%edx
    363a:	31 f6                	xor    %esi,%esi
    363c:	c3                   	ret
    363d:	c7 43 08 01 00 00 00 	movl   $0x1,0x8(%rbx)
    3644:	48 83 c3 08          	add    $0x8,%rbx
    3648:	48 89 df             	mov    %rbx,%rdi
    364b:	be 01 00 00 00       	mov    $0x1,%esi
    3650:	e8 3b 05 00 00       	call   3b90 <set_rt>
    3655:	31 c0                	xor    %eax,%eax
    3657:	eb d6                	jmp    362f <ft_env+0x4f>
    3659:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000003660 <_ZL6printfPKcU17pass_object_size1z>:
    3660:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    3667:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    366c:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    3671:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    3676:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    367b:	84 c0                	test   %al,%al
    367d:	74 31                	je     36b0 <_ZL6printfPKcU17pass_object_size1z+0x50>
    367f:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    3684:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
    3689:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
    368e:	0f 29 5c 24 60       	movaps %xmm3,0x60(%rsp)
    3693:	0f 29 64 24 70       	movaps %xmm4,0x70(%rsp)
    3698:	0f 29 ac 24 80 00 00 	movaps %xmm5,0x80(%rsp)
    369f:	00 
    36a0:	0f 29 b4 24 90 00 00 	movaps %xmm6,0x90(%rsp)
    36a7:	00 
    36a8:	0f 29 bc 24 a0 00 00 	movaps %xmm7,0xa0(%rsp)
    36af:	00 
    36b0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    36b7:	00 00 
    36b9:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
    36c0:	00 
    36c1:	48 89 e0             	mov    %rsp,%rax
    36c4:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    36cb:	00 
    36cc:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
    36d3:	00 
    36d4:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    36db:	00 
    36dc:	48 b8 10 00 00 00 30 	movabs $0x3000000010,%rax
    36e3:	00 00 00 
    36e6:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
    36ed:	00 
    36ee:	48 8d 35 1d 49 00 00 	lea    0x491d(%rip),%rsi        # 8012 <_IO_stdin_used+0x12>
    36f5:	48 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%rdx
    36fc:	00 
    36fd:	bf 01 00 00 00       	mov    $0x1,%edi
    3702:	e8 59 d9 ff ff       	call   1060 <__vprintf_chk@plt>
    3707:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    370e:	00 00 
    3710:	48 3b 8c 24 d0 00 00 	cmp    0xd0(%rsp),%rcx
    3717:	00 
    3718:	75 16                	jne    3730 <_ZL6printfPKcU17pass_object_size1z+0xd0>
    371a:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    3721:	31 c9                	xor    %ecx,%ecx
    3723:	31 ff                	xor    %edi,%edi
    3725:	31 d2                	xor    %edx,%edx
    3727:	31 f6                	xor    %esi,%esi
    3729:	45 31 c0             	xor    %r8d,%r8d
    372c:	45 31 c9             	xor    %r9d,%r9d
    372f:	c3                   	ret
    3730:	e8 ab d9 ff ff       	call   10e0 <__stack_chk_fail@plt>
    3735:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    373c:	00 00 00 
    373f:	90                   	nop

0000000000003740 <ft_export>:
    3740:	41 57                	push   %r15
    3742:	41 56                	push   %r14
    3744:	53                   	push   %rbx
    3745:	49 89 f6             	mov    %rsi,%r14
    3748:	48 89 fb             	mov    %rdi,%rbx
    374b:	80 3e 00             	cmpb   $0x0,(%rsi)
    374e:	75 11                	jne    3761 <ft_export+0x21>
    3750:	31 ff                	xor    %edi,%edi
    3752:	e8 19 e9 ff ff       	call   2070 <ft_isalpha>
    3757:	85 c0                	test   %eax,%eax
    3759:	75 06                	jne    3761 <ft_export+0x21>
    375b:	41 80 3e 5f          	cmpb   $0x5f,(%r14)
    375f:	75 31                	jne    3792 <ft_export+0x52>
    3761:	4d 8d 7e 01          	lea    0x1(%r14),%r15
    3765:	eb 0c                	jmp    3773 <ft_export+0x33>
    3767:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    376e:	00 00 
    3770:	49 ff c7             	inc    %r15
    3773:	41 0f b6 07          	movzbl (%r15),%eax
    3777:	85 c0                	test   %eax,%eax
    3779:	74 56                	je     37d1 <ft_export+0x91>
    377b:	83 f8 3d             	cmp    $0x3d,%eax
    377e:	74 51                	je     37d1 <ft_export+0x91>
    3780:	0f be f8             	movsbl %al,%edi
    3783:	e8 b8 e8 ff ff       	call   2040 <ft_isalnum>
    3788:	85 c0                	test   %eax,%eax
    378a:	75 e4                	jne    3770 <ft_export+0x30>
    378c:	41 80 3f 5f          	cmpb   $0x5f,(%r15)
    3790:	74 de                	je     3770 <ft_export+0x30>
    3792:	c7 43 08 01 00 00 00 	movl   $0x1,0x8(%rbx)
    3799:	48 83 c3 08          	add    $0x8,%rbx
    379d:	48 8d 3d 12 49 00 00 	lea    0x4912(%rip),%rdi        # 80b6 <_IO_stdin_used+0xb6>
    37a4:	be 02 00 00 00       	mov    $0x2,%esi
    37a9:	e8 e2 ef ff ff       	call   2790 <ft_putstr_fd>
    37ae:	4c 89 f7             	mov    %r14,%rdi
    37b1:	be 02 00 00 00       	mov    $0x2,%esi
    37b6:	e8 d5 ef ff ff       	call   2790 <ft_putstr_fd>
    37bb:	48 8d 3d 04 49 00 00 	lea    0x4904(%rip),%rdi        # 80c6 <_IO_stdin_used+0xc6>
    37c2:	be 02 00 00 00       	mov    $0x2,%esi
    37c7:	e8 c4 ef ff ff       	call   2790 <ft_putstr_fd>
    37cc:	e9 80 00 00 00       	jmp    3851 <ft_export+0x111>
    37d1:	4c 89 f7             	mov    %r14,%rdi
    37d4:	be 3d 00 00 00       	mov    $0x3d,%esi
    37d9:	e8 82 f4 ff ff       	call   2c60 <ft_strchr>
    37de:	48 85 c0             	test   %rax,%rax
    37e1:	74 27                	je     380a <ft_export+0xca>
    37e3:	4c 89 f7             	mov    %r14,%rdi
    37e6:	be 3d 00 00 00       	mov    $0x3d,%esi
    37eb:	e8 70 f4 ff ff       	call   2c60 <ft_strchr>
    37f0:	4c 29 f0             	sub    %r14,%rax
    37f3:	4c 89 f7             	mov    %r14,%rdi
    37f6:	31 f6                	xor    %esi,%esi
    37f8:	48 89 c2             	mov    %rax,%rdx
    37fb:	e8 e0 f7 ff ff       	call   2fe0 <ft_substr>
    3800:	49 89 c7             	mov    %rax,%r15
    3803:	48 85 c0             	test   %rax,%rax
    3806:	75 05                	jne    380d <ft_export+0xcd>
    3808:	eb 43                	jmp    384d <ft_export+0x10d>
    380a:	4d 89 f7             	mov    %r14,%r15
    380d:	48 89 df             	mov    %rbx,%rdi
    3810:	4c 89 fe             	mov    %r15,%rsi
    3813:	e8 d8 01 00 00       	call   39f0 <ft_unset>
    3818:	4c 89 f7             	mov    %r14,%rdi
    381b:	e8 80 f4 ff ff       	call   2ca0 <ft_strdup>
    3820:	48 89 df             	mov    %rbx,%rdi
    3823:	48 89 c6             	mov    %rax,%rsi
    3826:	e8 85 e3 ff ff       	call   1bb0 <ft_append_arr_str>
    382b:	48 85 c0             	test   %rax,%rax
    382e:	74 15                	je     3845 <ft_export+0x105>
    3830:	48 83 c3 08          	add    $0x8,%rbx
    3834:	48 89 df             	mov    %rbx,%rdi
    3837:	31 f6                	xor    %esi,%esi
    3839:	e8 52 03 00 00       	call   3b90 <set_rt>
    383e:	b8 01 00 00 00       	mov    $0x1,%eax
    3843:	eb 1b                	jmp    3860 <ft_export+0x120>
    3845:	4c 89 ff             	mov    %r15,%rdi
    3848:	e8 f3 d7 ff ff       	call   1040 <free@plt>
    384d:	48 83 c3 08          	add    $0x8,%rbx
    3851:	48 89 df             	mov    %rbx,%rdi
    3854:	be 01 00 00 00       	mov    $0x1,%esi
    3859:	e8 32 03 00 00       	call   3b90 <set_rt>
    385e:	31 c0                	xor    %eax,%eax
    3860:	5b                   	pop    %rbx
    3861:	41 5e                	pop    %r14
    3863:	41 5f                	pop    %r15
    3865:	31 ff                	xor    %edi,%edi
    3867:	31 d2                	xor    %edx,%edx
    3869:	31 f6                	xor    %esi,%esi
    386b:	c3                   	ret
    386c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003870 <ft_pwd>:
    3870:	55                   	push   %rbp
    3871:	41 56                	push   %r14
    3873:	53                   	push   %rbx
    3874:	48 89 fb             	mov    %rdi,%rbx
    3877:	bf 00 10 00 00       	mov    $0x1000,%edi
    387c:	e8 0f d9 ff ff       	call   1190 <malloc@plt>
    3881:	48 85 c0             	test   %rax,%rax
    3884:	74 3a                	je     38c0 <ft_pwd+0x50>
    3886:	49 89 c6             	mov    %rax,%r14
    3889:	be 00 10 00 00       	mov    $0x1000,%esi
    388e:	ba 00 10 00 00       	mov    $0x1000,%edx
    3893:	48 89 c7             	mov    %rax,%rdi
    3896:	e8 e5 d7 ff ff       	call   1080 <__getcwd_chk@plt>
    389b:	48 85 c0             	test   %rax,%rax
    389e:	74 2e                	je     38ce <ft_pwd+0x5e>
    38a0:	4c 89 f2             	mov    %r14,%rdx
    38a3:	31 c0                	xor    %eax,%eax
    38a5:	e8 66 00 00 00       	call   3910 <_ZL6printfPKcU17pass_object_size1z>
    38aa:	83 f8 ff             	cmp    $0xffffffff,%eax
    38ad:	74 28                	je     38d7 <ft_pwd+0x67>
    38af:	4c 89 f7             	mov    %r14,%rdi
    38b2:	e8 89 d7 ff ff       	call   1040 <free@plt>
    38b7:	bd 01 00 00 00       	mov    $0x1,%ebp
    38bc:	31 f6                	xor    %esi,%esi
    38be:	eb 32                	jmp    38f2 <ft_pwd+0x82>
    38c0:	48 8d 3d 1a 48 00 00 	lea    0x481a(%rip),%rdi        # 80e1 <_IO_stdin_used+0xe1>
    38c7:	e8 f4 ee ff ff       	call   27c0 <ft_putstrerr>
    38cc:	eb 1d                	jmp    38eb <ft_pwd+0x7b>
    38ce:	48 8d 3d 1b 48 00 00 	lea    0x481b(%rip),%rdi        # 80f0 <_IO_stdin_used+0xf0>
    38d5:	eb 07                	jmp    38de <ft_pwd+0x6e>
    38d7:	48 8d 3d 22 48 00 00 	lea    0x4822(%rip),%rdi        # 8100 <_IO_stdin_used+0x100>
    38de:	e8 dd ee ff ff       	call   27c0 <ft_putstrerr>
    38e3:	4c 89 f7             	mov    %r14,%rdi
    38e6:	e8 55 d7 ff ff       	call   1040 <free@plt>
    38eb:	31 ed                	xor    %ebp,%ebp
    38ed:	be 01 00 00 00       	mov    $0x1,%esi
    38f2:	48 83 c3 08          	add    $0x8,%rbx
    38f6:	48 89 df             	mov    %rbx,%rdi
    38f9:	e8 92 02 00 00       	call   3b90 <set_rt>
    38fe:	89 e8                	mov    %ebp,%eax
    3900:	5b                   	pop    %rbx
    3901:	41 5e                	pop    %r14
    3903:	5d                   	pop    %rbp
    3904:	31 ff                	xor    %edi,%edi
    3906:	31 d2                	xor    %edx,%edx
    3908:	31 f6                	xor    %esi,%esi
    390a:	c3                   	ret
    390b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000003910 <_ZL6printfPKcU17pass_object_size1z>:
    3910:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    3917:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    391c:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    3921:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    3926:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    392b:	84 c0                	test   %al,%al
    392d:	74 31                	je     3960 <_ZL6printfPKcU17pass_object_size1z+0x50>
    392f:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    3934:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
    3939:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
    393e:	0f 29 5c 24 60       	movaps %xmm3,0x60(%rsp)
    3943:	0f 29 64 24 70       	movaps %xmm4,0x70(%rsp)
    3948:	0f 29 ac 24 80 00 00 	movaps %xmm5,0x80(%rsp)
    394f:	00 
    3950:	0f 29 b4 24 90 00 00 	movaps %xmm6,0x90(%rsp)
    3957:	00 
    3958:	0f 29 bc 24 a0 00 00 	movaps %xmm7,0xa0(%rsp)
    395f:	00 
    3960:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    3967:	00 00 
    3969:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
    3970:	00 
    3971:	48 89 e0             	mov    %rsp,%rax
    3974:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    397b:	00 
    397c:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
    3983:	00 
    3984:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    398b:	00 
    398c:	48 b8 10 00 00 00 30 	movabs $0x3000000010,%rax
    3993:	00 00 00 
    3996:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
    399d:	00 
    399e:	48 8d 35 6d 46 00 00 	lea    0x466d(%rip),%rsi        # 8012 <_IO_stdin_used+0x12>
    39a5:	48 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%rdx
    39ac:	00 
    39ad:	bf 01 00 00 00       	mov    $0x1,%edi
    39b2:	e8 a9 d6 ff ff       	call   1060 <__vprintf_chk@plt>
    39b7:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    39be:	00 00 
    39c0:	48 3b 8c 24 d0 00 00 	cmp    0xd0(%rsp),%rcx
    39c7:	00 
    39c8:	75 16                	jne    39e0 <_ZL6printfPKcU17pass_object_size1z+0xd0>
    39ca:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    39d1:	31 c9                	xor    %ecx,%ecx
    39d3:	31 ff                	xor    %edi,%edi
    39d5:	31 d2                	xor    %edx,%edx
    39d7:	31 f6                	xor    %esi,%esi
    39d9:	45 31 c0             	xor    %r8d,%r8d
    39dc:	45 31 c9             	xor    %r9d,%r9d
    39df:	c3                   	ret
    39e0:	e8 fb d6 ff ff       	call   10e0 <__stack_chk_fail@plt>
    39e5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    39ec:	00 00 00 
    39ef:	90                   	nop

00000000000039f0 <ft_unset>:
    39f0:	55                   	push   %rbp
    39f1:	41 57                	push   %r15
    39f3:	41 56                	push   %r14
    39f5:	41 55                	push   %r13
    39f7:	41 54                	push   %r12
    39f9:	53                   	push   %rbx
    39fa:	50                   	push   %rax
    39fb:	49 89 f6             	mov    %rsi,%r14
    39fe:	48 89 fb             	mov    %rdi,%rbx
    3a01:	48 8d 35 73 4a 00 00 	lea    0x4a73(%rip),%rsi        # 847b <_IO_stdin_used+0x47b>
    3a08:	4c 89 f7             	mov    %r14,%rdi
    3a0b:	e8 e0 f2 ff ff       	call   2cf0 <ft_strjoin>
    3a10:	48 85 c0             	test   %rax,%rax
    3a13:	74 48                	je     3a5d <ft_unset+0x6d>
    3a15:	49 89 c7             	mov    %rax,%r15
    3a18:	48 8b 03             	mov    (%rbx),%rax
    3a1b:	4c 8b 28             	mov    (%rax),%r13
    3a1e:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    3a24:	4d 85 ed             	test   %r13,%r13
    3a27:	74 3f                	je     3a68 <ft_unset+0x78>
    3a29:	bd 08 00 00 00       	mov    $0x8,%ebp
    3a2e:	66 90                	xchg   %ax,%ax
    3a30:	4c 89 ff             	mov    %r15,%rdi
    3a33:	e8 d8 f3 ff ff       	call   2e10 <ft_strlen>
    3a38:	4c 89 ef             	mov    %r13,%rdi
    3a3b:	4c 89 fe             	mov    %r15,%rsi
    3a3e:	48 89 c2             	mov    %rax,%rdx
    3a41:	e8 4a f4 ff ff       	call   2e90 <ft_strnstr>
    3a46:	48 85 c0             	test   %rax,%rax
    3a49:	75 1a                	jne    3a65 <ft_unset+0x75>
    3a4b:	48 8b 03             	mov    (%rbx),%rax
    3a4e:	4c 8b 2c 28          	mov    (%rax,%rbp,1),%r13
    3a52:	48 83 c5 08          	add    $0x8,%rbp
    3a56:	4d 85 ed             	test   %r13,%r13
    3a59:	75 d5                	jne    3a30 <ft_unset+0x40>
    3a5b:	eb 0b                	jmp    3a68 <ft_unset+0x78>
    3a5d:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    3a63:	eb 0b                	jmp    3a70 <ft_unset+0x80>
    3a65:	45 31 e4             	xor    %r12d,%r12d
    3a68:	4c 89 ff             	mov    %r15,%rdi
    3a6b:	e8 d0 d5 ff ff       	call   1040 <free@plt>
    3a70:	48 8d 35 04 4a 00 00 	lea    0x4a04(%rip),%rsi        # 847b <_IO_stdin_used+0x47b>
    3a77:	4c 89 f7             	mov    %r14,%rdi
    3a7a:	e8 71 f2 ff ff       	call   2cf0 <ft_strjoin>
    3a7f:	31 ed                	xor    %ebp,%ebp
    3a81:	41 bd 01 00 00 00    	mov    $0x1,%r13d
    3a87:	48 85 c0             	test   %rax,%rax
    3a8a:	0f 84 a4 00 00 00    	je     3b34 <ft_unset+0x144>
    3a90:	49 89 c7             	mov    %rax,%r15
    3a93:	48 8b 3b             	mov    (%rbx),%rdi
    3a96:	e8 e5 e1 ff ff       	call   1c80 <ft_arrlen>
    3a9b:	49 01 c4             	add    %rax,%r12
    3a9e:	bf 08 00 00 00       	mov    $0x8,%edi
    3aa3:	4c 89 e6             	mov    %r12,%rsi
    3aa6:	e8 35 e3 ff ff       	call   1de0 <ft_calloc>
    3aab:	48 85 c0             	test   %rax,%rax
    3aae:	0f 84 78 00 00 00    	je     3b2c <ft_unset+0x13c>
    3ab4:	49 89 c4             	mov    %rax,%r12
    3ab7:	4c 89 3c 24          	mov    %r15,(%rsp)
    3abb:	48 8b 3b             	mov    (%rbx),%rdi
    3abe:	4c 8b 2f             	mov    (%rdi),%r13
    3ac1:	4d 85 ed             	test   %r13,%r13
    3ac4:	74 4b                	je     3b11 <ft_unset+0x121>
    3ac6:	31 ed                	xor    %ebp,%ebp
    3ac8:	45 31 ff             	xor    %r15d,%r15d
    3acb:	eb 19                	jmp    3ae6 <ft_unset+0xf6>
    3acd:	0f 1f 00             	nopl   (%rax)
    3ad0:	e8 6b d5 ff ff       	call   1040 <free@plt>
    3ad5:	48 8b 3b             	mov    (%rbx),%rdi
    3ad8:	4c 8b 6c 2f 08       	mov    0x8(%rdi,%rbp,1),%r13
    3add:	48 83 c5 08          	add    $0x8,%rbp
    3ae1:	4d 85 ed             	test   %r13,%r13
    3ae4:	74 2b                	je     3b11 <ft_unset+0x121>
    3ae6:	4c 89 f7             	mov    %r14,%rdi
    3ae9:	e8 22 f3 ff ff       	call   2e10 <ft_strlen>
    3aee:	4c 89 ef             	mov    %r13,%rdi
    3af1:	4c 89 f6             	mov    %r14,%rsi
    3af4:	48 89 c2             	mov    %rax,%rdx
    3af7:	e8 94 f3 ff ff       	call   2e90 <ft_strnstr>
    3afc:	48 8b 0b             	mov    (%rbx),%rcx
    3aff:	48 8b 3c 29          	mov    (%rcx,%rbp,1),%rdi
    3b03:	48 85 c0             	test   %rax,%rax
    3b06:	75 c8                	jne    3ad0 <ft_unset+0xe0>
    3b08:	4b 89 3c fc          	mov    %rdi,(%r12,%r15,8)
    3b0c:	49 ff c7             	inc    %r15
    3b0f:	eb c4                	jmp    3ad5 <ft_unset+0xe5>
    3b11:	e8 2a d5 ff ff       	call   1040 <free@plt>
    3b16:	4c 89 23             	mov    %r12,(%rbx)
    3b19:	48 8b 3c 24          	mov    (%rsp),%rdi
    3b1d:	e8 1e d5 ff ff       	call   1040 <free@plt>
    3b22:	bd 01 00 00 00       	mov    $0x1,%ebp
    3b27:	45 31 ed             	xor    %r13d,%r13d
    3b2a:	eb 08                	jmp    3b34 <ft_unset+0x144>
    3b2c:	4c 89 ff             	mov    %r15,%rdi
    3b2f:	e8 0c d5 ff ff       	call   1040 <free@plt>
    3b34:	48 83 c3 08          	add    $0x8,%rbx
    3b38:	48 89 df             	mov    %rbx,%rdi
    3b3b:	44 89 ee             	mov    %r13d,%esi
    3b3e:	e8 4d 00 00 00       	call   3b90 <set_rt>
    3b43:	89 e8                	mov    %ebp,%eax
    3b45:	48 83 c4 08          	add    $0x8,%rsp
    3b49:	5b                   	pop    %rbx
    3b4a:	41 5c                	pop    %r12
    3b4c:	41 5d                	pop    %r13
    3b4e:	41 5e                	pop    %r14
    3b50:	41 5f                	pop    %r15
    3b52:	5d                   	pop    %rbp
    3b53:	31 c9                	xor    %ecx,%ecx
    3b55:	31 ff                	xor    %edi,%edi
    3b57:	31 d2                	xor    %edx,%edx
    3b59:	31 f6                	xor    %esi,%esi
    3b5b:	c3                   	ret
    3b5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000003b60 <ft_exit>:
    3b60:	53                   	push   %rbx
    3b61:	48 85 f6             	test   %rsi,%rsi
    3b64:	75 05                	jne    3b6b <ft_exit+0xb>
    3b66:	8b 5f 08             	mov    0x8(%rdi),%ebx
    3b69:	eb 10                	jmp    3b7b <ft_exit+0x1b>
    3b6b:	48 89 fb             	mov    %rdi,%rbx
    3b6e:	48 89 f7             	mov    %rsi,%rdi
    3b71:	e8 3a e1 ff ff       	call   1cb0 <ft_atoi>
    3b76:	48 89 df             	mov    %rbx,%rdi
    3b79:	89 c3                	mov    %eax,%ebx
    3b7b:	e8 60 e3 ff ff       	call   1ee0 <free_arr>
    3b80:	89 df                	mov    %ebx,%edi
    3b82:	e8 79 d6 ff ff       	call   1200 <exit@plt>
    3b87:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3b8e:	00 00 

0000000000003b90 <set_rt>:
    3b90:	89 37                	mov    %esi,(%rdi)
    3b92:	31 ff                	xor    %edi,%edi
    3b94:	31 f6                	xor    %esi,%esi
    3b96:	c3                   	ret
    3b97:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3b9e:	00 00 

0000000000003ba0 <consume_token>:
    3ba0:	48 8b 07             	mov    (%rdi),%rax
    3ba3:	48 85 c0             	test   %rax,%rax
    3ba6:	74 07                	je     3baf <consume_token+0xf>
    3ba8:	48 8b 48 08          	mov    0x8(%rax),%rcx
    3bac:	48 89 0f             	mov    %rcx,(%rdi)
    3baf:	31 c9                	xor    %ecx,%ecx
    3bb1:	31 ff                	xor    %edi,%edi
    3bb3:	c3                   	ret
    3bb4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    3bbb:	00 00 00 00 00 

0000000000003bc0 <make_bnode>:
    3bc0:	55                   	push   %rbp
    3bc1:	41 56                	push   %r14
    3bc3:	53                   	push   %rbx
    3bc4:	48 89 d3             	mov    %rdx,%rbx
    3bc7:	49 89 f6             	mov    %rsi,%r14
    3bca:	89 fd                	mov    %edi,%ebp
    3bcc:	bf 38 00 00 00       	mov    $0x38,%edi
    3bd1:	e8 ba d5 ff ff       	call   1190 <malloc@plt>
    3bd6:	48 85 c0             	test   %rax,%rax
    3bd9:	74 22                	je     3bfd <make_bnode+0x3d>
    3bdb:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    3be2:	00 
    3be3:	0f 57 c0             	xorps  %xmm0,%xmm0
    3be6:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    3bea:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
    3bf1:	89 68 18             	mov    %ebp,0x18(%rax)
    3bf4:	4c 89 30             	mov    %r14,(%rax)
    3bf7:	48 89 58 08          	mov    %rbx,0x8(%rax)
    3bfb:	eb 19                	jmp    3c16 <make_bnode+0x56>
    3bfd:	48 8d 35 09 45 00 00 	lea    0x4509(%rip),%rsi        # 810d <_IO_stdin_used+0x10d>
    3c04:	bf 02 00 00 00       	mov    $0x2,%edi
    3c09:	48 89 c3             	mov    %rax,%rbx
    3c0c:	31 c0                	xor    %eax,%eax
    3c0e:	e8 3d e8 ff ff       	call   2450 <ft_printf>
    3c13:	48 89 d8             	mov    %rbx,%rax
    3c16:	5b                   	pop    %rbx
    3c17:	41 5e                	pop    %r14
    3c19:	5d                   	pop    %rbp
    3c1a:	31 ff                	xor    %edi,%edi
    3c1c:	31 d2                	xor    %edx,%edx
    3c1e:	31 f6                	xor    %esi,%esi
    3c20:	c3                   	ret
    3c21:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    3c28:	0f 1f 84 00 00 00 00 
    3c2f:	00 

0000000000003c30 <store_words>:
    3c30:	41 57                	push   %r15
    3c32:	41 56                	push   %r14
    3c34:	41 55                	push   %r13
    3c36:	41 54                	push   %r12
    3c38:	53                   	push   %rbx
    3c39:	48 8b 07             	mov    (%rdi),%rax
    3c3c:	31 db                	xor    %ebx,%ebx
    3c3e:	45 31 f6             	xor    %r14d,%r14d
    3c41:	48 85 c0             	test   %rax,%rax
    3c44:	0f 84 85 00 00 00    	je     3ccf <store_words+0x9f>
    3c4a:	49 89 c7             	mov    %rax,%r15
    3c4d:	eb 16                	jmp    3c65 <store_words+0x35>
    3c4f:	90                   	nop
    3c50:	4d 8b 7f 08          	mov    0x8(%r15),%r15
    3c54:	48 85 c0             	test   %rax,%rax
    3c57:	74 34                	je     3c8d <store_words+0x5d>
    3c59:	48 8b 40 08          	mov    0x8(%rax),%rax
    3c5d:	48 89 07             	mov    %rax,(%rdi)
    3c60:	4d 85 ff             	test   %r15,%r15
    3c63:	74 6a                	je     3ccf <store_words+0x9f>
    3c65:	49 8b 0f             	mov    (%r15),%rcx
    3c68:	8b 51 20             	mov    0x20(%rcx),%edx
    3c6b:	f7 c2 00 0a 00 00    	test   $0xa00,%edx
    3c71:	74 5c                	je     3ccf <store_words+0x9f>
    3c73:	f7 c2 00 40 00 00    	test   $0x4000,%edx
    3c79:	75 d5                	jne    3c50 <store_words+0x20>
    3c7b:	f7 c2 00 02 00 00    	test   $0x200,%edx
    3c81:	74 0e                	je     3c91 <store_words+0x61>
    3c83:	49 8b 4f 08          	mov    0x8(%r15),%rcx
    3c87:	4c 8b 79 08          	mov    0x8(%rcx),%r15
    3c8b:	eb d3                	jmp    3c60 <store_words+0x30>
    3c8d:	31 c0                	xor    %eax,%eax
    3c8f:	eb cf                	jmp    3c60 <store_words+0x30>
    3c91:	49 89 fc             	mov    %rdi,%r12
    3c94:	49 89 f5             	mov    %rsi,%r13
    3c97:	48 8b 39             	mov    (%rcx),%rdi
    3c9a:	e8 01 f0 ff ff       	call   2ca0 <ft_strdup>
    3c9f:	48 85 c0             	test   %rax,%rax
    3ca2:	74 47                	je     3ceb <store_words+0xbb>
    3ca4:	4c 89 ee             	mov    %r13,%rsi
    3ca7:	4b 89 44 f5 00       	mov    %rax,0x0(%r13,%r14,8)
    3cac:	4d 8b 7f 08          	mov    0x8(%r15),%r15
    3cb0:	4c 89 e7             	mov    %r12,%rdi
    3cb3:	49 8b 04 24          	mov    (%r12),%rax
    3cb7:	48 85 c0             	test   %rax,%rax
    3cba:	74 0c                	je     3cc8 <store_words+0x98>
    3cbc:	48 8b 40 08          	mov    0x8(%rax),%rax
    3cc0:	48 89 07             	mov    %rax,(%rdi)
    3cc3:	49 ff c6             	inc    %r14
    3cc6:	eb 98                	jmp    3c60 <store_words+0x30>
    3cc8:	31 c0                	xor    %eax,%eax
    3cca:	49 ff c6             	inc    %r14
    3ccd:	eb 91                	jmp    3c60 <store_words+0x30>
    3ccf:	4a c7 04 f6 00 00 00 	movq   $0x0,(%rsi,%r14,8)
    3cd6:	00 
    3cd7:	89 d8                	mov    %ebx,%eax
    3cd9:	5b                   	pop    %rbx
    3cda:	41 5c                	pop    %r12
    3cdc:	41 5d                	pop    %r13
    3cde:	41 5e                	pop    %r14
    3ce0:	41 5f                	pop    %r15
    3ce2:	31 c9                	xor    %ecx,%ecx
    3ce4:	31 ff                	xor    %edi,%edi
    3ce6:	31 d2                	xor    %edx,%edx
    3ce8:	31 f6                	xor    %esi,%esi
    3cea:	c3                   	ret
    3ceb:	4c 89 ef             	mov    %r13,%rdi
    3cee:	4b c7 44 f5 00 00 00 	movq   $0x0,0x0(%r13,%r14,8)
    3cf5:	00 00 
    3cf7:	e8 44 e2 ff ff       	call   1f40 <free_split>
    3cfc:	bb 01 00 00 00       	mov    $0x1,%ebx
    3d01:	eb d4                	jmp    3cd7 <store_words+0xa7>
    3d03:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    3d0a:	84 00 00 00 00 00 

0000000000003d10 <create_cmd_argv>:
    3d10:	41 57                	push   %r15
    3d12:	41 56                	push   %r14
    3d14:	41 54                	push   %r12
    3d16:	53                   	push   %rbx
    3d17:	50                   	push   %rax
    3d18:	4c 8b 37             	mov    (%rdi),%r14
    3d1b:	4d 85 f6             	test   %r14,%r14
    3d1e:	0f 84 ec 00 00 00    	je     3e10 <create_cmd_argv+0x100>
    3d24:	48 89 fb             	mov    %rdi,%rbx
    3d27:	31 c0                	xor    %eax,%eax
    3d29:	4c 89 f1             	mov    %r14,%rcx
    3d2c:	eb 18                	jmp    3d46 <create_cmd_argv+0x36>
    3d2e:	66 90                	xchg   %ax,%ax
    3d30:	81 e2 00 40 00 00    	and    $0x4000,%edx
    3d36:	83 fa 01             	cmp    $0x1,%edx
    3d39:	48 83 d0 00          	adc    $0x0,%rax
    3d3d:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    3d41:	48 85 c9             	test   %rcx,%rcx
    3d44:	74 1c                	je     3d62 <create_cmd_argv+0x52>
    3d46:	48 8b 11             	mov    (%rcx),%rdx
    3d49:	8b 52 20             	mov    0x20(%rdx),%edx
    3d4c:	f7 c2 00 0a 00 00    	test   $0xa00,%edx
    3d52:	74 0e                	je     3d62 <create_cmd_argv+0x52>
    3d54:	f7 c2 00 02 00 00    	test   $0x200,%edx
    3d5a:	74 d4                	je     3d30 <create_cmd_argv+0x20>
    3d5c:	48 8b 49 08          	mov    0x8(%rcx),%rcx
    3d60:	eb db                	jmp    3d3d <create_cmd_argv+0x2d>
    3d62:	48 8d 3c c5 08 00 00 	lea    0x8(,%rax,8),%rdi
    3d69:	00 
    3d6a:	e8 21 d4 ff ff       	call   1190 <malloc@plt>
    3d6f:	48 85 c0             	test   %rax,%rax
    3d72:	0f 84 d7 00 00 00    	je     3e4f <create_cmd_argv+0x13f>
    3d78:	45 31 ff             	xor    %r15d,%r15d
    3d7b:	4d 85 f6             	test   %r14,%r14
    3d7e:	0f 84 9e 00 00 00    	je     3e22 <create_cmd_argv+0x112>
    3d84:	4d 89 f4             	mov    %r14,%r12
    3d87:	eb 1d                	jmp    3da6 <create_cmd_argv+0x96>
    3d89:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3d90:	4d 8b 64 24 08       	mov    0x8(%r12),%r12
    3d95:	4d 85 f6             	test   %r14,%r14
    3d98:	74 36                	je     3dd0 <create_cmd_argv+0xc0>
    3d9a:	4d 8b 76 08          	mov    0x8(%r14),%r14
    3d9e:	4c 89 33             	mov    %r14,(%rbx)
    3da1:	4d 85 e4             	test   %r12,%r12
    3da4:	74 7c                	je     3e22 <create_cmd_argv+0x112>
    3da6:	49 8b 0c 24          	mov    (%r12),%rcx
    3daa:	8b 51 20             	mov    0x20(%rcx),%edx
    3dad:	f7 c2 00 0a 00 00    	test   $0xa00,%edx
    3db3:	74 6d                	je     3e22 <create_cmd_argv+0x112>
    3db5:	f7 c2 00 40 00 00    	test   $0x4000,%edx
    3dbb:	75 d3                	jne    3d90 <create_cmd_argv+0x80>
    3dbd:	f7 c2 00 02 00 00    	test   $0x200,%edx
    3dc3:	74 10                	je     3dd5 <create_cmd_argv+0xc5>
    3dc5:	49 8b 4c 24 08       	mov    0x8(%r12),%rcx
    3dca:	4c 8b 61 08          	mov    0x8(%rcx),%r12
    3dce:	eb d1                	jmp    3da1 <create_cmd_argv+0x91>
    3dd0:	45 31 f6             	xor    %r14d,%r14d
    3dd3:	eb cc                	jmp    3da1 <create_cmd_argv+0x91>
    3dd5:	49 89 c6             	mov    %rax,%r14
    3dd8:	48 8b 39             	mov    (%rcx),%rdi
    3ddb:	e8 c0 ee ff ff       	call   2ca0 <ft_strdup>
    3de0:	48 85 c0             	test   %rax,%rax
    3de3:	74 47                	je     3e2c <create_cmd_argv+0x11c>
    3de5:	48 89 c1             	mov    %rax,%rcx
    3de8:	4c 89 f0             	mov    %r14,%rax
    3deb:	4b 89 0c fe          	mov    %rcx,(%r14,%r15,8)
    3def:	4d 8b 64 24 08       	mov    0x8(%r12),%r12
    3df4:	48 8b 0b             	mov    (%rbx),%rcx
    3df7:	48 85 c9             	test   %rcx,%rcx
    3dfa:	74 0c                	je     3e08 <create_cmd_argv+0xf8>
    3dfc:	4c 8b 71 08          	mov    0x8(%rcx),%r14
    3e00:	4c 89 33             	mov    %r14,(%rbx)
    3e03:	49 ff c7             	inc    %r15
    3e06:	eb 99                	jmp    3da1 <create_cmd_argv+0x91>
    3e08:	45 31 f6             	xor    %r14d,%r14d
    3e0b:	49 ff c7             	inc    %r15
    3e0e:	eb 91                	jmp    3da1 <create_cmd_argv+0x91>
    3e10:	bf 08 00 00 00       	mov    $0x8,%edi
    3e15:	e8 76 d3 ff ff       	call   1190 <malloc@plt>
    3e1a:	45 31 ff             	xor    %r15d,%r15d
    3e1d:	48 85 c0             	test   %rax,%rax
    3e20:	74 2d                	je     3e4f <create_cmd_argv+0x13f>
    3e22:	4a c7 04 f8 00 00 00 	movq   $0x0,(%rax,%r15,8)
    3e29:	00 
    3e2a:	eb 25                	jmp    3e51 <create_cmd_argv+0x141>
    3e2c:	4c 89 f7             	mov    %r14,%rdi
    3e2f:	4b c7 04 fe 00 00 00 	movq   $0x0,(%r14,%r15,8)
    3e36:	00 
    3e37:	e8 04 e1 ff ff       	call   1f40 <free_split>
    3e3c:	48 8d 35 e7 42 00 00 	lea    0x42e7(%rip),%rsi        # 812a <_IO_stdin_used+0x12a>
    3e43:	bf 02 00 00 00       	mov    $0x2,%edi
    3e48:	31 c0                	xor    %eax,%eax
    3e4a:	e8 01 e6 ff ff       	call   2450 <ft_printf>
    3e4f:	31 c0                	xor    %eax,%eax
    3e51:	48 83 c4 08          	add    $0x8,%rsp
    3e55:	5b                   	pop    %rbx
    3e56:	41 5c                	pop    %r12
    3e58:	41 5e                	pop    %r14
    3e5a:	41 5f                	pop    %r15
    3e5c:	31 c9                	xor    %ecx,%ecx
    3e5e:	31 ff                	xor    %edi,%edi
    3e60:	31 d2                	xor    %edx,%edx
    3e62:	31 f6                	xor    %esi,%esi
    3e64:	c3                   	ret
    3e65:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    3e6c:	00 00 00 00 

0000000000003e70 <add_here_node>:
    3e70:	55                   	push   %rbp
    3e71:	41 57                	push   %r15
    3e73:	41 56                	push   %r14
    3e75:	41 54                	push   %r12
    3e77:	53                   	push   %rbx
    3e78:	49 89 d4             	mov    %rdx,%r12
    3e7b:	49 89 f7             	mov    %rsi,%r15
    3e7e:	49 89 fe             	mov    %rdi,%r14
    3e81:	bf 18 00 00 00       	mov    $0x18,%edi
    3e86:	e8 05 d3 ff ff       	call   1190 <malloc@plt>
    3e8b:	bd 01 00 00 00       	mov    $0x1,%ebp
    3e90:	48 85 c0             	test   %rax,%rax
    3e93:	74 52                	je     3ee7 <add_here_node+0x77>
    3e95:	48 89 c3             	mov    %rax,%rbx
    3e98:	4c 89 60 08          	mov    %r12,0x8(%rax)
    3e9c:	4c 89 ff             	mov    %r15,%rdi
    3e9f:	e8 fc ed ff ff       	call   2ca0 <ft_strdup>
    3ea4:	48 89 03             	mov    %rax,(%rbx)
    3ea7:	48 85 c0             	test   %rax,%rax
    3eaa:	74 0a                	je     3eb6 <add_here_node+0x46>
    3eac:	48 89 df             	mov    %rbx,%rdi
    3eaf:	e8 8c d1 ff ff       	call   1040 <free@plt>
    3eb4:	eb 31                	jmp    3ee7 <add_here_node+0x77>
    3eb6:	48 c7 43 10 00 00 00 	movq   $0x0,0x10(%rbx)
    3ebd:	00 
    3ebe:	49 8b 06             	mov    (%r14),%rax
    3ec1:	48 85 c0             	test   %rax,%rax
    3ec4:	74 1c                	je     3ee2 <add_here_node+0x72>
    3ec6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    3ecd:	00 00 00 
    3ed0:	48 89 c1             	mov    %rax,%rcx
    3ed3:	48 8b 40 10          	mov    0x10(%rax),%rax
    3ed7:	48 85 c0             	test   %rax,%rax
    3eda:	75 f4                	jne    3ed0 <add_here_node+0x60>
    3edc:	48 89 59 10          	mov    %rbx,0x10(%rcx)
    3ee0:	eb 03                	jmp    3ee5 <add_here_node+0x75>
    3ee2:	49 89 1e             	mov    %rbx,(%r14)
    3ee5:	31 ed                	xor    %ebp,%ebp
    3ee7:	89 e8                	mov    %ebp,%eax
    3ee9:	5b                   	pop    %rbx
    3eea:	41 5c                	pop    %r12
    3eec:	41 5e                	pop    %r14
    3eee:	41 5f                	pop    %r15
    3ef0:	5d                   	pop    %rbp
    3ef1:	31 c9                	xor    %ecx,%ecx
    3ef3:	31 ff                	xor    %edi,%edi
    3ef5:	31 d2                	xor    %edx,%edx
    3ef7:	31 f6                	xor    %esi,%esi
    3ef9:	c3                   	ret
    3efa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000003f00 <create_redirections>:
    3f00:	55                   	push   %rbp
    3f01:	41 57                	push   %r15
    3f03:	41 56                	push   %r14
    3f05:	41 55                	push   %r13
    3f07:	41 54                	push   %r12
    3f09:	53                   	push   %rbx
    3f0a:	48 83 ec 18          	sub    $0x18,%rsp
    3f0e:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    3f13:	4c 8b 37             	mov    (%rdi),%r14
    3f16:	0f 57 c0             	xorps  %xmm0,%xmm0
    3f19:	0f 11 46 20          	movups %xmm0,0x20(%rsi)
    3f1d:	c7 46 30 00 00 00 00 	movl   $0x0,0x30(%rsi)
    3f24:	4d 85 f6             	test   %r14,%r14
    3f27:	0f 84 63 01 00 00    	je     4090 <create_redirections+0x190>
    3f2d:	48 89 f3             	mov    %rsi,%rbx
    3f30:	49 89 ff             	mov    %rdi,%r15
    3f33:	48 8d 46 20          	lea    0x20(%rsi),%rax
    3f37:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    3f3c:	bd 01 00 00 00       	mov    $0x1,%ebp
    3f41:	eb 16                	jmp    3f59 <create_redirections+0x59>
    3f43:	4d 8b 76 08          	mov    0x8(%r14),%r14
    3f47:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    3f4e:	00 00 
    3f50:	4d 85 f6             	test   %r14,%r14
    3f53:	0f 84 37 01 00 00    	je     4090 <create_redirections+0x190>
    3f59:	49 8b 06             	mov    (%r14),%rax
    3f5c:	8b 40 20             	mov    0x20(%rax),%eax
    3f5f:	a9 00 0a 00 00       	test   $0xa00,%eax
    3f64:	0f 84 26 01 00 00    	je     4090 <create_redirections+0x190>
    3f6a:	a9 00 02 00 00       	test   $0x200,%eax
    3f6f:	75 0f                	jne    3f80 <create_redirections+0x80>
    3f71:	49 8b 07             	mov    (%r15),%rax
    3f74:	e9 fe 00 00 00       	jmp    4077 <create_redirections+0x177>
    3f79:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3f80:	a8 20                	test   $0x20,%al
    3f82:	75 1c                	jne    3fa0 <create_redirections+0xa0>
    3f84:	a8 08                	test   $0x8,%al
    3f86:	75 7d                	jne    4005 <create_redirections+0x105>
    3f88:	a8 40                	test   $0x40,%al
    3f8a:	0f 85 a2 00 00 00    	jne    4032 <create_redirections+0x132>
    3f90:	a8 10                	test   $0x10,%al
    3f92:	75 78                	jne    400c <create_redirections+0x10c>
    3f94:	e9 c7 00 00 00       	jmp    4060 <create_redirections+0x160>
    3f99:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    3fa0:	49 8b 46 08          	mov    0x8(%r14),%rax
    3fa4:	48 8b 00             	mov    (%rax),%rax
    3fa7:	4c 8b 28             	mov    (%rax),%r13
    3faa:	bf 18 00 00 00       	mov    $0x18,%edi
    3faf:	e8 dc d1 ff ff       	call   1190 <malloc@plt>
    3fb4:	48 85 c0             	test   %rax,%rax
    3fb7:	0f 84 d5 00 00 00    	je     4092 <create_redirections+0x192>
    3fbd:	49 89 c4             	mov    %rax,%r12
    3fc0:	48 89 58 08          	mov    %rbx,0x8(%rax)
    3fc4:	4c 89 ef             	mov    %r13,%rdi
    3fc7:	e8 d4 ec ff ff       	call   2ca0 <ft_strdup>
    3fcc:	49 89 04 24          	mov    %rax,(%r12)
    3fd0:	48 85 c0             	test   %rax,%rax
    3fd3:	0f 85 d2 00 00 00    	jne    40ab <create_redirections+0x1ab>
    3fd9:	49 c7 44 24 10 00 00 	movq   $0x0,0x10(%r12)
    3fe0:	00 00 
    3fe2:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    3fe7:	48 8b 08             	mov    (%rax),%rcx
    3fea:	48 85 c9             	test   %rcx,%rcx
    3fed:	74 11                	je     4000 <create_redirections+0x100>
    3fef:	90                   	nop
    3ff0:	48 89 c8             	mov    %rcx,%rax
    3ff3:	48 8b 49 10          	mov    0x10(%rcx),%rcx
    3ff7:	48 85 c9             	test   %rcx,%rcx
    3ffa:	75 f4                	jne    3ff0 <create_redirections+0xf0>
    3ffc:	48 83 c0 10          	add    $0x10,%rax
    4000:	4c 89 20             	mov    %r12,(%rax)
    4003:	eb 5b                	jmp    4060 <create_redirections+0x160>
    4005:	c7 43 30 01 00 00 00 	movl   $0x1,0x30(%rbx)
    400c:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    4010:	e8 2b d0 ff ff       	call   1040 <free@plt>
    4015:	49 8b 46 08          	mov    0x8(%r14),%rax
    4019:	48 8b 00             	mov    (%rax),%rax
    401c:	48 8b 38             	mov    (%rax),%rdi
    401f:	e8 7c ec ff ff       	call   2ca0 <ft_strdup>
    4024:	48 89 43 28          	mov    %rax,0x28(%rbx)
    4028:	48 85 c0             	test   %rax,%rax
    402b:	75 33                	jne    4060 <create_redirections+0x160>
    402d:	e9 83 00 00 00       	jmp    40b5 <create_redirections+0x1b5>
    4032:	4c 8b 64 24 08       	mov    0x8(%rsp),%r12
    4037:	49 8b 3c 24          	mov    (%r12),%rdi
    403b:	e8 00 d0 ff ff       	call   1040 <free@plt>
    4040:	49 8b 46 08          	mov    0x8(%r14),%rax
    4044:	48 8b 00             	mov    (%rax),%rax
    4047:	48 8b 38             	mov    (%rax),%rdi
    404a:	e8 51 ec ff ff       	call   2ca0 <ft_strdup>
    404f:	49 89 04 24          	mov    %rax,(%r12)
    4053:	48 85 c0             	test   %rax,%rax
    4056:	74 67                	je     40bf <create_redirections+0x1bf>
    4058:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    405f:	00 
    4060:	4d 8b 76 08          	mov    0x8(%r14),%r14
    4064:	49 8b 07             	mov    (%r15),%rax
    4067:	48 85 c0             	test   %rax,%rax
    406a:	0f 84 d3 fe ff ff    	je     3f43 <create_redirections+0x43>
    4070:	48 8b 40 08          	mov    0x8(%rax),%rax
    4074:	49 89 07             	mov    %rax,(%r15)
    4077:	4d 8b 76 08          	mov    0x8(%r14),%r14
    407b:	48 85 c0             	test   %rax,%rax
    407e:	0f 84 cc fe ff ff    	je     3f50 <create_redirections+0x50>
    4084:	48 8b 40 08          	mov    0x8(%rax),%rax
    4088:	49 89 07             	mov    %rax,(%r15)
    408b:	e9 c0 fe ff ff       	jmp    3f50 <create_redirections+0x50>
    4090:	31 ed                	xor    %ebp,%ebp
    4092:	89 e8                	mov    %ebp,%eax
    4094:	48 83 c4 18          	add    $0x18,%rsp
    4098:	5b                   	pop    %rbx
    4099:	41 5c                	pop    %r12
    409b:	41 5d                	pop    %r13
    409d:	41 5e                	pop    %r14
    409f:	41 5f                	pop    %r15
    40a1:	5d                   	pop    %rbp
    40a2:	31 c9                	xor    %ecx,%ecx
    40a4:	31 ff                	xor    %edi,%edi
    40a6:	31 d2                	xor    %edx,%edx
    40a8:	31 f6                	xor    %esi,%esi
    40aa:	c3                   	ret
    40ab:	4c 89 e7             	mov    %r12,%rdi
    40ae:	e8 8d cf ff ff       	call   1040 <free@plt>
    40b3:	eb dd                	jmp    4092 <create_redirections+0x192>
    40b5:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    40ba:	48 8b 38             	mov    (%rax),%rdi
    40bd:	eb 04                	jmp    40c3 <create_redirections+0x1c3>
    40bf:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    40c3:	e8 78 cf ff ff       	call   1040 <free@plt>
    40c8:	bd 01 00 00 00       	mov    $0x1,%ebp
    40cd:	eb c3                	jmp    4092 <create_redirections+0x192>
    40cf:	90                   	nop

00000000000040d0 <parse_command>:
    40d0:	41 57                	push   %r15
    40d2:	41 56                	push   %r14
    40d4:	53                   	push   %rbx
    40d5:	48 8b 07             	mov    (%rdi),%rax
    40d8:	48 85 c0             	test   %rax,%rax
    40db:	0f 84 92 00 00 00    	je     4173 <parse_command+0xa3>
    40e1:	49 89 fe             	mov    %rdi,%r14
    40e4:	48 8b 08             	mov    (%rax),%rcx
    40e7:	8b 49 20             	mov    0x20(%rcx),%ecx
    40ea:	84 c9                	test   %cl,%cl
    40ec:	0f 88 88 00 00 00    	js     417a <parse_command+0xaa>
    40f2:	f7 c1 00 0a 00 00    	test   $0xa00,%ecx
    40f8:	0f 84 a5 00 00 00    	je     41a3 <parse_command+0xd3>
    40fe:	49 89 f7             	mov    %rsi,%r15
    4101:	bf 38 00 00 00       	mov    $0x38,%edi
    4106:	e8 85 d0 ff ff       	call   1190 <malloc@plt>
    410b:	48 85 c0             	test   %rax,%rax
    410e:	0f 84 d2 00 00 00    	je     41e6 <parse_command+0x116>
    4114:	48 89 c3             	mov    %rax,%rbx
    4117:	0f 57 c0             	xorps  %xmm0,%xmm0
    411a:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    411e:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
    4125:	0f 11 00             	movups %xmm0,(%rax)
    4128:	0f 11 40 0c          	movups %xmm0,0xc(%rax)
    412c:	4c 89 f7             	mov    %r14,%rdi
    412f:	e8 dc fb ff ff       	call   3d10 <create_cmd_argv>
    4134:	48 89 43 10          	mov    %rax,0x10(%rbx)
    4138:	48 85 c0             	test   %rax,%rax
    413b:	0f 84 c3 00 00 00    	je     4204 <parse_command+0x134>
    4141:	4c 89 f7             	mov    %r14,%rdi
    4144:	48 89 de             	mov    %rbx,%rsi
    4147:	4c 89 fa             	mov    %r15,%rdx
    414a:	e8 b1 fd ff ff       	call   3f00 <create_redirections>
    414f:	85 c0                	test   %eax,%eax
    4151:	0f 84 cb 00 00 00    	je     4222 <parse_command+0x152>
    4157:	48 8d 35 55 40 00 00 	lea    0x4055(%rip),%rsi        # 81b3 <_IO_stdin_used+0x1b3>
    415e:	bf 02 00 00 00       	mov    $0x2,%edi
    4163:	31 c0                	xor    %eax,%eax
    4165:	e8 e6 e2 ff ff       	call   2450 <ft_printf>
    416a:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    416e:	e8 cd dd ff ff       	call   1f40 <free_split>
    4173:	31 db                	xor    %ebx,%ebx
    4175:	e9 a8 00 00 00       	jmp    4222 <parse_command+0x152>
    417a:	48 8b 40 08          	mov    0x8(%rax),%rax
    417e:	49 89 06             	mov    %rax,(%r14)
    4181:	4c 89 f7             	mov    %r14,%rdi
    4184:	e8 b7 00 00 00       	call   4240 <parse_and_or>
    4189:	49 8b 0e             	mov    (%r14),%rcx
    418c:	48 85 c9             	test   %rcx,%rcx
    418f:	74 09                	je     419a <parse_command+0xca>
    4191:	48 8b 11             	mov    (%rcx),%rdx
    4194:	f6 42 21 01          	testb  $0x1,0x21(%rdx)
    4198:	75 12                	jne    41ac <parse_command+0xdc>
    419a:	48 8d 35 a9 3f 00 00 	lea    0x3fa9(%rip),%rsi        # 814a <_IO_stdin_used+0x14a>
    41a1:	eb 71                	jmp    4214 <parse_command+0x144>
    41a3:	48 8d 35 27 40 00 00 	lea    0x4027(%rip),%rsi        # 81d1 <_IO_stdin_used+0x1d1>
    41aa:	eb 68                	jmp    4214 <parse_command+0x144>
    41ac:	49 89 c7             	mov    %rax,%r15
    41af:	48 8b 41 08          	mov    0x8(%rcx),%rax
    41b3:	49 89 06             	mov    %rax,(%r14)
    41b6:	bf 38 00 00 00       	mov    $0x38,%edi
    41bb:	e8 d0 cf ff ff       	call   1190 <malloc@plt>
    41c0:	48 85 c0             	test   %rax,%rax
    41c3:	74 48                	je     420d <parse_command+0x13d>
    41c5:	48 89 c3             	mov    %rax,%rbx
    41c8:	0f 57 c0             	xorps  %xmm0,%xmm0
    41cb:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    41cf:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
    41d6:	c7 40 18 04 00 00 00 	movl   $0x4,0x18(%rax)
    41dd:	4c 89 38             	mov    %r15,(%rax)
    41e0:	0f 11 40 08          	movups %xmm0,0x8(%rax)
    41e4:	eb 3c                	jmp    4222 <parse_command+0x152>
    41e6:	48 8d 35 20 3f 00 00 	lea    0x3f20(%rip),%rsi        # 810d <_IO_stdin_used+0x10d>
    41ed:	31 db                	xor    %ebx,%ebx
    41ef:	bf 02 00 00 00       	mov    $0x2,%edi
    41f4:	31 c0                	xor    %eax,%eax
    41f6:	e8 55 e2 ff ff       	call   2450 <ft_printf>
    41fb:	48 8d 35 5d 3f 00 00 	lea    0x3f5d(%rip),%rsi        # 815f <_IO_stdin_used+0x15f>
    4202:	eb 12                	jmp    4216 <parse_command+0x146>
    4204:	48 8d 35 84 3f 00 00 	lea    0x3f84(%rip),%rsi        # 818f <_IO_stdin_used+0x18f>
    420b:	eb 07                	jmp    4214 <parse_command+0x144>
    420d:	48 8d 35 f9 3e 00 00 	lea    0x3ef9(%rip),%rsi        # 810d <_IO_stdin_used+0x10d>
    4214:	31 db                	xor    %ebx,%ebx
    4216:	bf 02 00 00 00       	mov    $0x2,%edi
    421b:	31 c0                	xor    %eax,%eax
    421d:	e8 2e e2 ff ff       	call   2450 <ft_printf>
    4222:	48 89 d8             	mov    %rbx,%rax
    4225:	5b                   	pop    %rbx
    4226:	41 5e                	pop    %r14
    4228:	41 5f                	pop    %r15
    422a:	31 c9                	xor    %ecx,%ecx
    422c:	31 ff                	xor    %edi,%edi
    422e:	31 d2                	xor    %edx,%edx
    4230:	31 f6                	xor    %esi,%esi
    4232:	c3                   	ret
    4233:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    423a:	84 00 00 00 00 00 

0000000000004240 <parse_and_or>:
    4240:	55                   	push   %rbp
    4241:	41 57                	push   %r15
    4243:	41 56                	push   %r14
    4245:	41 55                	push   %r13
    4247:	41 54                	push   %r12
    4249:	53                   	push   %rbx
    424a:	50                   	push   %rax
    424b:	49 89 fe             	mov    %rdi,%r14
    424e:	48 89 34 24          	mov    %rsi,(%rsp)
    4252:	e8 79 fe ff ff       	call   40d0 <parse_command>
    4257:	49 89 c5             	mov    %rax,%r13
    425a:	49 8b 1e             	mov    (%r14),%rbx
    425d:	48 85 db             	test   %rbx,%rbx
    4260:	0f 84 7e 00 00 00    	je     42e4 <parse_and_or+0xa4>
    4266:	4c 8d 25 a0 3e 00 00 	lea    0x3ea0(%rip),%r12        # 810d <_IO_stdin_used+0x10d>
    426d:	eb 33                	jmp    42a2 <parse_and_or+0x62>
    426f:	90                   	nop
    4270:	49 c7 47 10 00 00 00 	movq   $0x0,0x10(%r15)
    4277:	00 
    4278:	0f 57 c0             	xorps  %xmm0,%xmm0
    427b:	41 0f 11 47 20       	movups %xmm0,0x20(%r15)
    4280:	41 c7 47 30 00 00 00 	movl   $0x0,0x30(%r15)
    4287:	00 
    4288:	41 c7 47 18 01 00 00 	movl   $0x1,0x18(%r15)
    428f:	00 
    4290:	4d 89 2f             	mov    %r13,(%r15)
    4293:	49 89 6f 08          	mov    %rbp,0x8(%r15)
    4297:	49 8b 1e             	mov    (%r14),%rbx
    429a:	4d 89 fd             	mov    %r15,%r13
    429d:	48 85 db             	test   %rbx,%rbx
    42a0:	74 45                	je     42e7 <parse_and_or+0xa7>
    42a2:	48 8b 03             	mov    (%rbx),%rax
    42a5:	f6 40 20 02          	testb  $0x2,0x20(%rax)
    42a9:	74 54                	je     42ff <parse_and_or+0xbf>
    42ab:	48 8b 43 08          	mov    0x8(%rbx),%rax
    42af:	49 89 06             	mov    %rax,(%r14)
    42b2:	4c 89 f7             	mov    %r14,%rdi
    42b5:	48 8b 34 24          	mov    (%rsp),%rsi
    42b9:	e8 12 fe ff ff       	call   40d0 <parse_command>
    42be:	48 89 c5             	mov    %rax,%rbp
    42c1:	bf 38 00 00 00       	mov    $0x38,%edi
    42c6:	e8 c5 ce ff ff       	call   1190 <malloc@plt>
    42cb:	49 89 c7             	mov    %rax,%r15
    42ce:	48 85 c0             	test   %rax,%rax
    42d1:	75 9d                	jne    4270 <parse_and_or+0x30>
    42d3:	bf 02 00 00 00       	mov    $0x2,%edi
    42d8:	4c 89 e6             	mov    %r12,%rsi
    42db:	31 c0                	xor    %eax,%eax
    42dd:	e8 6e e1 ff ff       	call   2450 <ft_printf>
    42e2:	eb b3                	jmp    4297 <parse_and_or+0x57>
    42e4:	4d 89 ef             	mov    %r13,%r15
    42e7:	4c 89 f8             	mov    %r15,%rax
    42ea:	48 83 c4 08          	add    $0x8,%rsp
    42ee:	5b                   	pop    %rbx
    42ef:	41 5c                	pop    %r12
    42f1:	41 5d                	pop    %r13
    42f3:	41 5e                	pop    %r14
    42f5:	41 5f                	pop    %r15
    42f7:	5d                   	pop    %rbp
    42f8:	31 c9                	xor    %ecx,%ecx
    42fa:	31 ff                	xor    %edi,%edi
    42fc:	31 f6                	xor    %esi,%esi
    42fe:	c3                   	ret
    42ff:	4d 89 ef             	mov    %r13,%r15
    4302:	eb 2a                	jmp    432e <parse_and_or+0xee>
    4304:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    430b:	00 00 00 00 00 
    4310:	bf 02 00 00 00       	mov    $0x2,%edi
    4315:	48 8d 35 f1 3d 00 00 	lea    0x3df1(%rip),%rsi        # 810d <_IO_stdin_used+0x10d>
    431c:	31 c0                	xor    %eax,%eax
    431e:	e8 2d e1 ff ff       	call   2450 <ft_printf>
    4323:	45 31 ff             	xor    %r15d,%r15d
    4326:	49 8b 1e             	mov    (%r14),%rbx
    4329:	48 85 db             	test   %rbx,%rbx
    432c:	74 b9                	je     42e7 <parse_and_or+0xa7>
    432e:	48 8b 03             	mov    (%rbx),%rax
    4331:	f6 40 20 05          	testb  $0x5,0x20(%rax)
    4335:	74 b0                	je     42e7 <parse_and_or+0xa7>
    4337:	48 8b 43 08          	mov    0x8(%rbx),%rax
    433b:	49 89 06             	mov    %rax,(%r14)
    433e:	4c 89 f7             	mov    %r14,%rdi
    4341:	48 8b 34 24          	mov    (%rsp),%rsi
    4345:	e8 86 fd ff ff       	call   40d0 <parse_command>
    434a:	48 89 c5             	mov    %rax,%rbp
    434d:	49 8b 06             	mov    (%r14),%rax
    4350:	48 85 c0             	test   %rax,%rax
    4353:	75 7e                	jne    43d3 <parse_and_or+0x193>
    4355:	49 89 ed             	mov    %rbp,%r13
    4358:	48 8b 03             	mov    (%rbx),%rax
    435b:	8b 40 20             	mov    0x20(%rax),%eax
    435e:	a8 04                	test   $0x4,%al
    4360:	0f 85 ba 00 00 00    	jne    4420 <parse_and_or+0x1e0>
    4366:	a8 01                	test   $0x1,%al
    4368:	74 bc                	je     4326 <parse_and_or+0xe6>
    436a:	bf 38 00 00 00       	mov    $0x38,%edi
    436f:	e8 1c ce ff ff       	call   1190 <malloc@plt>
    4374:	48 85 c0             	test   %rax,%rax
    4377:	74 97                	je     4310 <parse_and_or+0xd0>
    4379:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4380:	00 
    4381:	0f 57 c0             	xorps  %xmm0,%xmm0
    4384:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    4388:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
    438f:	c7 40 18 03 00 00 00 	movl   $0x3,0x18(%rax)
    4396:	e9 b5 00 00 00       	jmp    4450 <parse_and_or+0x210>
    439b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    43a0:	49 c7 45 10 00 00 00 	movq   $0x0,0x10(%r13)
    43a7:	00 
    43a8:	0f 57 c0             	xorps  %xmm0,%xmm0
    43ab:	41 0f 11 45 20       	movups %xmm0,0x20(%r13)
    43b0:	41 c7 45 30 00 00 00 	movl   $0x0,0x30(%r13)
    43b7:	00 
    43b8:	41 c7 45 18 01 00 00 	movl   $0x1,0x18(%r13)
    43bf:	00 
    43c0:	49 89 6d 00          	mov    %rbp,0x0(%r13)
    43c4:	4d 89 65 08          	mov    %r12,0x8(%r13)
    43c8:	49 8b 06             	mov    (%r14),%rax
    43cb:	4c 89 ed             	mov    %r13,%rbp
    43ce:	48 85 c0             	test   %rax,%rax
    43d1:	74 85                	je     4358 <parse_and_or+0x118>
    43d3:	48 8b 08             	mov    (%rax),%rcx
    43d6:	f6 41 20 02          	testb  $0x2,0x20(%rcx)
    43da:	0f 84 75 ff ff ff    	je     4355 <parse_and_or+0x115>
    43e0:	48 8b 40 08          	mov    0x8(%rax),%rax
    43e4:	49 89 06             	mov    %rax,(%r14)
    43e7:	4c 89 f7             	mov    %r14,%rdi
    43ea:	48 8b 34 24          	mov    (%rsp),%rsi
    43ee:	e8 dd fc ff ff       	call   40d0 <parse_command>
    43f3:	49 89 c4             	mov    %rax,%r12
    43f6:	bf 38 00 00 00       	mov    $0x38,%edi
    43fb:	e8 90 cd ff ff       	call   1190 <malloc@plt>
    4400:	49 89 c5             	mov    %rax,%r13
    4403:	48 85 c0             	test   %rax,%rax
    4406:	75 98                	jne    43a0 <parse_and_or+0x160>
    4408:	bf 02 00 00 00       	mov    $0x2,%edi
    440d:	48 8d 35 f9 3c 00 00 	lea    0x3cf9(%rip),%rsi        # 810d <_IO_stdin_used+0x10d>
    4414:	31 c0                	xor    %eax,%eax
    4416:	e8 35 e0 ff ff       	call   2450 <ft_printf>
    441b:	eb ab                	jmp    43c8 <parse_and_or+0x188>
    441d:	0f 1f 00             	nopl   (%rax)
    4420:	bf 38 00 00 00       	mov    $0x38,%edi
    4425:	e8 66 cd ff ff       	call   1190 <malloc@plt>
    442a:	48 85 c0             	test   %rax,%rax
    442d:	0f 84 dd fe ff ff    	je     4310 <parse_and_or+0xd0>
    4433:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    443a:	00 
    443b:	0f 57 c0             	xorps  %xmm0,%xmm0
    443e:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    4442:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
    4449:	c7 40 18 02 00 00 00 	movl   $0x2,0x18(%rax)
    4450:	4c 89 38             	mov    %r15,(%rax)
    4453:	4c 89 68 08          	mov    %r13,0x8(%rax)
    4457:	49 89 c7             	mov    %rax,%r15
    445a:	e9 c7 fe ff ff       	jmp    4326 <parse_and_or+0xe6>
    445f:	90                   	nop

0000000000004460 <parse_pipeline>:
    4460:	41 57                	push   %r15
    4462:	41 56                	push   %r14
    4464:	41 55                	push   %r13
    4466:	41 54                	push   %r12
    4468:	53                   	push   %rbx
    4469:	48 89 f3             	mov    %rsi,%rbx
    446c:	49 89 fe             	mov    %rdi,%r14
    446f:	e8 5c fc ff ff       	call   40d0 <parse_command>
    4474:	49 89 c4             	mov    %rax,%r12
    4477:	49 8b 0e             	mov    (%r14),%rcx
    447a:	48 85 c9             	test   %rcx,%rcx
    447d:	0f 84 80 00 00 00    	je     4503 <parse_pipeline+0xa3>
    4483:	4c 8d 3d 83 3c 00 00 	lea    0x3c83(%rip),%r15        # 810d <_IO_stdin_used+0x10d>
    448a:	eb 33                	jmp    44bf <parse_pipeline+0x5f>
    448c:	0f 1f 40 00          	nopl   0x0(%rax)
    4490:	48 c7 40 10 00 00 00 	movq   $0x0,0x10(%rax)
    4497:	00 
    4498:	0f 57 c0             	xorps  %xmm0,%xmm0
    449b:	0f 11 40 20          	movups %xmm0,0x20(%rax)
    449f:	c7 40 30 00 00 00 00 	movl   $0x0,0x30(%rax)
    44a6:	c7 40 18 01 00 00 00 	movl   $0x1,0x18(%rax)
    44ad:	4c 89 20             	mov    %r12,(%rax)
    44b0:	4c 89 68 08          	mov    %r13,0x8(%rax)
    44b4:	49 8b 0e             	mov    (%r14),%rcx
    44b7:	49 89 c4             	mov    %rax,%r12
    44ba:	48 85 c9             	test   %rcx,%rcx
    44bd:	74 47                	je     4506 <parse_pipeline+0xa6>
    44bf:	48 8b 01             	mov    (%rcx),%rax
    44c2:	f6 40 20 02          	testb  $0x2,0x20(%rax)
    44c6:	74 3b                	je     4503 <parse_pipeline+0xa3>
    44c8:	48 8b 41 08          	mov    0x8(%rcx),%rax
    44cc:	49 89 06             	mov    %rax,(%r14)
    44cf:	4c 89 f7             	mov    %r14,%rdi
    44d2:	48 89 de             	mov    %rbx,%rsi
    44d5:	e8 f6 fb ff ff       	call   40d0 <parse_command>
    44da:	49 89 c5             	mov    %rax,%r13
    44dd:	bf 38 00 00 00       	mov    $0x38,%edi
    44e2:	e8 a9 cc ff ff       	call   1190 <malloc@plt>
    44e7:	48 85 c0             	test   %rax,%rax
    44ea:	75 a4                	jne    4490 <parse_pipeline+0x30>
    44ec:	bf 02 00 00 00       	mov    $0x2,%edi
    44f1:	4c 89 fe             	mov    %r15,%rsi
    44f4:	49 89 c4             	mov    %rax,%r12
    44f7:	31 c0                	xor    %eax,%eax
    44f9:	e8 52 df ff ff       	call   2450 <ft_printf>
    44fe:	4c 89 e0             	mov    %r12,%rax
    4501:	eb b1                	jmp    44b4 <parse_pipeline+0x54>
    4503:	4c 89 e0             	mov    %r12,%rax
    4506:	5b                   	pop    %rbx
    4507:	41 5c                	pop    %r12
    4509:	41 5d                	pop    %r13
    450b:	41 5e                	pop    %r14
    450d:	41 5f                	pop    %r15
    450f:	31 c9                	xor    %ecx,%ecx
    4511:	31 ff                	xor    %edi,%edi
    4513:	31 f6                	xor    %esi,%esi
    4515:	c3                   	ret
    4516:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    451d:	00 00 00 

0000000000004520 <create_tree>:
    4520:	48 83 ec 18          	sub    $0x18,%rsp
    4524:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    452b:	00 00 
    452d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    4532:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    4537:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    453e:	00 
    453f:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    4544:	48 89 e6             	mov    %rsp,%rsi
    4547:	e8 f4 fc ff ff       	call   4240 <parse_and_or>
    454c:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    4553:	00 00 
    4555:	48 3b 4c 24 10       	cmp    0x10(%rsp),%rcx
    455a:	75 0b                	jne    4567 <create_tree+0x47>
    455c:	48 83 c4 18          	add    $0x18,%rsp
    4560:	31 c9                	xor    %ecx,%ecx
    4562:	31 ff                	xor    %edi,%edi
    4564:	31 f6                	xor    %esi,%esi
    4566:	c3                   	ret
    4567:	e8 74 cb ff ff       	call   10e0 <__stack_chk_fail@plt>
    456c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000004570 <fragment_double_quote>:
    4570:	41 57                	push   %r15
    4572:	41 56                	push   %r14
    4574:	53                   	push   %rbx
    4575:	48 89 d3             	mov    %rdx,%rbx
    4578:	49 89 f6             	mov    %rsi,%r14
    457b:	49 89 ff             	mov    %rdi,%r15
    457e:	48 8b 02             	mov    (%rdx),%rax
    4581:	48 01 c7             	add    %rax,%rdi
    4584:	48 ff c7             	inc    %rdi
    4587:	be 22 00 00 00       	mov    $0x22,%esi
    458c:	e8 cf e6 ff ff       	call   2c60 <ft_strchr>
    4591:	48 85 c0             	test   %rax,%rax
    4594:	74 66                	je     45fc <fragment_double_quote+0x8c>
    4596:	48 8b 33             	mov    (%rbx),%rsi
    4599:	49 8d 3c 37          	lea    (%r15,%rsi,1),%rdi
    459d:	48 ff c7             	inc    %rdi
    45a0:	49 8b 4e 28          	mov    0x28(%r14),%rcx
    45a4:	49 8b 56 30          	mov    0x30(%r14),%rdx
    45a8:	48 39 f8             	cmp    %rdi,%rax
    45ab:	74 69                	je     4616 <fragment_double_quote+0xa6>
    45ad:	48 ff c6             	inc    %rsi
    45b0:	48 89 cf             	mov    %rcx,%rdi
    45b3:	48 c1 e7 05          	shl    $0x5,%rdi
    45b7:	48 89 34 3a          	mov    %rsi,(%rdx,%rdi,1)
    45bb:	48 8b 33             	mov    (%rbx),%rsi
    45be:	4d 8d 04 37          	lea    (%r15,%rsi,1),%r8
    45c2:	48 01 c6             	add    %rax,%rsi
    45c5:	49 f7 d0             	not    %r8
    45c8:	49 01 f0             	add    %rsi,%r8
    45cb:	4c 89 44 3a 08       	mov    %r8,0x8(%rdx,%rdi,1)
    45d0:	c7 44 3a 18 00 00 00 	movl   $0x0,0x18(%rdx,%rdi,1)
    45d7:	00 
    45d8:	48 c7 44 3a 10 02 00 	movq   $0x2,0x10(%rdx,%rdi,1)
    45df:	00 00 
    45e1:	48 ff c1             	inc    %rcx
    45e4:	49 89 4e 28          	mov    %rcx,0x28(%r14)
    45e8:	48 8b 0b             	mov    (%rbx),%rcx
    45eb:	49 01 cf             	add    %rcx,%r15
    45ee:	48 01 c8             	add    %rcx,%rax
    45f1:	4c 29 f8             	sub    %r15,%rax
    45f4:	48 ff c0             	inc    %rax
    45f7:	48 89 03             	mov    %rax,(%rbx)
    45fa:	eb 34                	jmp    4630 <fragment_double_quote+0xc0>
    45fc:	48 8d 35 e7 3b 00 00 	lea    0x3be7(%rip),%rsi        # 81ea <_IO_stdin_used+0x1ea>
    4603:	bf 02 00 00 00       	mov    $0x2,%edi
    4608:	31 c0                	xor    %eax,%eax
    460a:	e8 41 de ff ff       	call   2450 <ft_printf>
    460f:	b8 01 00 00 00       	mov    $0x1,%eax
    4614:	eb 1c                	jmp    4632 <fragment_double_quote+0xc2>
    4616:	48 89 c8             	mov    %rcx,%rax
    4619:	48 c1 e0 05          	shl    $0x5,%rax
    461d:	c7 44 02 10 04 00 00 	movl   $0x4,0x10(%rdx,%rax,1)
    4624:	00 
    4625:	48 ff c1             	inc    %rcx
    4628:	49 89 4e 28          	mov    %rcx,0x28(%r14)
    462c:	48 83 03 02          	addq   $0x2,(%rbx)
    4630:	31 c0                	xor    %eax,%eax
    4632:	5b                   	pop    %rbx
    4633:	41 5e                	pop    %r14
    4635:	41 5f                	pop    %r15
    4637:	31 c9                	xor    %ecx,%ecx
    4639:	31 ff                	xor    %edi,%edi
    463b:	31 d2                	xor    %edx,%edx
    463d:	31 f6                	xor    %esi,%esi
    463f:	45 31 c0             	xor    %r8d,%r8d
    4642:	c3                   	ret
    4643:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    464a:	84 00 00 00 00 00 

0000000000004650 <fragment_single_quote>:
    4650:	41 57                	push   %r15
    4652:	41 56                	push   %r14
    4654:	53                   	push   %rbx
    4655:	48 89 d3             	mov    %rdx,%rbx
    4658:	49 89 f6             	mov    %rsi,%r14
    465b:	49 89 ff             	mov    %rdi,%r15
    465e:	48 8b 02             	mov    (%rdx),%rax
    4661:	48 01 c7             	add    %rax,%rdi
    4664:	48 ff c7             	inc    %rdi
    4667:	be 27 00 00 00       	mov    $0x27,%esi
    466c:	e8 ef e5 ff ff       	call   2c60 <ft_strchr>
    4671:	48 85 c0             	test   %rax,%rax
    4674:	74 66                	je     46dc <fragment_single_quote+0x8c>
    4676:	48 8b 33             	mov    (%rbx),%rsi
    4679:	49 8d 3c 37          	lea    (%r15,%rsi,1),%rdi
    467d:	48 ff c7             	inc    %rdi
    4680:	49 8b 4e 28          	mov    0x28(%r14),%rcx
    4684:	49 8b 56 30          	mov    0x30(%r14),%rdx
    4688:	48 39 f8             	cmp    %rdi,%rax
    468b:	74 69                	je     46f6 <fragment_single_quote+0xa6>
    468d:	48 ff c6             	inc    %rsi
    4690:	48 89 cf             	mov    %rcx,%rdi
    4693:	48 c1 e7 05          	shl    $0x5,%rdi
    4697:	48 89 34 3a          	mov    %rsi,(%rdx,%rdi,1)
    469b:	48 8b 33             	mov    (%rbx),%rsi
    469e:	4d 8d 04 37          	lea    (%r15,%rsi,1),%r8
    46a2:	48 01 c6             	add    %rax,%rsi
    46a5:	49 f7 d0             	not    %r8
    46a8:	49 01 f0             	add    %rsi,%r8
    46ab:	4c 89 44 3a 08       	mov    %r8,0x8(%rdx,%rdi,1)
    46b0:	c7 44 3a 18 00 00 00 	movl   $0x0,0x18(%rdx,%rdi,1)
    46b7:	00 
    46b8:	48 c7 44 3a 10 01 00 	movq   $0x1,0x10(%rdx,%rdi,1)
    46bf:	00 00 
    46c1:	48 ff c1             	inc    %rcx
    46c4:	49 89 4e 28          	mov    %rcx,0x28(%r14)
    46c8:	48 8b 0b             	mov    (%rbx),%rcx
    46cb:	49 01 cf             	add    %rcx,%r15
    46ce:	48 01 c8             	add    %rcx,%rax
    46d1:	4c 29 f8             	sub    %r15,%rax
    46d4:	48 ff c0             	inc    %rax
    46d7:	48 89 03             	mov    %rax,(%rbx)
    46da:	eb 34                	jmp    4710 <fragment_single_quote+0xc0>
    46dc:	48 8d 35 26 3b 00 00 	lea    0x3b26(%rip),%rsi        # 8209 <_IO_stdin_used+0x209>
    46e3:	bf 02 00 00 00       	mov    $0x2,%edi
    46e8:	31 c0                	xor    %eax,%eax
    46ea:	e8 61 dd ff ff       	call   2450 <ft_printf>
    46ef:	b8 01 00 00 00       	mov    $0x1,%eax
    46f4:	eb 1c                	jmp    4712 <fragment_single_quote+0xc2>
    46f6:	48 89 c8             	mov    %rcx,%rax
    46f9:	48 c1 e0 05          	shl    $0x5,%rax
    46fd:	c7 44 02 10 04 00 00 	movl   $0x4,0x10(%rdx,%rax,1)
    4704:	00 
    4705:	48 ff c1             	inc    %rcx
    4708:	49 89 4e 28          	mov    %rcx,0x28(%r14)
    470c:	48 83 03 02          	addq   $0x2,(%rbx)
    4710:	31 c0                	xor    %eax,%eax
    4712:	5b                   	pop    %rbx
    4713:	41 5e                	pop    %r14
    4715:	41 5f                	pop    %r15
    4717:	31 c9                	xor    %ecx,%ecx
    4719:	31 ff                	xor    %edi,%edi
    471b:	31 d2                	xor    %edx,%edx
    471d:	31 f6                	xor    %esi,%esi
    471f:	45 31 c0             	xor    %r8d,%r8d
    4722:	c3                   	ret
    4723:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    472a:	84 00 00 00 00 00 

0000000000004730 <fragment_unquoted>:
    4730:	41 56                	push   %r14
    4732:	53                   	push   %rbx
    4733:	50                   	push   %rax
    4734:	48 89 d3             	mov    %rdx,%rbx
    4737:	49 89 f6             	mov    %rsi,%r14
    473a:	48 03 3a             	add    (%rdx),%rdi
    473d:	48 89 ce             	mov    %rcx,%rsi
    4740:	e8 4b 22 00 00       	call   6990 <len_to_quote_or_delimiter>
    4745:	48 8b 0b             	mov    (%rbx),%rcx
    4748:	49 8b 56 28          	mov    0x28(%r14),%rdx
    474c:	49 8b 76 30          	mov    0x30(%r14),%rsi
    4750:	48 89 d7             	mov    %rdx,%rdi
    4753:	48 c1 e7 05          	shl    $0x5,%rdi
    4757:	48 89 0c 3e          	mov    %rcx,(%rsi,%rdi,1)
    475b:	48 01 c1             	add    %rax,%rcx
    475e:	48 ff c9             	dec    %rcx
    4761:	48 89 4c 3e 08       	mov    %rcx,0x8(%rsi,%rdi,1)
    4766:	c7 44 3e 18 00 00 00 	movl   $0x0,0x18(%rsi,%rdi,1)
    476d:	00 
    476e:	48 c7 44 3e 10 03 00 	movq   $0x3,0x10(%rsi,%rdi,1)
    4775:	00 00 
    4777:	48 ff c2             	inc    %rdx
    477a:	49 89 56 28          	mov    %rdx,0x28(%r14)
    477e:	48 01 03             	add    %rax,(%rbx)
    4781:	31 c0                	xor    %eax,%eax
    4783:	48 83 c4 08          	add    $0x8,%rsp
    4787:	5b                   	pop    %rbx
    4788:	41 5e                	pop    %r14
    478a:	31 c9                	xor    %ecx,%ecx
    478c:	31 ff                	xor    %edi,%edi
    478e:	31 d2                	xor    %edx,%edx
    4790:	31 f6                	xor    %esi,%esi
    4792:	c3                   	ret
    4793:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    479a:	84 00 00 00 00 00 

00000000000047a0 <handle_fragments>:
    47a0:	55                   	push   %rbp
    47a1:	41 57                	push   %r15
    47a3:	41 56                	push   %r14
    47a5:	41 55                	push   %r13
    47a7:	41 54                	push   %r12
    47a9:	53                   	push   %rbx
    47aa:	50                   	push   %rax
    47ab:	48 89 cb             	mov    %rcx,%rbx
    47ae:	49 89 d6             	mov    %rdx,%r14
    47b1:	49 89 f7             	mov    %rsi,%r15
    47b4:	49 89 fc             	mov    %rdi,%r12
    47b7:	48 8b 39             	mov    (%rcx),%rdi
    47ba:	4c 01 e7             	add    %r12,%rdi
    47bd:	e8 ce 20 00 00       	call   6890 <len_to_unquoted_delimiter>
    47c2:	48 8b 3b             	mov    (%rbx),%rdi
    47c5:	31 ed                	xor    %ebp,%ebp
    47c7:	41 80 3c 3c 00       	cmpb   $0x0,(%r12,%rdi,1)
    47cc:	0f 84 ca 01 00 00    	je     499c <handle_fragments+0x1fc>
    47d2:	4c 01 e7             	add    %r12,%rdi
    47d5:	4c 8d 2d 2d 3a 00 00 	lea    0x3a2d(%rip),%r13        # 8209 <_IO_stdin_used+0x209>
    47dc:	eb 5b                	jmp    4839 <handle_fragments+0x99>
    47de:	66 90                	xchg   %ax,%ax
    47e0:	48 89 c7             	mov    %rax,%rdi
    47e3:	4c 89 fe             	mov    %r15,%rsi
    47e6:	e8 a5 21 00 00       	call   6990 <len_to_quote_or_delimiter>
    47eb:	48 8b 0b             	mov    (%rbx),%rcx
    47ee:	49 8b 56 28          	mov    0x28(%r14),%rdx
    47f2:	49 8b 76 30          	mov    0x30(%r14),%rsi
    47f6:	48 89 d7             	mov    %rdx,%rdi
    47f9:	48 c1 e7 05          	shl    $0x5,%rdi
    47fd:	48 89 0c 3e          	mov    %rcx,(%rsi,%rdi,1)
    4801:	48 01 c1             	add    %rax,%rcx
    4804:	48 ff c9             	dec    %rcx
    4807:	48 89 4c 3e 08       	mov    %rcx,0x8(%rsi,%rdi,1)
    480c:	c7 44 3e 18 00 00 00 	movl   $0x0,0x18(%rsi,%rdi,1)
    4813:	00 
    4814:	48 c7 44 3e 10 03 00 	movq   $0x3,0x10(%rsi,%rdi,1)
    481b:	00 00 
    481d:	48 ff c2             	inc    %rdx
    4820:	49 89 56 28          	mov    %rdx,0x28(%r14)
    4824:	48 03 03             	add    (%rbx),%rax
    4827:	48 89 03             	mov    %rax,(%rbx)
    482a:	49 8d 3c 04          	lea    (%r12,%rax,1),%rdi
    482e:	41 80 3c 04 00       	cmpb   $0x0,(%r12,%rax,1)
    4833:	0f 84 63 01 00 00    	je     499c <handle_fragments+0x1fc>
    4839:	4c 89 fe             	mov    %r15,%rsi
    483c:	e8 4f 20 00 00       	call   6890 <len_to_unquoted_delimiter>
    4841:	48 85 c0             	test   %rax,%rax
    4844:	0f 84 52 01 00 00    	je     499c <handle_fragments+0x1fc>
    484a:	48 8b 03             	mov    (%rbx),%rax
    484d:	41 0f b6 0c 04       	movzbl (%r12,%rax,1),%ecx
    4852:	85 c9                	test   %ecx,%ecx
    4854:	74 d4                	je     482a <handle_fragments+0x8a>
    4856:	4c 01 e0             	add    %r12,%rax
    4859:	83 f9 27             	cmp    $0x27,%ecx
    485c:	0f 84 7e 00 00 00    	je     48e0 <handle_fragments+0x140>
    4862:	83 f9 22             	cmp    $0x22,%ecx
    4865:	0f 85 75 ff ff ff    	jne    47e0 <handle_fragments+0x40>
    486b:	48 ff c0             	inc    %rax
    486e:	48 89 c7             	mov    %rax,%rdi
    4871:	be 22 00 00 00       	mov    $0x22,%esi
    4876:	e8 e5 e3 ff ff       	call   2c60 <ft_strchr>
    487b:	48 85 c0             	test   %rax,%rax
    487e:	0f 84 fd 00 00 00    	je     4981 <handle_fragments+0x1e1>
    4884:	48 8b 33             	mov    (%rbx),%rsi
    4887:	49 8d 3c 34          	lea    (%r12,%rsi,1),%rdi
    488b:	48 ff c7             	inc    %rdi
    488e:	49 8b 4e 28          	mov    0x28(%r14),%rcx
    4892:	49 8b 56 30          	mov    0x30(%r14),%rdx
    4896:	48 39 f8             	cmp    %rdi,%rax
    4899:	0f 84 c0 00 00 00    	je     495f <handle_fragments+0x1bf>
    489f:	48 ff c6             	inc    %rsi
    48a2:	48 89 cf             	mov    %rcx,%rdi
    48a5:	48 c1 e7 05          	shl    $0x5,%rdi
    48a9:	48 89 34 3a          	mov    %rsi,(%rdx,%rdi,1)
    48ad:	48 8b 33             	mov    (%rbx),%rsi
    48b0:	4d 8d 04 34          	lea    (%r12,%rsi,1),%r8
    48b4:	49 f7 d0             	not    %r8
    48b7:	49 01 f0             	add    %rsi,%r8
    48ba:	49 01 c0             	add    %rax,%r8
    48bd:	4c 89 44 3a 08       	mov    %r8,0x8(%rdx,%rdi,1)
    48c2:	c7 44 3a 18 00 00 00 	movl   $0x0,0x18(%rdx,%rdi,1)
    48c9:	00 
    48ca:	48 c7 44 3a 10 02 00 	movq   $0x2,0x10(%rdx,%rdi,1)
    48d1:	00 00 
    48d3:	eb 6f                	jmp    4944 <handle_fragments+0x1a4>
    48d5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    48dc:	00 00 00 00 
    48e0:	48 ff c0             	inc    %rax
    48e3:	48 89 c7             	mov    %rax,%rdi
    48e6:	be 27 00 00 00       	mov    $0x27,%esi
    48eb:	e8 70 e3 ff ff       	call   2c60 <ft_strchr>
    48f0:	48 85 c0             	test   %rax,%rax
    48f3:	0f 84 8f 00 00 00    	je     4988 <handle_fragments+0x1e8>
    48f9:	48 8b 33             	mov    (%rbx),%rsi
    48fc:	49 8d 3c 34          	lea    (%r12,%rsi,1),%rdi
    4900:	48 ff c7             	inc    %rdi
    4903:	49 8b 4e 28          	mov    0x28(%r14),%rcx
    4907:	49 8b 56 30          	mov    0x30(%r14),%rdx
    490b:	48 39 f8             	cmp    %rdi,%rax
    490e:	74 4f                	je     495f <handle_fragments+0x1bf>
    4910:	48 ff c6             	inc    %rsi
    4913:	48 89 cf             	mov    %rcx,%rdi
    4916:	48 c1 e7 05          	shl    $0x5,%rdi
    491a:	48 89 34 3a          	mov    %rsi,(%rdx,%rdi,1)
    491e:	48 8b 33             	mov    (%rbx),%rsi
    4921:	4d 8d 04 34          	lea    (%r12,%rsi,1),%r8
    4925:	49 f7 d0             	not    %r8
    4928:	49 01 f0             	add    %rsi,%r8
    492b:	49 01 c0             	add    %rax,%r8
    492e:	4c 89 44 3a 08       	mov    %r8,0x8(%rdx,%rdi,1)
    4933:	c7 44 3a 18 00 00 00 	movl   $0x0,0x18(%rdx,%rdi,1)
    493a:	00 
    493b:	48 c7 44 3a 10 01 00 	movq   $0x1,0x10(%rdx,%rdi,1)
    4942:	00 00 
    4944:	48 ff c1             	inc    %rcx
    4947:	49 89 4e 28          	mov    %rcx,0x28(%r14)
    494b:	48 8b 0b             	mov    (%rbx),%rcx
    494e:	48 01 c8             	add    %rcx,%rax
    4951:	4c 29 e0             	sub    %r12,%rax
    4954:	48 29 c8             	sub    %rcx,%rax
    4957:	48 ff c0             	inc    %rax
    495a:	e9 c8 fe ff ff       	jmp    4827 <handle_fragments+0x87>
    495f:	48 89 c8             	mov    %rcx,%rax
    4962:	48 c1 e0 05          	shl    $0x5,%rax
    4966:	c7 44 02 10 04 00 00 	movl   $0x4,0x10(%rdx,%rax,1)
    496d:	00 
    496e:	48 ff c1             	inc    %rcx
    4971:	49 89 4e 28          	mov    %rcx,0x28(%r14)
    4975:	48 8b 03             	mov    (%rbx),%rax
    4978:	48 83 c0 02          	add    $0x2,%rax
    497c:	e9 a6 fe ff ff       	jmp    4827 <handle_fragments+0x87>
    4981:	4c 8d 2d 62 38 00 00 	lea    0x3862(%rip),%r13        # 81ea <_IO_stdin_used+0x1ea>
    4988:	bf 02 00 00 00       	mov    $0x2,%edi
    498d:	4c 89 ee             	mov    %r13,%rsi
    4990:	31 c0                	xor    %eax,%eax
    4992:	e8 b9 da ff ff       	call   2450 <ft_printf>
    4997:	bd 01 00 00 00       	mov    $0x1,%ebp
    499c:	89 e8                	mov    %ebp,%eax
    499e:	48 83 c4 08          	add    $0x8,%rsp
    49a2:	5b                   	pop    %rbx
    49a3:	41 5c                	pop    %r12
    49a5:	41 5d                	pop    %r13
    49a7:	41 5e                	pop    %r14
    49a9:	41 5f                	pop    %r15
    49ab:	5d                   	pop    %rbp
    49ac:	31 c9                	xor    %ecx,%ecx
    49ae:	31 ff                	xor    %edi,%edi
    49b0:	31 d2                	xor    %edx,%edx
    49b2:	31 f6                	xor    %esi,%esi
    49b4:	45 31 c0             	xor    %r8d,%r8d
    49b7:	c3                   	ret
    49b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    49bf:	00 

00000000000049c0 <btoindex>:
    49c0:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    49c5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    49cc:	00 00 00 00 
    49d0:	ff c0                	inc    %eax
    49d2:	0f a3 c7             	bt     %eax,%edi
    49d5:	73 f9                	jae    49d0 <btoindex+0x10>
    49d7:	31 ff                	xor    %edi,%edi
    49d9:	c3                   	ret
    49da:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000049e0 <print_fragment_str>:
    49e0:	41 56                	push   %r14
    49e2:	53                   	push   %rbx
    49e3:	50                   	push   %rax
    49e4:	48 8b 46 30          	mov    0x30(%rsi),%rax
    49e8:	48 c1 e2 05          	shl    $0x5,%rdx
    49ec:	48 8b 34 10          	mov    (%rax,%rdx,1),%rsi
    49f0:	48 8b 54 10 08       	mov    0x8(%rax,%rdx,1),%rdx
    49f5:	48 29 f2             	sub    %rsi,%rdx
    49f8:	48 ff c2             	inc    %rdx
    49fb:	e8 e0 e5 ff ff       	call   2fe0 <ft_substr>
    4a00:	48 85 c0             	test   %rax,%rax
    4a03:	74 25                	je     4a2a <print_fragment_str+0x4a>
    4a05:	48 8d 35 1c 38 00 00 	lea    0x381c(%rip),%rsi        # 8228 <_IO_stdin_used+0x228>
    4a0c:	31 db                	xor    %ebx,%ebx
    4a0e:	bf 01 00 00 00       	mov    $0x1,%edi
    4a13:	48 89 c2             	mov    %rax,%rdx
    4a16:	49 89 c6             	mov    %rax,%r14
    4a19:	31 c0                	xor    %eax,%eax
    4a1b:	e8 30 da ff ff       	call   2450 <ft_printf>
    4a20:	4c 89 f7             	mov    %r14,%rdi
    4a23:	e8 18 c6 ff ff       	call   1040 <free@plt>
    4a28:	eb 05                	jmp    4a2f <print_fragment_str+0x4f>
    4a2a:	bb 01 00 00 00       	mov    $0x1,%ebx
    4a2f:	89 d8                	mov    %ebx,%eax
    4a31:	48 83 c4 08          	add    $0x8,%rsp
    4a35:	5b                   	pop    %rbx
    4a36:	41 5e                	pop    %r14
    4a38:	31 ff                	xor    %edi,%edi
    4a3a:	31 d2                	xor    %edx,%edx
    4a3c:	31 f6                	xor    %esi,%esi
    4a3e:	c3                   	ret
    4a3f:	90                   	nop

0000000000004a40 <del_token>:
    4a40:	53                   	push   %rbx
    4a41:	48 89 fb             	mov    %rdi,%rbx
    4a44:	48 8b 7f 30          	mov    0x30(%rdi),%rdi
    4a48:	e8 f3 c5 ff ff       	call   1040 <free@plt>
    4a4d:	48 8b 3b             	mov    (%rbx),%rdi
    4a50:	e8 eb c5 ff ff       	call   1040 <free@plt>
    4a55:	48 89 df             	mov    %rbx,%rdi
    4a58:	5b                   	pop    %rbx
    4a59:	e9 e2 c5 ff ff       	jmp    1040 <free@plt>
    4a5e:	66 90                	xchg   %ax,%ax

0000000000004a60 <del_tokens>:
    4a60:	48 83 ec 18          	sub    $0x18,%rsp
    4a64:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4a6b:	00 00 
    4a6d:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    4a72:	48 89 7c 24 08       	mov    %rdi,0x8(%rsp)
    4a77:	48 8d 35 c2 ff ff ff 	lea    -0x3e(%rip),%rsi        # 4a40 <del_token>
    4a7e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    4a83:	e8 98 1a 00 00       	call   6520 <ft_lstclear>
    4a88:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4a8f:	00 00 
    4a91:	48 3b 44 24 10       	cmp    0x10(%rsp),%rax
    4a96:	75 0b                	jne    4aa3 <del_tokens+0x43>
    4a98:	48 83 c4 18          	add    $0x18,%rsp
    4a9c:	31 c0                	xor    %eax,%eax
    4a9e:	31 ff                	xor    %edi,%edi
    4aa0:	31 f6                	xor    %esi,%esi
    4aa2:	c3                   	ret
    4aa3:	e8 38 c6 ff ff       	call   10e0 <__stack_chk_fail@plt>
    4aa8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4aaf:	00 

0000000000004ab0 <create_env_var_value>:
    4ab0:	41 57                	push   %r15
    4ab2:	41 56                	push   %r14
    4ab4:	41 54                	push   %r12
    4ab6:	53                   	push   %rbx
    4ab7:	50                   	push   %rax
    4ab8:	0f b6 07             	movzbl (%rdi),%eax
    4abb:	85 c0                	test   %eax,%eax
    4abd:	0f 84 a8 00 00 00    	je     4b6b <create_env_var_value+0xbb>
    4ac3:	48 89 d3             	mov    %rdx,%rbx
    4ac6:	49 89 f6             	mov    %rsi,%r14
    4ac9:	83 f8 3f             	cmp    $0x3f,%eax
    4acc:	74 14                	je     4ae2 <create_env_var_value+0x32>
    4ace:	83 f8 24             	cmp    $0x24,%eax
    4ad1:	75 29                	jne    4afc <create_env_var_value+0x4c>
    4ad3:	49 ff 06             	incq   (%r14)
    4ad6:	48 8d 3d 5a 37 00 00 	lea    0x375a(%rip),%rdi        # 8237 <_IO_stdin_used+0x237>
    4add:	e9 90 00 00 00       	jmp    4b72 <create_env_var_value+0xc2>
    4ae2:	49 ff 06             	incq   (%r14)
    4ae5:	8b 7b 08             	mov    0x8(%rbx),%edi
    4ae8:	48 83 c4 08          	add    $0x8,%rsp
    4aec:	5b                   	pop    %rbx
    4aed:	41 5c                	pop    %r12
    4aef:	41 5e                	pop    %r14
    4af1:	41 5f                	pop    %r15
    4af3:	31 d2                	xor    %edx,%edx
    4af5:	31 f6                	xor    %esi,%esi
    4af7:	e9 a4 d5 ff ff       	jmp    20a0 <ft_itoa>
    4afc:	49 89 ff             	mov    %rdi,%r15
    4aff:	0f be f8             	movsbl %al,%edi
    4b02:	e8 69 d5 ff ff       	call   2070 <ft_isalpha>
    4b07:	85 c0                	test   %eax,%eax
    4b09:	75 06                	jne    4b11 <create_env_var_value+0x61>
    4b0b:	41 80 3f 5f          	cmpb   $0x5f,(%r15)
    4b0f:	75 5a                	jne    4b6b <create_env_var_value+0xbb>
    4b11:	45 31 e4             	xor    %r12d,%r12d
    4b14:	eb 0d                	jmp    4b23 <create_env_var_value+0x73>
    4b16:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4b1d:	00 00 00 
    4b20:	49 ff c4             	inc    %r12
    4b23:	43 0f be 3c 27       	movsbl (%r15,%r12,1),%edi
    4b28:	e8 13 d5 ff ff       	call   2040 <ft_isalnum>
    4b2d:	85 c0                	test   %eax,%eax
    4b2f:	75 ef                	jne    4b20 <create_env_var_value+0x70>
    4b31:	43 80 3c 27 5f       	cmpb   $0x5f,(%r15,%r12,1)
    4b36:	74 e8                	je     4b20 <create_env_var_value+0x70>
    4b38:	4d 01 26             	add    %r12,(%r14)
    4b3b:	4c 89 ff             	mov    %r15,%rdi
    4b3e:	31 f6                	xor    %esi,%esi
    4b40:	4c 89 e2             	mov    %r12,%rdx
    4b43:	e8 98 e4 ff ff       	call   2fe0 <ft_substr>
    4b48:	48 85 c0             	test   %rax,%rax
    4b4b:	74 39                	je     4b86 <create_env_var_value+0xd6>
    4b4d:	48 8b 3b             	mov    (%rbx),%rdi
    4b50:	48 89 c6             	mov    %rax,%rsi
    4b53:	48 89 c3             	mov    %rax,%rbx
    4b56:	e8 35 d4 ff ff       	call   1f90 <ft_get_env_value>
    4b5b:	49 89 c6             	mov    %rax,%r14
    4b5e:	48 89 df             	mov    %rbx,%rdi
    4b61:	e8 da c4 ff ff       	call   1040 <free@plt>
    4b66:	4c 89 f0             	mov    %r14,%rax
    4b69:	eb 1d                	jmp    4b88 <create_env_var_value+0xd8>
    4b6b:	48 8d 3d c6 36 00 00 	lea    0x36c6(%rip),%rdi        # 8238 <_IO_stdin_used+0x238>
    4b72:	48 83 c4 08          	add    $0x8,%rsp
    4b76:	5b                   	pop    %rbx
    4b77:	41 5c                	pop    %r12
    4b79:	41 5e                	pop    %r14
    4b7b:	41 5f                	pop    %r15
    4b7d:	31 d2                	xor    %edx,%edx
    4b7f:	31 f6                	xor    %esi,%esi
    4b81:	e9 1a e1 ff ff       	jmp    2ca0 <ft_strdup>
    4b86:	31 c0                	xor    %eax,%eax
    4b88:	48 83 c4 08          	add    $0x8,%rsp
    4b8c:	5b                   	pop    %rbx
    4b8d:	41 5c                	pop    %r12
    4b8f:	41 5e                	pop    %r14
    4b91:	41 5f                	pop    %r15
    4b93:	31 d2                	xor    %edx,%edx
    4b95:	31 f6                	xor    %esi,%esi
    4b97:	c3                   	ret
    4b98:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    4b9f:	00 

0000000000004ba0 <append_substr>:
    4ba0:	55                   	push   %rbp
    4ba1:	41 57                	push   %r15
    4ba3:	41 56                	push   %r14
    4ba5:	53                   	push   %rbx
    4ba6:	50                   	push   %rax
    4ba7:	89 d5                	mov    %edx,%ebp
    4ba9:	49 89 f6             	mov    %rsi,%r14
    4bac:	48 89 fb             	mov    %rdi,%rbx
    4baf:	48 8b 07             	mov    (%rdi),%rax
    4bb2:	48 8b 38             	mov    (%rax),%rdi
    4bb5:	e8 36 e1 ff ff       	call   2cf0 <ft_strjoin>
    4bba:	49 89 c7             	mov    %rax,%r15
    4bbd:	48 8b 03             	mov    (%rbx),%rax
    4bc0:	48 8b 38             	mov    (%rax),%rdi
    4bc3:	e8 78 c4 ff ff       	call   1040 <free@plt>
    4bc8:	85 ed                	test   %ebp,%ebp
    4bca:	74 08                	je     4bd4 <append_substr+0x34>
    4bcc:	4c 89 f7             	mov    %r14,%rdi
    4bcf:	e8 6c c4 ff ff       	call   1040 <free@plt>
    4bd4:	4d 85 ff             	test   %r15,%r15
    4bd7:	74 0a                	je     4be3 <append_substr+0x43>
    4bd9:	48 8b 03             	mov    (%rbx),%rax
    4bdc:	4c 89 38             	mov    %r15,(%rax)
    4bdf:	31 c0                	xor    %eax,%eax
    4be1:	eb 05                	jmp    4be8 <append_substr+0x48>
    4be3:	b8 01 00 00 00       	mov    $0x1,%eax
    4be8:	48 83 c4 08          	add    $0x8,%rsp
    4bec:	5b                   	pop    %rbx
    4bed:	41 5e                	pop    %r14
    4bef:	41 5f                	pop    %r15
    4bf1:	5d                   	pop    %rbp
    4bf2:	31 ff                	xor    %edi,%edi
    4bf4:	31 d2                	xor    %edx,%edx
    4bf6:	31 f6                	xor    %esi,%esi
    4bf8:	c3                   	ret
    4bf9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

0000000000004c00 <safe_strjoin>:
    4c00:	55                   	push   %rbp
    4c01:	41 57                	push   %r15
    4c03:	41 56                	push   %r14
    4c05:	53                   	push   %rbx
    4c06:	50                   	push   %rax
    4c07:	89 d5                	mov    %edx,%ebp
    4c09:	49 89 f7             	mov    %rsi,%r15
    4c0c:	48 89 fb             	mov    %rdi,%rbx
    4c0f:	48 8b 3f             	mov    (%rdi),%rdi
    4c12:	e8 d9 e0 ff ff       	call   2cf0 <ft_strjoin>
    4c17:	49 89 c6             	mov    %rax,%r14
    4c1a:	48 8b 3b             	mov    (%rbx),%rdi
    4c1d:	e8 1e c4 ff ff       	call   1040 <free@plt>
    4c22:	85 ed                	test   %ebp,%ebp
    4c24:	74 08                	je     4c2e <safe_strjoin+0x2e>
    4c26:	4c 89 ff             	mov    %r15,%rdi
    4c29:	e8 12 c4 ff ff       	call   1040 <free@plt>
    4c2e:	4d 85 f6             	test   %r14,%r14
    4c31:	74 03                	je     4c36 <safe_strjoin+0x36>
    4c33:	4c 89 33             	mov    %r14,(%rbx)
    4c36:	4c 89 f0             	mov    %r14,%rax
    4c39:	48 83 c4 08          	add    $0x8,%rsp
    4c3d:	5b                   	pop    %rbx
    4c3e:	41 5e                	pop    %r14
    4c40:	41 5f                	pop    %r15
    4c42:	5d                   	pop    %rbp
    4c43:	31 ff                	xor    %edi,%edi
    4c45:	31 d2                	xor    %edx,%edx
    4c47:	31 f6                	xor    %esi,%esi
    4c49:	c3                   	ret
    4c4a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000004c50 <expand_double_quoted_fragment>:
    4c50:	55                   	push   %rbp
    4c51:	41 57                	push   %r15
    4c53:	41 56                	push   %r14
    4c55:	41 55                	push   %r13
    4c57:	41 54                	push   %r12
    4c59:	53                   	push   %rbx
    4c5a:	48 83 ec 28          	sub    $0x28,%rsp
    4c5e:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    4c63:	48 89 f3             	mov    %rsi,%rbx
    4c66:	49 89 fe             	mov    %rdi,%r14
    4c69:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4c70:	00 00 
    4c72:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    4c77:	48 8d 4f 01          	lea    0x1(%rdi),%rcx
    4c7b:	31 f6                	xor    %esi,%esi
    4c7d:	bd 01 00 00 00       	mov    $0x1,%ebp
    4c82:	4c 8d 2c 31          	lea    (%rcx,%rsi,1),%r13
    4c86:	4c 8d 7e 01          	lea    0x1(%rsi),%r15
    4c8a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4c90:	41 0f b6 45 ff       	movzbl -0x1(%r13),%eax
    4c95:	85 c0                	test   %eax,%eax
    4c97:	0f 84 a5 00 00 00    	je     4d42 <expand_double_quoted_fragment+0xf2>
    4c9d:	83 f8 24             	cmp    $0x24,%eax
    4ca0:	74 0e                	je     4cb0 <expand_double_quoted_fragment+0x60>
    4ca2:	49 ff c5             	inc    %r13
    4ca5:	49 ff c7             	inc    %r15
    4ca8:	eb e6                	jmp    4c90 <expand_double_quoted_fragment+0x40>
    4caa:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    4cb0:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    4cb5:	41 c6 45 ff 00       	movb   $0x0,-0x1(%r13)
    4cba:	4c 01 f6             	add    %r14,%rsi
    4cbd:	48 8b 03             	mov    (%rbx),%rax
    4cc0:	48 8b 38             	mov    (%rax),%rdi
    4cc3:	e8 28 e0 ff ff       	call   2cf0 <ft_strjoin>
    4cc8:	49 89 c4             	mov    %rax,%r12
    4ccb:	48 8b 03             	mov    (%rbx),%rax
    4cce:	48 8b 38             	mov    (%rax),%rdi
    4cd1:	e8 6a c3 ff ff       	call   1040 <free@plt>
    4cd6:	4d 85 e4             	test   %r12,%r12
    4cd9:	0f 84 96 00 00 00    	je     4d75 <expand_double_quoted_fragment+0x125>
    4cdf:	48 8b 03             	mov    (%rbx),%rax
    4ce2:	4c 89 20             	mov    %r12,(%rax)
    4ce5:	4c 89 7c 24 18       	mov    %r15,0x18(%rsp)
    4cea:	4c 89 ef             	mov    %r13,%rdi
    4ced:	48 8d 74 24 18       	lea    0x18(%rsp),%rsi
    4cf2:	48 8b 54 24 10       	mov    0x10(%rsp),%rdx
    4cf7:	e8 b4 fd ff ff       	call   4ab0 <create_env_var_value>
    4cfc:	48 85 c0             	test   %rax,%rax
    4cff:	74 74                	je     4d75 <expand_double_quoted_fragment+0x125>
    4d01:	49 89 c5             	mov    %rax,%r13
    4d04:	48 8b 03             	mov    (%rbx),%rax
    4d07:	48 8b 38             	mov    (%rax),%rdi
    4d0a:	4c 89 ee             	mov    %r13,%rsi
    4d0d:	e8 de df ff ff       	call   2cf0 <ft_strjoin>
    4d12:	49 89 c4             	mov    %rax,%r12
    4d15:	48 8b 03             	mov    (%rbx),%rax
    4d18:	48 8b 38             	mov    (%rax),%rdi
    4d1b:	e8 20 c3 ff ff       	call   1040 <free@plt>
    4d20:	4c 89 ef             	mov    %r13,%rdi
    4d23:	e8 18 c3 ff ff       	call   1040 <free@plt>
    4d28:	4d 85 e4             	test   %r12,%r12
    4d2b:	74 48                	je     4d75 <expand_double_quoted_fragment+0x125>
    4d2d:	48 8b 03             	mov    (%rbx),%rax
    4d30:	4c 89 20             	mov    %r12,(%rax)
    4d33:	48 8b 74 24 18       	mov    0x18(%rsp),%rsi
    4d38:	48 8b 4c 24 08       	mov    0x8(%rsp),%rcx
    4d3d:	e9 40 ff ff ff       	jmp    4c82 <expand_double_quoted_fragment+0x32>
    4d42:	49 01 f6             	add    %rsi,%r14
    4d45:	48 8b 03             	mov    (%rbx),%rax
    4d48:	48 8b 38             	mov    (%rax),%rdi
    4d4b:	4c 89 f6             	mov    %r14,%rsi
    4d4e:	e8 9d df ff ff       	call   2cf0 <ft_strjoin>
    4d53:	49 89 c6             	mov    %rax,%r14
    4d56:	48 8b 03             	mov    (%rbx),%rax
    4d59:	48 8b 38             	mov    (%rax),%rdi
    4d5c:	e8 df c2 ff ff       	call   1040 <free@plt>
    4d61:	4d 85 f6             	test   %r14,%r14
    4d64:	74 0a                	je     4d70 <expand_double_quoted_fragment+0x120>
    4d66:	48 8b 03             	mov    (%rbx),%rax
    4d69:	4c 89 30             	mov    %r14,(%rax)
    4d6c:	31 ed                	xor    %ebp,%ebp
    4d6e:	eb 05                	jmp    4d75 <expand_double_quoted_fragment+0x125>
    4d70:	bd 01 00 00 00       	mov    $0x1,%ebp
    4d75:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4d7c:	00 00 
    4d7e:	48 3b 44 24 20       	cmp    0x20(%rsp),%rax
    4d83:	75 19                	jne    4d9e <expand_double_quoted_fragment+0x14e>
    4d85:	89 e8                	mov    %ebp,%eax
    4d87:	48 83 c4 28          	add    $0x28,%rsp
    4d8b:	5b                   	pop    %rbx
    4d8c:	41 5c                	pop    %r12
    4d8e:	41 5d                	pop    %r13
    4d90:	41 5e                	pop    %r14
    4d92:	41 5f                	pop    %r15
    4d94:	5d                   	pop    %rbp
    4d95:	31 c9                	xor    %ecx,%ecx
    4d97:	31 ff                	xor    %edi,%edi
    4d99:	31 d2                	xor    %edx,%edx
    4d9b:	31 f6                	xor    %esi,%esi
    4d9d:	c3                   	ret
    4d9e:	e8 3d c3 ff ff       	call   10e0 <__stack_chk_fail@plt>
    4da3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    4daa:	84 00 00 00 00 00 

0000000000004db0 <create_expanded_fragment>:
    4db0:	55                   	push   %rbp
    4db1:	41 57                	push   %r15
    4db3:	41 56                	push   %r14
    4db5:	41 55                	push   %r13
    4db7:	41 54                	push   %r12
    4db9:	53                   	push   %rbx
    4dba:	48 83 ec 18          	sub    $0x18,%rsp
    4dbe:	48 89 14 24          	mov    %rdx,(%rsp)
    4dc2:	49 89 f6             	mov    %rsi,%r14
    4dc5:	49 89 ff             	mov    %rdi,%r15
    4dc8:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4dcf:	00 00 
    4dd1:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    4dd6:	48 8d 5f 01          	lea    0x1(%rdi),%rbx
    4dda:	31 f6                	xor    %esi,%esi
    4ddc:	48 8d 2c 33          	lea    (%rbx,%rsi,1),%rbp
    4de0:	4c 8d 66 01          	lea    0x1(%rsi),%r12
    4de4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    4deb:	00 00 00 00 00 
    4df0:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
    4df4:	85 c0                	test   %eax,%eax
    4df6:	0f 84 84 00 00 00    	je     4e80 <create_expanded_fragment+0xd0>
    4dfc:	83 f8 24             	cmp    $0x24,%eax
    4dff:	74 0f                	je     4e10 <create_expanded_fragment+0x60>
    4e01:	48 ff c5             	inc    %rbp
    4e04:	49 ff c4             	inc    %r12
    4e07:	eb e7                	jmp    4df0 <create_expanded_fragment+0x40>
    4e09:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    4e10:	c6 45 ff 00          	movb   $0x0,-0x1(%rbp)
    4e14:	4c 01 fe             	add    %r15,%rsi
    4e17:	49 8b 3e             	mov    (%r14),%rdi
    4e1a:	e8 d1 de ff ff       	call   2cf0 <ft_strjoin>
    4e1f:	49 89 c5             	mov    %rax,%r13
    4e22:	49 8b 3e             	mov    (%r14),%rdi
    4e25:	e8 16 c2 ff ff       	call   1040 <free@plt>
    4e2a:	4d 85 ed             	test   %r13,%r13
    4e2d:	74 74                	je     4ea3 <create_expanded_fragment+0xf3>
    4e2f:	4d 89 2e             	mov    %r13,(%r14)
    4e32:	4c 89 64 24 08       	mov    %r12,0x8(%rsp)
    4e37:	48 89 ef             	mov    %rbp,%rdi
    4e3a:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    4e3f:	48 8b 14 24          	mov    (%rsp),%rdx
    4e43:	e8 68 fc ff ff       	call   4ab0 <create_env_var_value>
    4e48:	48 85 c0             	test   %rax,%rax
    4e4b:	74 56                	je     4ea3 <create_expanded_fragment+0xf3>
    4e4d:	48 89 c5             	mov    %rax,%rbp
    4e50:	49 8b 3e             	mov    (%r14),%rdi
    4e53:	48 89 c6             	mov    %rax,%rsi
    4e56:	e8 95 de ff ff       	call   2cf0 <ft_strjoin>
    4e5b:	49 89 c5             	mov    %rax,%r13
    4e5e:	49 8b 3e             	mov    (%r14),%rdi
    4e61:	e8 da c1 ff ff       	call   1040 <free@plt>
    4e66:	48 89 ef             	mov    %rbp,%rdi
    4e69:	e8 d2 c1 ff ff       	call   1040 <free@plt>
    4e6e:	4d 85 ed             	test   %r13,%r13
    4e71:	74 30                	je     4ea3 <create_expanded_fragment+0xf3>
    4e73:	4d 89 2e             	mov    %r13,(%r14)
    4e76:	48 8b 74 24 08       	mov    0x8(%rsp),%rsi
    4e7b:	e9 5c ff ff ff       	jmp    4ddc <create_expanded_fragment+0x2c>
    4e80:	49 01 f7             	add    %rsi,%r15
    4e83:	49 8b 3e             	mov    (%r14),%rdi
    4e86:	4c 89 fe             	mov    %r15,%rsi
    4e89:	e8 62 de ff ff       	call   2cf0 <ft_strjoin>
    4e8e:	48 89 c3             	mov    %rax,%rbx
    4e91:	49 8b 3e             	mov    (%r14),%rdi
    4e94:	e8 a7 c1 ff ff       	call   1040 <free@plt>
    4e99:	48 85 db             	test   %rbx,%rbx
    4e9c:	74 05                	je     4ea3 <create_expanded_fragment+0xf3>
    4e9e:	49 89 1e             	mov    %rbx,(%r14)
    4ea1:	eb 02                	jmp    4ea5 <create_expanded_fragment+0xf5>
    4ea3:	31 db                	xor    %ebx,%ebx
    4ea5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    4eac:	00 00 
    4eae:	48 3b 44 24 10       	cmp    0x10(%rsp),%rax
    4eb3:	75 18                	jne    4ecd <create_expanded_fragment+0x11d>
    4eb5:	48 89 d8             	mov    %rbx,%rax
    4eb8:	48 83 c4 18          	add    $0x18,%rsp
    4ebc:	5b                   	pop    %rbx
    4ebd:	41 5c                	pop    %r12
    4ebf:	41 5d                	pop    %r13
    4ec1:	41 5e                	pop    %r14
    4ec3:	41 5f                	pop    %r15
    4ec5:	5d                   	pop    %rbp
    4ec6:	31 ff                	xor    %edi,%edi
    4ec8:	31 d2                	xor    %edx,%edx
    4eca:	31 f6                	xor    %esi,%esi
    4ecc:	c3                   	ret
    4ecd:	e8 0e c2 ff ff       	call   10e0 <__stack_chk_fail@plt>
    4ed2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    4ed9:	1f 84 00 00 00 00 00 

0000000000004ee0 <create_field_split_tokens>:
    4ee0:	55                   	push   %rbp
    4ee1:	41 57                	push   %r15
    4ee3:	41 56                	push   %r14
    4ee5:	41 55                	push   %r13
    4ee7:	41 54                	push   %r12
    4ee9:	53                   	push   %rbx
    4eea:	50                   	push   %rax
    4eeb:	48 83 3e 00          	cmpq   $0x0,(%rsi)
    4eef:	74 73                	je     4f64 <create_field_split_tokens+0x84>
    4ef1:	48 89 cb             	mov    %rcx,%rbx
    4ef4:	49 89 d6             	mov    %rdx,%r14
    4ef7:	49 89 f7             	mov    %rsi,%r15
    4efa:	49 89 fc             	mov    %rdi,%r12
    4efd:	49 83 c7 08          	add    $0x8,%r15
    4f01:	bd 01 00 00 00       	mov    $0x1,%ebp
    4f06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    4f0d:	00 00 00 
    4f10:	e8 db 0c 00 00       	call   5bf0 <create_token>
    4f15:	48 85 c0             	test   %rax,%rax
    4f18:	74 5f                	je     4f79 <create_field_split_tokens+0x99>
    4f1a:	49 89 c5             	mov    %rax,%r13
    4f1d:	48 c7 40 28 01 00 00 	movq   $0x1,0x28(%rax)
    4f24:	00 
    4f25:	4c 89 70 38          	mov    %r14,0x38(%rax)
    4f29:	48 8b 03             	mov    (%rbx),%rax
    4f2c:	48 8b 40 30          	mov    0x30(%rax),%rax
    4f30:	49 89 45 30          	mov    %rax,0x30(%r13)
    4f34:	41 80 4d 21 88       	orb    $0x88,0x21(%r13)
    4f39:	49 8b 7f f8          	mov    -0x8(%r15),%rdi
    4f3d:	e8 5e dd ff ff       	call   2ca0 <ft_strdup>
    4f42:	49 89 45 00          	mov    %rax,0x0(%r13)
    4f46:	48 85 c0             	test   %rax,%rax
    4f49:	74 26                	je     4f71 <create_field_split_tokens+0x91>
    4f4b:	4c 89 e7             	mov    %r12,%rdi
    4f4e:	4c 89 ee             	mov    %r13,%rsi
    4f51:	e8 5a 0c 00 00       	call   5bb0 <add_token>
    4f56:	85 c0                	test   %eax,%eax
    4f58:	75 0e                	jne    4f68 <create_field_split_tokens+0x88>
    4f5a:	49 83 3f 00          	cmpq   $0x0,(%r15)
    4f5e:	4d 8d 7f 08          	lea    0x8(%r15),%r15
    4f62:	75 ac                	jne    4f10 <create_field_split_tokens+0x30>
    4f64:	31 ed                	xor    %ebp,%ebp
    4f66:	eb 11                	jmp    4f79 <create_field_split_tokens+0x99>
    4f68:	49 8b 7d 00          	mov    0x0(%r13),%rdi
    4f6c:	e8 cf c0 ff ff       	call   1040 <free@plt>
    4f71:	4c 89 ef             	mov    %r13,%rdi
    4f74:	e8 c7 c0 ff ff       	call   1040 <free@plt>
    4f79:	89 e8                	mov    %ebp,%eax
    4f7b:	48 83 c4 08          	add    $0x8,%rsp
    4f7f:	5b                   	pop    %rbx
    4f80:	41 5c                	pop    %r12
    4f82:	41 5d                	pop    %r13
    4f84:	41 5e                	pop    %r14
    4f86:	41 5f                	pop    %r15
    4f88:	5d                   	pop    %rbp
    4f89:	31 c9                	xor    %ecx,%ecx
    4f8b:	31 ff                	xor    %edi,%edi
    4f8d:	31 d2                	xor    %edx,%edx
    4f8f:	31 f6                	xor    %esi,%esi
    4f91:	c3                   	ret
    4f92:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    4f99:	1f 84 00 00 00 00 00 

0000000000004fa0 <insert_field_split_tokens>:
    4fa0:	55                   	push   %rbp
    4fa1:	41 57                	push   %r15
    4fa3:	41 56                	push   %r14
    4fa5:	41 55                	push   %r13
    4fa7:	41 54                	push   %r12
    4fa9:	53                   	push   %rbx
    4faa:	50                   	push   %rax
    4fab:	49 89 ff             	mov    %rdi,%r15
    4fae:	48 8b 3f             	mov    (%rdi),%rdi
    4fb1:	31 db                	xor    %ebx,%ebx
    4fb3:	48 85 ff             	test   %rdi,%rdi
    4fb6:	0f 84 ca 00 00 00    	je     5086 <insert_field_split_tokens+0xe6>
    4fbc:	49 89 d6             	mov    %rdx,%r14
    4fbf:	48 8b 02             	mov    (%rdx),%rax
    4fc2:	4c 8b 68 08          	mov    0x8(%rax),%r13
    4fc6:	48 8b 06             	mov    (%rsi),%rax
    4fc9:	48 8b 50 30          	mov    0x30(%rax),%rdx
    4fcd:	49 89 c8             	mov    %rcx,%r8
    4fd0:	49 c1 e0 05          	shl    $0x5,%r8
    4fd4:	42 83 7c 02 18 00    	cmpl   $0x0,0x18(%rdx,%r8,1)
    4fda:	0f 84 90 00 00 00    	je     5070 <insert_field_split_tokens+0xd0>
    4fe0:	48 8d 51 01          	lea    0x1(%rcx),%rdx
    4fe4:	48 3b 50 28          	cmp    0x28(%rax),%rdx
    4fe8:	0f 83 82 00 00 00    	jae    5070 <insert_field_split_tokens+0xd0>
    4fee:	48 8b 07             	mov    (%rdi),%rax
    4ff1:	48 8b 00             	mov    (%rax),%rax
    4ff4:	80 38 00             	cmpb   $0x0,(%rax)
    4ff7:	74 77                	je     5070 <insert_field_split_tokens+0xd0>
    4ff9:	48 89 f5             	mov    %rsi,%rbp
    4ffc:	48 89 0c 24          	mov    %rcx,(%rsp)
    5000:	e8 eb 0b 00 00       	call   5bf0 <create_token>
    5005:	48 85 c0             	test   %rax,%rax
    5008:	74 5c                	je     5066 <insert_field_split_tokens+0xc6>
    500a:	49 89 c4             	mov    %rax,%r12
    500d:	48 c7 40 28 01 00 00 	movq   $0x1,0x28(%rax)
    5014:	00 
    5015:	48 8b 45 00          	mov    0x0(%rbp),%rax
    5019:	48 8b 40 30          	mov    0x30(%rax),%rax
    501d:	49 89 44 24 30       	mov    %rax,0x30(%r12)
    5022:	41 80 4c 24 21 88    	orb    $0x88,0x21(%r12)
    5028:	48 8b 04 24          	mov    (%rsp),%rax
    502c:	49 89 44 24 38       	mov    %rax,0x38(%r12)
    5031:	48 8d 3d 04 32 00 00 	lea    0x3204(%rip),%rdi        # 823c <_IO_stdin_used+0x23c>
    5038:	e8 63 dc ff ff       	call   2ca0 <ft_strdup>
    503d:	49 89 04 24          	mov    %rax,(%r12)
    5041:	48 85 c0             	test   %rax,%rax
    5044:	74 18                	je     505e <insert_field_split_tokens+0xbe>
    5046:	4c 89 ff             	mov    %r15,%rdi
    5049:	4c 89 e6             	mov    %r12,%rsi
    504c:	e8 5f 0b 00 00       	call   5bb0 <add_token>
    5051:	85 c0                	test   %eax,%eax
    5053:	74 18                	je     506d <insert_field_split_tokens+0xcd>
    5055:	49 8b 3c 24          	mov    (%r12),%rdi
    5059:	e8 e2 bf ff ff       	call   1040 <free@plt>
    505e:	4c 89 e7             	mov    %r12,%rdi
    5061:	e8 da bf ff ff       	call   1040 <free@plt>
    5066:	bb 01 00 00 00       	mov    $0x1,%ebx
    506b:	eb 19                	jmp    5086 <insert_field_split_tokens+0xe6>
    506d:	49 8b 3f             	mov    (%r15),%rdi
    5070:	e8 6b 15 00 00       	call   65e0 <ft_lstlast>
    5075:	49 8b 0f             	mov    (%r15),%rcx
    5078:	49 8b 16             	mov    (%r14),%rdx
    507b:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
    507f:	4c 89 68 08          	mov    %r13,0x8(%rax)
    5083:	49 89 06             	mov    %rax,(%r14)
    5086:	89 d8                	mov    %ebx,%eax
    5088:	48 83 c4 08          	add    $0x8,%rsp
    508c:	5b                   	pop    %rbx
    508d:	41 5c                	pop    %r12
    508f:	41 5d                	pop    %r13
    5091:	41 5e                	pop    %r14
    5093:	41 5f                	pop    %r15
    5095:	5d                   	pop    %rbp
    5096:	31 c9                	xor    %ecx,%ecx
    5098:	31 ff                	xor    %edi,%edi
    509a:	31 d2                	xor    %edx,%edx
    509c:	31 f6                	xor    %esi,%esi
    509e:	45 31 c0             	xor    %r8d,%r8d
    50a1:	c3                   	ret
    50a2:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    50a9:	1f 84 00 00 00 00 00 

00000000000050b0 <field_split>:
    50b0:	55                   	push   %rbp
    50b1:	41 57                	push   %r15
    50b3:	41 56                	push   %r14
    50b5:	41 55                	push   %r13
    50b7:	41 54                	push   %r12
    50b9:	53                   	push   %rbx
    50ba:	48 83 ec 28          	sub    $0x28,%rsp
    50be:	4d 89 c6             	mov    %r8,%r14
    50c1:	49 89 cf             	mov    %rcx,%r15
    50c4:	49 89 d4             	mov    %rdx,%r12
    50c7:	48 89 f7             	mov    %rsi,%rdi
    50ca:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    50d1:	00 00 
    50d3:	48 89 44 24 20       	mov    %rax,0x20(%rsp)
    50d8:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    50df:	00 00 
    50e1:	48 8d 35 52 31 00 00 	lea    0x3152(%rip),%rsi        # 823a <_IO_stdin_used+0x23a>
    50e8:	e8 e3 d6 ff ff       	call   27d0 <ft_split_dels>
    50ed:	bb 01 00 00 00       	mov    $0x1,%ebx
    50f2:	48 85 c0             	test   %rax,%rax
    50f5:	0f 84 cb 01 00 00    	je     52c6 <field_split+0x216>
    50fb:	48 8b 30             	mov    (%rax),%rsi
    50fe:	48 85 f6             	test   %rsi,%rsi
    5101:	74 18                	je     511b <field_split+0x6b>
    5103:	48 83 78 08 00       	cmpq   $0x0,0x8(%rax)
    5108:	0f 84 c7 00 00 00    	je     51d5 <field_split+0x125>
    510e:	49 89 c5             	mov    %rax,%r13
    5111:	4d 85 f6             	test   %r14,%r14
    5114:	75 47                	jne    515d <field_split+0xad>
    5116:	e9 3a 01 00 00       	jmp    5255 <field_split+0x1a5>
    511b:	48 89 c7             	mov    %rax,%rdi
    511e:	e8 1d bf ff ff       	call   1040 <free@plt>
    5123:	bf 10 00 00 00       	mov    $0x10,%edi
    5128:	e8 63 c0 ff ff       	call   1190 <malloc@plt>
    512d:	49 89 c5             	mov    %rax,%r13
    5130:	48 8d 3d 05 31 00 00 	lea    0x3105(%rip),%rdi        # 823c <_IO_stdin_used+0x23c>
    5137:	e8 64 db ff ff       	call   2ca0 <ft_strdup>
    513c:	49 89 45 00          	mov    %rax,0x0(%r13)
    5140:	48 85 c0             	test   %rax,%rax
    5143:	0f 84 75 01 00 00    	je     52be <field_split+0x20e>
    5149:	48 89 c6             	mov    %rax,%rsi
    514c:	49 c7 45 08 00 00 00 	movq   $0x0,0x8(%r13)
    5153:	00 
    5154:	4d 85 f6             	test   %r14,%r14
    5157:	0f 84 f8 00 00 00    	je     5255 <field_split+0x1a5>
    515d:	49 8b 04 24          	mov    (%r12),%rax
    5161:	48 8b 40 30          	mov    0x30(%rax),%rax
    5165:	4c 89 f1             	mov    %r14,%rcx
    5168:	48 c1 e1 05          	shl    $0x5,%rcx
    516c:	83 7c 08 14 00       	cmpl   $0x0,0x14(%rax,%rcx,1)
    5171:	0f 84 de 00 00 00    	je     5255 <field_split+0x1a5>
    5177:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    517c:	4c 89 ee             	mov    %r13,%rsi
    517f:	4c 89 f2             	mov    %r14,%rdx
    5182:	4c 89 e1             	mov    %r12,%rcx
    5185:	e8 56 fd ff ff       	call   4ee0 <create_field_split_tokens>
    518a:	85 c0                	test   %eax,%eax
    518c:	0f 85 11 01 00 00    	jne    52a3 <field_split+0x1f3>
    5192:	4c 89 ef             	mov    %r13,%rdi
    5195:	e8 a6 cd ff ff       	call   1f40 <free_split>
    519a:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    519f:	4c 89 e6             	mov    %r12,%rsi
    51a2:	4c 89 fa             	mov    %r15,%rdx
    51a5:	4c 89 f1             	mov    %r14,%rcx
    51a8:	e8 f3 fd ff ff       	call   4fa0 <insert_field_split_tokens>
    51ad:	85 c0                	test   %eax,%eax
    51af:	0f 84 3d 01 00 00    	je     52f2 <field_split+0x242>
    51b5:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    51ba:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    51bf:	48 8d 35 7a f8 ff ff 	lea    -0x786(%rip),%rsi        # 4a40 <del_token>
    51c6:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    51cb:	e8 50 13 00 00       	call   6520 <ft_lstclear>
    51d0:	e9 f1 00 00 00       	jmp    52c6 <field_split+0x216>
    51d5:	49 8b 0c 24          	mov    (%r12),%rcx
    51d9:	48 8b 51 30          	mov    0x30(%rcx),%rdx
    51dd:	4c 89 f7             	mov    %r14,%rdi
    51e0:	48 c1 e7 05          	shl    $0x5,%rdi
    51e4:	83 7c 3a 18 00       	cmpl   $0x0,0x18(%rdx,%rdi,1)
    51e9:	0f 84 1f ff ff ff    	je     510e <field_split+0x5e>
    51ef:	49 8d 56 01          	lea    0x1(%r14),%rdx
    51f3:	48 3b 51 28          	cmp    0x28(%rcx),%rdx
    51f7:	0f 83 11 ff ff ff    	jae    510e <field_split+0x5e>
    51fd:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5202:	48 89 f5             	mov    %rsi,%rbp
    5205:	bf 18 00 00 00       	mov    $0x18,%edi
    520a:	e8 81 bf ff ff       	call   1190 <malloc@plt>
    520f:	48 85 c0             	test   %rax,%rax
    5212:	0f 84 de 00 00 00    	je     52f6 <field_split+0x246>
    5218:	49 89 c5             	mov    %rax,%r13
    521b:	48 89 28             	mov    %rbp,(%rax)
    521e:	48 8d 3d 17 30 00 00 	lea    0x3017(%rip),%rdi        # 823c <_IO_stdin_used+0x23c>
    5225:	e8 76 da ff ff       	call   2ca0 <ft_strdup>
    522a:	49 89 45 08          	mov    %rax,0x8(%r13)
    522e:	48 85 c0             	test   %rax,%rax
    5231:	0f 84 cb 00 00 00    	je     5302 <field_split+0x252>
    5237:	49 c7 45 10 00 00 00 	movq   $0x0,0x10(%r13)
    523e:	00 
    523f:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    5244:	e8 f7 bd ff ff       	call   1040 <free@plt>
    5249:	48 89 ee             	mov    %rbp,%rsi
    524c:	4d 85 f6             	test   %r14,%r14
    524f:	0f 85 08 ff ff ff    	jne    515d <field_split+0xad>
    5255:	4c 89 fb             	mov    %r15,%rbx
    5258:	4d 8b 3f             	mov    (%r15),%r15
    525b:	49 8b 07             	mov    (%r15),%rax
    525e:	48 8b 38             	mov    (%rax),%rdi
    5261:	e8 8a da ff ff       	call   2cf0 <ft_strjoin>
    5266:	48 89 c5             	mov    %rax,%rbp
    5269:	49 8b 07             	mov    (%r15),%rax
    526c:	48 8b 38             	mov    (%rax),%rdi
    526f:	e8 cc bd ff ff       	call   1040 <free@plt>
    5274:	48 85 ed             	test   %rbp,%rbp
    5277:	74 06                	je     527f <field_split+0x1cf>
    5279:	49 8b 07             	mov    (%r15),%rax
    527c:	48 89 28             	mov    %rbp,(%rax)
    527f:	49 8d 75 08          	lea    0x8(%r13),%rsi
    5283:	48 8d 7c 24 10       	lea    0x10(%rsp),%rdi
    5288:	4c 89 f2             	mov    %r14,%rdx
    528b:	4c 89 e1             	mov    %r12,%rcx
    528e:	e8 4d fc ff ff       	call   4ee0 <create_field_split_tokens>
    5293:	85 c0                	test   %eax,%eax
    5295:	49 89 df             	mov    %rbx,%r15
    5298:	bb 01 00 00 00       	mov    $0x1,%ebx
    529d:	0f 84 ef fe ff ff    	je     5192 <field_split+0xe2>
    52a3:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    52a8:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    52ad:	48 8d 35 8c f7 ff ff 	lea    -0x874(%rip),%rsi        # 4a40 <del_token>
    52b4:	48 8d 7c 24 18       	lea    0x18(%rsp),%rdi
    52b9:	e8 62 12 00 00       	call   6520 <ft_lstclear>
    52be:	4c 89 ef             	mov    %r13,%rdi
    52c1:	e8 7a cc ff ff       	call   1f40 <free_split>
    52c6:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    52cd:	00 00 
    52cf:	48 3b 44 24 20       	cmp    0x20(%rsp),%rax
    52d4:	75 33                	jne    5309 <field_split+0x259>
    52d6:	89 d8                	mov    %ebx,%eax
    52d8:	48 83 c4 28          	add    $0x28,%rsp
    52dc:	5b                   	pop    %rbx
    52dd:	41 5c                	pop    %r12
    52df:	41 5d                	pop    %r13
    52e1:	41 5e                	pop    %r14
    52e3:	41 5f                	pop    %r15
    52e5:	5d                   	pop    %rbp
    52e6:	31 c9                	xor    %ecx,%ecx
    52e8:	31 ff                	xor    %edi,%edi
    52ea:	31 d2                	xor    %edx,%edx
    52ec:	31 f6                	xor    %esi,%esi
    52ee:	45 31 c0             	xor    %r8d,%r8d
    52f1:	c3                   	ret
    52f2:	31 db                	xor    %ebx,%ebx
    52f4:	eb d0                	jmp    52c6 <field_split+0x216>
    52f6:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    52fb:	e8 40 bd ff ff       	call   1040 <free@plt>
    5300:	eb c4                	jmp    52c6 <field_split+0x216>
    5302:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    5307:	eb b8                	jmp    52c1 <field_split+0x211>
    5309:	e8 d2 bd ff ff       	call   10e0 <__stack_chk_fail@plt>
    530e:	66 90                	xchg   %ax,%ax

0000000000005310 <expand_unquoted_fragment>:
    5310:	55                   	push   %rbp
    5311:	41 57                	push   %r15
    5313:	41 56                	push   %r14
    5315:	41 55                	push   %r13
    5317:	41 54                	push   %r12
    5319:	53                   	push   %rbx
    531a:	48 83 ec 18          	sub    $0x18,%rsp
    531e:	4c 89 c3             	mov    %r8,%rbx
    5321:	49 89 ce             	mov    %rcx,%r14
    5324:	48 89 14 24          	mov    %rdx,(%rsp)
    5328:	49 89 f4             	mov    %rsi,%r12
    532b:	49 89 fd             	mov    %rdi,%r13
    532e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5335:	00 00 
    5337:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    533c:	4c 8b 3e             	mov    (%rsi),%r15
    533f:	48 8d 3d f6 2e 00 00 	lea    0x2ef6(%rip),%rdi        # 823c <_IO_stdin_used+0x23c>
    5346:	e8 55 d9 ff ff       	call   2ca0 <ft_strdup>
    534b:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5350:	bd 01 00 00 00       	mov    $0x1,%ebp
    5355:	48 85 c0             	test   %rax,%rax
    5358:	0f 84 04 01 00 00    	je     5462 <expand_unquoted_fragment+0x152>
    535e:	48 8d 74 24 08       	lea    0x8(%rsp),%rsi
    5363:	4c 89 ef             	mov    %r13,%rdi
    5366:	48 89 da             	mov    %rbx,%rdx
    5369:	e8 42 fa ff ff       	call   4db0 <create_expanded_fragment>
    536e:	48 85 c0             	test   %rax,%rax
    5371:	0f 84 eb 00 00 00    	je     5462 <expand_unquoted_fragment+0x152>
    5377:	48 89 c3             	mov    %rax,%rbx
    537a:	48 89 c7             	mov    %rax,%rdi
    537d:	be 20 00 00 00       	mov    $0x20,%esi
    5382:	e8 d9 d8 ff ff       	call   2c60 <ft_strchr>
    5387:	48 85 c0             	test   %rax,%rax
    538a:	75 16                	jne    53a2 <expand_unquoted_fragment+0x92>
    538c:	48 89 df             	mov    %rbx,%rdi
    538f:	be 09 00 00 00       	mov    $0x9,%esi
    5394:	e8 c7 d8 ff ff       	call   2c60 <ft_strchr>
    5399:	48 85 c0             	test   %rax,%rax
    539c:	0f 84 88 00 00 00    	je     542a <expand_unquoted_fragment+0x11a>
    53a2:	0f be 33             	movsbl (%rbx),%esi
    53a5:	48 8d 3d 8e 2e 00 00 	lea    0x2e8e(%rip),%rdi        # 823a <_IO_stdin_used+0x23a>
    53ac:	e8 af d8 ff ff       	call   2c60 <ft_strchr>
    53b1:	31 c9                	xor    %ecx,%ecx
    53b3:	48 85 c0             	test   %rax,%rax
    53b6:	0f 95 c1             	setne  %cl
    53b9:	49 8b 47 30          	mov    0x30(%r15),%rax
    53bd:	4d 89 f5             	mov    %r14,%r13
    53c0:	49 c1 e5 05          	shl    $0x5,%r13
    53c4:	42 89 4c 28 14       	mov    %ecx,0x14(%rax,%r13,1)
    53c9:	80 3b 00             	cmpb   $0x0,(%rbx)
    53cc:	74 27                	je     53f5 <expand_unquoted_fragment+0xe5>
    53ce:	48 89 df             	mov    %rbx,%rdi
    53d1:	e8 3a da ff ff       	call   2e10 <ft_strlen>
    53d6:	0f be 74 03 ff       	movsbl -0x1(%rbx,%rax,1),%esi
    53db:	48 8d 3d 58 2e 00 00 	lea    0x2e58(%rip),%rdi        # 823a <_IO_stdin_used+0x23a>
    53e2:	e8 79 d8 ff ff       	call   2c60 <ft_strchr>
    53e7:	31 c9                	xor    %ecx,%ecx
    53e9:	48 85 c0             	test   %rax,%rax
    53ec:	0f 95 c1             	setne  %cl
    53ef:	49 8b 47 30          	mov    0x30(%r15),%rax
    53f3:	eb 02                	jmp    53f7 <expand_unquoted_fragment+0xe7>
    53f5:	31 c9                	xor    %ecx,%ecx
    53f7:	42 89 4c 28 18       	mov    %ecx,0x18(%rax,%r13,1)
    53fc:	48 89 de             	mov    %rbx,%rsi
    53ff:	4c 89 e2             	mov    %r12,%rdx
    5402:	48 8b 0c 24          	mov    (%rsp),%rcx
    5406:	4d 89 f0             	mov    %r14,%r8
    5409:	e8 a2 fc ff ff       	call   50b0 <field_split>
    540e:	89 c5                	mov    %eax,%ebp
    5410:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5417:	00 00 
    5419:	48 3b 44 24 10       	cmp    0x10(%rsp),%rax
    541e:	75 6e                	jne    548e <expand_unquoted_fragment+0x17e>
    5420:	48 89 df             	mov    %rbx,%rdi
    5423:	e8 18 bc ff ff       	call   1040 <free@plt>
    5428:	eb 48                	jmp    5472 <expand_unquoted_fragment+0x162>
    542a:	48 8b 04 24          	mov    (%rsp),%rax
    542e:	4c 8b 38             	mov    (%rax),%r15
    5431:	49 8b 07             	mov    (%r15),%rax
    5434:	48 8b 38             	mov    (%rax),%rdi
    5437:	48 89 de             	mov    %rbx,%rsi
    543a:	e8 b1 d8 ff ff       	call   2cf0 <ft_strjoin>
    543f:	49 89 c6             	mov    %rax,%r14
    5442:	49 8b 07             	mov    (%r15),%rax
    5445:	48 8b 38             	mov    (%rax),%rdi
    5448:	e8 f3 bb ff ff       	call   1040 <free@plt>
    544d:	48 89 df             	mov    %rbx,%rdi
    5450:	e8 eb bb ff ff       	call   1040 <free@plt>
    5455:	31 ed                	xor    %ebp,%ebp
    5457:	4d 85 f6             	test   %r14,%r14
    545a:	74 06                	je     5462 <expand_unquoted_fragment+0x152>
    545c:	49 8b 07             	mov    (%r15),%rax
    545f:	4c 89 30             	mov    %r14,(%rax)
    5462:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5469:	00 00 
    546b:	48 3b 44 24 10       	cmp    0x10(%rsp),%rax
    5470:	75 1c                	jne    548e <expand_unquoted_fragment+0x17e>
    5472:	89 e8                	mov    %ebp,%eax
    5474:	48 83 c4 18          	add    $0x18,%rsp
    5478:	5b                   	pop    %rbx
    5479:	41 5c                	pop    %r12
    547b:	41 5d                	pop    %r13
    547d:	41 5e                	pop    %r14
    547f:	41 5f                	pop    %r15
    5481:	5d                   	pop    %rbp
    5482:	31 c9                	xor    %ecx,%ecx
    5484:	31 ff                	xor    %edi,%edi
    5486:	31 d2                	xor    %edx,%edx
    5488:	31 f6                	xor    %esi,%esi
    548a:	45 31 c0             	xor    %r8d,%r8d
    548d:	c3                   	ret
    548e:	e8 4d bc ff ff       	call   10e0 <__stack_chk_fail@plt>
    5493:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    549a:	84 00 00 00 00 00 

00000000000054a0 <expand_single_quoted_fragment>:
    54a0:	41 56                	push   %r14
    54a2:	53                   	push   %rbx
    54a3:	50                   	push   %rax
    54a4:	48 89 f3             	mov    %rsi,%rbx
    54a7:	48 89 fe             	mov    %rdi,%rsi
    54aa:	48 8b 03             	mov    (%rbx),%rax
    54ad:	48 8b 38             	mov    (%rax),%rdi
    54b0:	e8 3b d8 ff ff       	call   2cf0 <ft_strjoin>
    54b5:	48 85 c0             	test   %rax,%rax
    54b8:	74 18                	je     54d2 <expand_single_quoted_fragment+0x32>
    54ba:	49 89 c6             	mov    %rax,%r14
    54bd:	48 8b 03             	mov    (%rbx),%rax
    54c0:	48 8b 38             	mov    (%rax),%rdi
    54c3:	e8 78 bb ff ff       	call   1040 <free@plt>
    54c8:	48 8b 03             	mov    (%rbx),%rax
    54cb:	4c 89 30             	mov    %r14,(%rax)
    54ce:	31 c0                	xor    %eax,%eax
    54d0:	eb 05                	jmp    54d7 <expand_single_quoted_fragment+0x37>
    54d2:	b8 01 00 00 00       	mov    $0x1,%eax
    54d7:	48 83 c4 08          	add    $0x8,%rsp
    54db:	5b                   	pop    %rbx
    54dc:	41 5e                	pop    %r14
    54de:	31 ff                	xor    %edi,%edi
    54e0:	31 f6                	xor    %esi,%esi
    54e2:	c3                   	ret
    54e3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    54ea:	84 00 00 00 00 00 

00000000000054f0 <expand_fragment>:
    54f0:	55                   	push   %rbp
    54f1:	41 57                	push   %r15
    54f3:	41 56                	push   %r14
    54f5:	41 55                	push   %r13
    54f7:	41 54                	push   %r12
    54f9:	53                   	push   %rbx
    54fa:	50                   	push   %rax
    54fb:	4c 89 04 24          	mov    %r8,(%rsp)
    54ff:	49 89 ce             	mov    %rcx,%r14
    5502:	49 89 d7             	mov    %rdx,%r15
    5505:	49 89 f5             	mov    %rsi,%r13
    5508:	48 8b 2e             	mov    (%rsi),%rbp
    550b:	48 8b 45 30          	mov    0x30(%rbp),%rax
    550f:	49 89 cc             	mov    %rcx,%r12
    5512:	49 c1 e4 05          	shl    $0x5,%r12
    5516:	4a 8b 34 20          	mov    (%rax,%r12,1),%rsi
    551a:	4a 8b 54 20 08       	mov    0x8(%rax,%r12,1),%rdx
    551f:	48 29 f2             	sub    %rsi,%rdx
    5522:	48 ff c2             	inc    %rdx
    5525:	e8 b6 da ff ff       	call   2fe0 <ft_substr>
    552a:	48 85 c0             	test   %rax,%rax
    552d:	74 4e                	je     557d <expand_fragment+0x8d>
    552f:	48 89 c3             	mov    %rax,%rbx
    5532:	48 8b 45 30          	mov    0x30(%rbp),%rax
    5536:	42 8b 44 20 10       	mov    0x10(%rax,%r12,1),%eax
    553b:	83 f8 03             	cmp    $0x3,%eax
    553e:	74 55                	je     5595 <expand_fragment+0xa5>
    5540:	83 f8 02             	cmp    $0x2,%eax
    5543:	74 3f                	je     5584 <expand_fragment+0x94>
    5545:	bd 01 00 00 00       	mov    $0x1,%ebp
    554a:	83 f8 01             	cmp    $0x1,%eax
    554d:	75 5d                	jne    55ac <expand_fragment+0xbc>
    554f:	4d 8b 3f             	mov    (%r15),%r15
    5552:	49 8b 07             	mov    (%r15),%rax
    5555:	48 8b 38             	mov    (%rax),%rdi
    5558:	48 89 de             	mov    %rbx,%rsi
    555b:	e8 90 d7 ff ff       	call   2cf0 <ft_strjoin>
    5560:	48 85 c0             	test   %rax,%rax
    5563:	74 47                	je     55ac <expand_fragment+0xbc>
    5565:	49 89 c6             	mov    %rax,%r14
    5568:	49 8b 07             	mov    (%r15),%rax
    556b:	48 8b 38             	mov    (%rax),%rdi
    556e:	e8 cd ba ff ff       	call   1040 <free@plt>
    5573:	49 8b 07             	mov    (%r15),%rax
    5576:	4c 89 30             	mov    %r14,(%rax)
    5579:	31 ed                	xor    %ebp,%ebp
    557b:	eb 2f                	jmp    55ac <expand_fragment+0xbc>
    557d:	bd 01 00 00 00       	mov    $0x1,%ebp
    5582:	eb 30                	jmp    55b4 <expand_fragment+0xc4>
    5584:	49 8b 37             	mov    (%r15),%rsi
    5587:	48 89 df             	mov    %rbx,%rdi
    558a:	48 8b 14 24          	mov    (%rsp),%rdx
    558e:	e8 bd f6 ff ff       	call   4c50 <expand_double_quoted_fragment>
    5593:	eb 15                	jmp    55aa <expand_fragment+0xba>
    5595:	48 89 df             	mov    %rbx,%rdi
    5598:	4c 89 ee             	mov    %r13,%rsi
    559b:	4c 89 fa             	mov    %r15,%rdx
    559e:	4c 89 f1             	mov    %r14,%rcx
    55a1:	4c 8b 04 24          	mov    (%rsp),%r8
    55a5:	e8 66 fd ff ff       	call   5310 <expand_unquoted_fragment>
    55aa:	89 c5                	mov    %eax,%ebp
    55ac:	48 89 df             	mov    %rbx,%rdi
    55af:	e8 8c ba ff ff       	call   1040 <free@plt>
    55b4:	89 e8                	mov    %ebp,%eax
    55b6:	48 83 c4 08          	add    $0x8,%rsp
    55ba:	5b                   	pop    %rbx
    55bb:	41 5c                	pop    %r12
    55bd:	41 5d                	pop    %r13
    55bf:	41 5e                	pop    %r14
    55c1:	41 5f                	pop    %r15
    55c3:	5d                   	pop    %rbp
    55c4:	31 c9                	xor    %ecx,%ecx
    55c6:	31 ff                	xor    %edi,%edi
    55c8:	31 d2                	xor    %edx,%edx
    55ca:	31 f6                	xor    %esi,%esi
    55cc:	45 31 c0             	xor    %r8d,%r8d
    55cf:	c3                   	ret

00000000000055d0 <expand_word>:
    55d0:	55                   	push   %rbp
    55d1:	41 57                	push   %r15
    55d3:	41 56                	push   %r14
    55d5:	41 55                	push   %r13
    55d7:	41 54                	push   %r12
    55d9:	53                   	push   %rbx
    55da:	48 83 ec 18          	sub    $0x18,%rsp
    55de:	49 89 d6             	mov    %rdx,%r14
    55e1:	49 89 f7             	mov    %rsi,%r15
    55e4:	49 89 fc             	mov    %rdi,%r12
    55e7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    55ee:	00 00 
    55f0:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    55f5:	48 89 74 24 08       	mov    %rsi,0x8(%rsp)
    55fa:	48 8b 06             	mov    (%rsi),%rax
    55fd:	48 8b 38             	mov    (%rax),%rdi
    5600:	e8 3b ba ff ff       	call   1040 <free@plt>
    5605:	48 8d 3d 30 2c 00 00 	lea    0x2c30(%rip),%rdi        # 823c <_IO_stdin_used+0x23c>
    560c:	e8 8f d6 ff ff       	call   2ca0 <ft_strdup>
    5611:	49 8b 0f             	mov    (%r15),%rcx
    5614:	48 89 01             	mov    %rax,(%rcx)
    5617:	48 85 c0             	test   %rax,%rax
    561a:	74 5b                	je     5677 <expand_word+0xa7>
    561c:	31 f6                	xor    %esi,%esi
    561e:	48 83 79 28 00       	cmpq   $0x0,0x28(%rcx)
    5623:	74 6c                	je     5691 <expand_word+0xc1>
    5625:	bb 10 00 00 00       	mov    $0x10,%ebx
    562a:	45 31 ed             	xor    %r13d,%r13d
    562d:	48 8d 6c 24 08       	lea    0x8(%rsp),%rbp
    5632:	eb 1c                	jmp    5650 <expand_word+0x80>
    5634:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    563b:	00 00 00 00 00 
    5640:	49 ff c5             	inc    %r13
    5643:	48 8b 51 28          	mov    0x28(%rcx),%rdx
    5647:	48 83 c3 20          	add    $0x20,%rbx
    564b:	49 39 d5             	cmp    %rdx,%r13
    564e:	73 2e                	jae    567e <expand_word+0xae>
    5650:	48 8b 41 30          	mov    0x30(%rcx),%rax
    5654:	83 3c 18 04          	cmpl   $0x4,(%rax,%rbx,1)
    5658:	74 e6                	je     5640 <expand_word+0x70>
    565a:	4c 89 e7             	mov    %r12,%rdi
    565d:	4c 89 fe             	mov    %r15,%rsi
    5660:	48 89 ea             	mov    %rbp,%rdx
    5663:	4c 89 e9             	mov    %r13,%rcx
    5666:	4d 89 f0             	mov    %r14,%r8
    5669:	e8 82 fe ff ff       	call   54f0 <expand_fragment>
    566e:	85 c0                	test   %eax,%eax
    5670:	75 05                	jne    5677 <expand_word+0xa7>
    5672:	49 8b 0f             	mov    (%r15),%rcx
    5675:	eb c9                	jmp    5640 <expand_word+0x70>
    5677:	be 01 00 00 00       	mov    $0x1,%esi
    567c:	eb 35                	jmp    56b3 <expand_word+0xe3>
    567e:	48 8b 01             	mov    (%rcx),%rax
    5681:	48 83 fa 01          	cmp    $0x1,%rdx
    5685:	0f 94 c2             	sete   %dl
    5688:	31 f6                	xor    %esi,%esi
    568a:	80 38 00             	cmpb   $0x0,(%rax)
    568d:	75 24                	jne    56b3 <expand_word+0xe3>
    568f:	eb 07                	jmp    5698 <expand_word+0xc8>
    5691:	31 d2                	xor    %edx,%edx
    5693:	80 38 00             	cmpb   $0x0,(%rax)
    5696:	75 1b                	jne    56b3 <expand_word+0xe3>
    5698:	48 8b 41 30          	mov    0x30(%rcx),%rax
    569c:	48 85 c0             	test   %rax,%rax
    569f:	74 12                	je     56b3 <expand_word+0xe3>
    56a1:	83 78 10 03          	cmpl   $0x3,0x10(%rax)
    56a5:	0f 95 c0             	setne  %al
    56a8:	80 f2 01             	xor    $0x1,%dl
    56ab:	08 c2                	or     %al,%dl
    56ad:	75 04                	jne    56b3 <expand_word+0xe3>
    56af:	80 49 21 40          	orb    $0x40,0x21(%rcx)
    56b3:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    56ba:	00 00 
    56bc:	48 3b 44 24 10       	cmp    0x10(%rsp),%rax
    56c1:	75 1c                	jne    56df <expand_word+0x10f>
    56c3:	89 f0                	mov    %esi,%eax
    56c5:	48 83 c4 18          	add    $0x18,%rsp
    56c9:	5b                   	pop    %rbx
    56ca:	41 5c                	pop    %r12
    56cc:	41 5d                	pop    %r13
    56ce:	41 5e                	pop    %r14
    56d0:	41 5f                	pop    %r15
    56d2:	5d                   	pop    %rbp
    56d3:	31 c9                	xor    %ecx,%ecx
    56d5:	31 ff                	xor    %edi,%edi
    56d7:	31 d2                	xor    %edx,%edx
    56d9:	31 f6                	xor    %esi,%esi
    56db:	45 31 c0             	xor    %r8d,%r8d
    56de:	c3                   	ret
    56df:	e8 fc b9 ff ff       	call   10e0 <__stack_chk_fail@plt>
    56e4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    56eb:	00 00 00 00 00 

00000000000056f0 <insert_expanded_filenames>:
    56f0:	41 57                	push   %r15
    56f2:	41 56                	push   %r14
    56f4:	53                   	push   %rbx
    56f5:	48 89 f3             	mov    %rsi,%rbx
    56f8:	49 89 fe             	mov    %rdi,%r14
    56fb:	48 8b 06             	mov    (%rsi),%rax
    56fe:	48 8b 00             	mov    (%rax),%rax
    5701:	48 8b 78 30          	mov    0x30(%rax),%rdi
    5705:	e8 36 b9 ff ff       	call   1040 <free@plt>
    570a:	48 8b 03             	mov    (%rbx),%rax
    570d:	4c 8b 78 08          	mov    0x8(%rax),%r15
    5711:	49 8b 3e             	mov    (%r14),%rdi
    5714:	e8 c7 0e 00 00       	call   65e0 <ft_lstlast>
    5719:	4c 89 78 08          	mov    %r15,0x8(%rax)
    571d:	49 8b 06             	mov    (%r14),%rax
    5720:	48 8b 00             	mov    (%rax),%rax
    5723:	48 8b 0b             	mov    (%rbx),%rcx
    5726:	48 89 01             	mov    %rax,(%rcx)
    5729:	49 8b 06             	mov    (%r14),%rax
    572c:	48 8b 40 08          	mov    0x8(%rax),%rax
    5730:	48 8b 0b             	mov    (%rbx),%rcx
    5733:	48 89 41 08          	mov    %rax,0x8(%rcx)
    5737:	5b                   	pop    %rbx
    5738:	41 5e                	pop    %r14
    573a:	41 5f                	pop    %r15
    573c:	31 c0                	xor    %eax,%eax
    573e:	31 c9                	xor    %ecx,%ecx
    5740:	31 ff                	xor    %edi,%edi
    5742:	31 f6                	xor    %esi,%esi
    5744:	c3                   	ret
    5745:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    574c:	00 00 00 00 

0000000000005750 <expand_filename>:
    5750:	55                   	push   %rbp
    5751:	41 56                	push   %r14
    5753:	53                   	push   %rbx
    5754:	48 83 ec 20          	sub    $0x20,%rsp
    5758:	49 89 f6             	mov    %rsi,%r14
    575b:	48 89 fb             	mov    %rdi,%rbx
    575e:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5765:	00 00 
    5767:	48 89 44 24 18       	mov    %rax,0x18(%rsp)
    576c:	48 c7 44 24 10 00 00 	movq   $0x0,0x10(%rsp)
    5773:	00 00 
    5775:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    577c:	00 00 
    577e:	48 8b 07             	mov    (%rdi),%rax
    5781:	48 8b 00             	mov    (%rax),%rax
    5784:	48 8b 38             	mov    (%rax),%rdi
    5787:	48 8d 74 24 10       	lea    0x10(%rsp),%rsi
    578c:	e8 af 14 00 00       	call   6c40 <expand_star_append>
    5791:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    5796:	48 85 c0             	test   %rax,%rax
    5799:	74 3b                	je     57d6 <expand_filename+0x86>
    579b:	48 8b 0b             	mov    (%rbx),%rcx
    579e:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    57a3:	48 89 c6             	mov    %rax,%rsi
    57a6:	4c 89 f2             	mov    %r14,%rdx
    57a9:	e8 32 f7 ff ff       	call   4ee0 <create_field_split_tokens>
    57ae:	89 c5                	mov    %eax,%ebp
    57b0:	48 8b 7c 24 10       	mov    0x10(%rsp),%rdi
    57b5:	e8 86 c7 ff ff       	call   1f40 <free_split>
    57ba:	85 ed                	test   %ebp,%ebp
    57bc:	74 23                	je     57e1 <expand_filename+0x91>
    57be:	48 8d 35 7b f2 ff ff 	lea    -0xd85(%rip),%rsi        # 4a40 <del_token>
    57c5:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    57ca:	e8 51 0d 00 00       	call   6520 <ft_lstclear>
    57cf:	bb 01 00 00 00       	mov    $0x1,%ebx
    57d4:	eb 4f                	jmp    5825 <expand_filename+0xd5>
    57d6:	31 db                	xor    %ebx,%ebx
    57d8:	31 c0                	xor    %eax,%eax
    57da:	e8 71 00 00 00       	call   5850 <_ZL6printfPKcU17pass_object_size1z>
    57df:	eb 44                	jmp    5825 <expand_filename+0xd5>
    57e1:	48 8b 03             	mov    (%rbx),%rax
    57e4:	48 8b 00             	mov    (%rax),%rax
    57e7:	48 8b 78 30          	mov    0x30(%rax),%rdi
    57eb:	e8 50 b8 ff ff       	call   1040 <free@plt>
    57f0:	48 8b 03             	mov    (%rbx),%rax
    57f3:	4c 8b 70 08          	mov    0x8(%rax),%r14
    57f7:	48 8b 7c 24 08       	mov    0x8(%rsp),%rdi
    57fc:	e8 df 0d 00 00       	call   65e0 <ft_lstlast>
    5801:	4c 89 70 08          	mov    %r14,0x8(%rax)
    5805:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    580a:	48 8b 00             	mov    (%rax),%rax
    580d:	48 8b 0b             	mov    (%rbx),%rcx
    5810:	48 89 01             	mov    %rax,(%rcx)
    5813:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5818:	48 8b 40 08          	mov    0x8(%rax),%rax
    581c:	48 8b 0b             	mov    (%rbx),%rcx
    581f:	48 89 41 08          	mov    %rax,0x8(%rcx)
    5823:	31 db                	xor    %ebx,%ebx
    5825:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    582c:	00 00 
    582e:	48 3b 44 24 18       	cmp    0x18(%rsp),%rax
    5833:	75 13                	jne    5848 <expand_filename+0xf8>
    5835:	89 d8                	mov    %ebx,%eax
    5837:	48 83 c4 20          	add    $0x20,%rsp
    583b:	5b                   	pop    %rbx
    583c:	41 5e                	pop    %r14
    583e:	5d                   	pop    %rbp
    583f:	31 c9                	xor    %ecx,%ecx
    5841:	31 ff                	xor    %edi,%edi
    5843:	31 d2                	xor    %edx,%edx
    5845:	31 f6                	xor    %esi,%esi
    5847:	c3                   	ret
    5848:	e8 93 b8 ff ff       	call   10e0 <__stack_chk_fail@plt>
    584d:	0f 1f 00             	nopl   (%rax)

0000000000005850 <_ZL6printfPKcU17pass_object_size1z>:
    5850:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    5857:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    585c:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    5861:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    5866:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    586b:	84 c0                	test   %al,%al
    586d:	74 31                	je     58a0 <_ZL6printfPKcU17pass_object_size1z+0x50>
    586f:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    5874:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
    5879:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
    587e:	0f 29 5c 24 60       	movaps %xmm3,0x60(%rsp)
    5883:	0f 29 64 24 70       	movaps %xmm4,0x70(%rsp)
    5888:	0f 29 ac 24 80 00 00 	movaps %xmm5,0x80(%rsp)
    588f:	00 
    5890:	0f 29 b4 24 90 00 00 	movaps %xmm6,0x90(%rsp)
    5897:	00 
    5898:	0f 29 bc 24 a0 00 00 	movaps %xmm7,0xa0(%rsp)
    589f:	00 
    58a0:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    58a7:	00 00 
    58a9:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
    58b0:	00 
    58b1:	48 89 e0             	mov    %rsp,%rax
    58b4:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    58bb:	00 
    58bc:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
    58c3:	00 
    58c4:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    58cb:	00 
    58cc:	48 b8 10 00 00 00 30 	movabs $0x3000000010,%rax
    58d3:	00 00 00 
    58d6:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
    58dd:	00 
    58de:	48 8d 35 58 29 00 00 	lea    0x2958(%rip),%rsi        # 823d <_IO_stdin_used+0x23d>
    58e5:	48 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%rdx
    58ec:	00 
    58ed:	bf 01 00 00 00       	mov    $0x1,%edi
    58f2:	e8 69 b7 ff ff       	call   1060 <__vprintf_chk@plt>
    58f7:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    58fe:	00 00 
    5900:	48 3b 84 24 d0 00 00 	cmp    0xd0(%rsp),%rax
    5907:	00 
    5908:	75 18                	jne    5922 <_ZL6printfPKcU17pass_object_size1z+0xd2>
    590a:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    5911:	31 c0                	xor    %eax,%eax
    5913:	31 c9                	xor    %ecx,%ecx
    5915:	31 ff                	xor    %edi,%edi
    5917:	31 d2                	xor    %edx,%edx
    5919:	31 f6                	xor    %esi,%esi
    591b:	45 31 c0             	xor    %r8d,%r8d
    591e:	45 31 c9             	xor    %r9d,%r9d
    5921:	c3                   	ret
    5922:	e8 b9 b7 ff ff       	call   10e0 <__stack_chk_fail@plt>
    5927:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    592e:	00 00 

0000000000005930 <filename_expansion>:
    5930:	41 57                	push   %r15
    5932:	41 56                	push   %r14
    5934:	53                   	push   %rbx
    5935:	48 83 ec 10          	sub    $0x10,%rsp
    5939:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5940:	00 00 
    5942:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    5947:	4c 8b 3f             	mov    (%rdi),%r15
    594a:	4c 89 3c 24          	mov    %r15,(%rsp)
    594e:	31 db                	xor    %ebx,%ebx
    5950:	4d 85 ff             	test   %r15,%r15
    5953:	74 55                	je     59aa <filename_expansion+0x7a>
    5955:	49 89 e6             	mov    %rsp,%r14
    5958:	eb 13                	jmp    596d <filename_expansion+0x3d>
    595a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5960:	4d 8b 7f 08          	mov    0x8(%r15),%r15
    5964:	4c 89 3c 24          	mov    %r15,(%rsp)
    5968:	4d 85 ff             	test   %r15,%r15
    596b:	74 3d                	je     59aa <filename_expansion+0x7a>
    596d:	49 8b 07             	mov    (%r15),%rax
    5970:	f6 40 21 08          	testb  $0x8,0x21(%rax)
    5974:	74 ea                	je     5960 <filename_expansion+0x30>
    5976:	48 8b 48 30          	mov    0x30(%rax),%rcx
    597a:	83 79 10 03          	cmpl   $0x3,0x10(%rcx)
    597e:	75 e0                	jne    5960 <filename_expansion+0x30>
    5980:	48 8b 38             	mov    (%rax),%rdi
    5983:	be 2a 00 00 00       	mov    $0x2a,%esi
    5988:	e8 d3 d2 ff ff       	call   2c60 <ft_strchr>
    598d:	48 85 c0             	test   %rax,%rax
    5990:	74 ce                	je     5960 <filename_expansion+0x30>
    5992:	49 8b 07             	mov    (%r15),%rax
    5995:	48 8b 70 38          	mov    0x38(%rax),%rsi
    5999:	4c 89 f7             	mov    %r14,%rdi
    599c:	e8 af fd ff ff       	call   5750 <expand_filename>
    59a1:	85 c0                	test   %eax,%eax
    59a3:	74 bb                	je     5960 <filename_expansion+0x30>
    59a5:	bb 01 00 00 00       	mov    $0x1,%ebx
    59aa:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    59b1:	00 00 
    59b3:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
    59b8:	75 12                	jne    59cc <filename_expansion+0x9c>
    59ba:	89 d8                	mov    %ebx,%eax
    59bc:	48 83 c4 10          	add    $0x10,%rsp
    59c0:	5b                   	pop    %rbx
    59c1:	41 5e                	pop    %r14
    59c3:	41 5f                	pop    %r15
    59c5:	31 c9                	xor    %ecx,%ecx
    59c7:	31 ff                	xor    %edi,%edi
    59c9:	31 f6                	xor    %esi,%esi
    59cb:	c3                   	ret
    59cc:	e8 0f b7 ff ff       	call   10e0 <__stack_chk_fail@plt>
    59d1:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    59d8:	0f 1f 84 00 00 00 00 
    59df:	00 

00000000000059e0 <expand>:
    59e0:	55                   	push   %rbp
    59e1:	41 57                	push   %r15
    59e3:	41 56                	push   %r14
    59e5:	41 54                	push   %r12
    59e7:	53                   	push   %rbx
    59e8:	4c 8b 27             	mov    (%rdi),%r12
    59eb:	31 db                	xor    %ebx,%ebx
    59ed:	4d 85 e4             	test   %r12,%r12
    59f0:	74 59                	je     5a4b <expand+0x6b>
    59f2:	49 89 d6             	mov    %rdx,%r14
    59f5:	49 89 f7             	mov    %rsi,%r15
    59f8:	bd 00 88 00 00       	mov    $0x8800,%ebp
    59fd:	eb 0b                	jmp    5a0a <expand+0x2a>
    59ff:	90                   	nop
    5a00:	4d 8b 64 24 08       	mov    0x8(%r12),%r12
    5a05:	4d 85 e4             	test   %r12,%r12
    5a08:	74 41                	je     5a4b <expand+0x6b>
    5a0a:	49 8b 04 24          	mov    (%r12),%rax
    5a0e:	8b 40 20             	mov    0x20(%rax),%eax
    5a11:	21 e8                	and    %ebp,%eax
    5a13:	3d 00 08 00 00       	cmp    $0x800,%eax
    5a18:	75 e6                	jne    5a00 <expand+0x20>
    5a1a:	4c 89 ff             	mov    %r15,%rdi
    5a1d:	4c 89 e6             	mov    %r12,%rsi
    5a20:	4c 89 f2             	mov    %r14,%rdx
    5a23:	e8 a8 fb ff ff       	call   55d0 <expand_word>
    5a28:	85 c0                	test   %eax,%eax
    5a2a:	74 d4                	je     5a00 <expand+0x20>
    5a2c:	49 8b 04 24          	mov    (%r12),%rax
    5a30:	48 8b 10             	mov    (%rax),%rdx
    5a33:	48 8d 35 26 28 00 00 	lea    0x2826(%rip),%rsi        # 8260 <_IO_stdin_used+0x260>
    5a3a:	bf 02 00 00 00       	mov    $0x2,%edi
    5a3f:	31 c0                	xor    %eax,%eax
    5a41:	e8 0a ca ff ff       	call   2450 <ft_printf>
    5a46:	bb 01 00 00 00       	mov    $0x1,%ebx
    5a4b:	89 d8                	mov    %ebx,%eax
    5a4d:	5b                   	pop    %rbx
    5a4e:	41 5c                	pop    %r12
    5a50:	41 5e                	pop    %r14
    5a52:	41 5f                	pop    %r15
    5a54:	5d                   	pop    %rbp
    5a55:	31 ff                	xor    %edi,%edi
    5a57:	31 d2                	xor    %edx,%edx
    5a59:	31 f6                	xor    %esi,%esi
    5a5b:	c3                   	ret
    5a5c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000005a60 <create_exec_tree>:
    5a60:	55                   	push   %rbp
    5a61:	41 57                	push   %r15
    5a63:	41 56                	push   %r14
    5a65:	41 55                	push   %r13
    5a67:	41 54                	push   %r12
    5a69:	53                   	push   %rbx
    5a6a:	48 83 ec 18          	sub    $0x18,%rsp
    5a6e:	49 89 ce             	mov    %rcx,%r14
    5a71:	49 89 d7             	mov    %rdx,%r15
    5a74:	49 89 f5             	mov    %rsi,%r13
    5a77:	49 89 fc             	mov    %rdi,%r12
    5a7a:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5a81:	00 00 
    5a83:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    5a88:	e8 63 04 00 00       	call   5ef0 <tokenize>
    5a8d:	48 85 c0             	test   %rax,%rax
    5a90:	74 2a                	je     5abc <create_exec_tree+0x5c>
    5a92:	48 89 c3             	mov    %rax,%rbx
    5a95:	48 89 c7             	mov    %rax,%rdi
    5a98:	4c 89 ee             	mov    %r13,%rsi
    5a9b:	e8 c0 08 00 00       	call   6360 <validate_tokens>
    5aa0:	85 c0                	test   %eax,%eax
    5aa2:	74 58                	je     5afc <create_exec_tree+0x9c>
    5aa4:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    5aa9:	48 8d 35 90 ef ff ff 	lea    -0x1070(%rip),%rsi        # 4a40 <del_token>
    5ab0:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    5ab5:	e8 66 0a 00 00       	call   6520 <ft_lstclear>
    5aba:	eb 13                	jmp    5acf <create_exec_tree+0x6f>
    5abc:	48 8d 35 ba 27 00 00 	lea    0x27ba(%rip),%rsi        # 827d <_IO_stdin_used+0x27d>
    5ac3:	bf 02 00 00 00       	mov    $0x2,%edi
    5ac8:	31 c0                	xor    %eax,%eax
    5aca:	e8 81 c9 ff ff       	call   2450 <ft_printf>
    5acf:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5ad6:	00 00 
    5ad8:	48 3b 44 24 10       	cmp    0x10(%rsp),%rax
    5add:	0f 85 c6 00 00 00    	jne    5ba9 <create_exec_tree+0x149>
    5ae3:	31 c0                	xor    %eax,%eax
    5ae5:	48 83 c4 18          	add    $0x18,%rsp
    5ae9:	5b                   	pop    %rbx
    5aea:	41 5c                	pop    %r12
    5aec:	41 5d                	pop    %r13
    5aee:	41 5e                	pop    %r14
    5af0:	41 5f                	pop    %r15
    5af2:	5d                   	pop    %rbp
    5af3:	31 c9                	xor    %ecx,%ecx
    5af5:	31 ff                	xor    %edi,%edi
    5af7:	31 d2                	xor    %edx,%edx
    5af9:	31 f6                	xor    %esi,%esi
    5afb:	c3                   	ret
    5afc:	bd 00 88 00 00       	mov    $0x8800,%ebp
    5b01:	49 89 dd             	mov    %rbx,%r13
    5b04:	eb 13                	jmp    5b19 <create_exec_tree+0xb9>
    5b06:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    5b0d:	00 00 00 
    5b10:	4d 8b 6d 08          	mov    0x8(%r13),%r13
    5b14:	4d 85 ed             	test   %r13,%r13
    5b17:	74 54                	je     5b6d <create_exec_tree+0x10d>
    5b19:	49 8b 45 00          	mov    0x0(%r13),%rax
    5b1d:	8b 40 20             	mov    0x20(%rax),%eax
    5b20:	21 e8                	and    %ebp,%eax
    5b22:	3d 00 08 00 00       	cmp    $0x800,%eax
    5b27:	75 e7                	jne    5b10 <create_exec_tree+0xb0>
    5b29:	4c 89 e7             	mov    %r12,%rdi
    5b2c:	4c 89 ee             	mov    %r13,%rsi
    5b2f:	4c 89 fa             	mov    %r15,%rdx
    5b32:	e8 99 fa ff ff       	call   55d0 <expand_word>
    5b37:	85 c0                	test   %eax,%eax
    5b39:	74 d5                	je     5b10 <create_exec_tree+0xb0>
    5b3b:	49 8b 45 00          	mov    0x0(%r13),%rax
    5b3f:	48 8b 10             	mov    (%rax),%rdx
    5b42:	48 8d 35 17 27 00 00 	lea    0x2717(%rip),%rsi        # 8260 <_IO_stdin_used+0x260>
    5b49:	bf 02 00 00 00       	mov    $0x2,%edi
    5b4e:	31 c0                	xor    %eax,%eax
    5b50:	e8 fb c8 ff ff       	call   2450 <ft_printf>
    5b55:	48 8d 35 46 27 00 00 	lea    0x2746(%rip),%rsi        # 82a2 <_IO_stdin_used+0x2a2>
    5b5c:	bf 02 00 00 00       	mov    $0x2,%edi
    5b61:	31 c0                	xor    %eax,%eax
    5b63:	e8 e8 c8 ff ff       	call   2450 <ft_printf>
    5b68:	e9 37 ff ff ff       	jmp    5aa4 <create_exec_tree+0x44>
    5b6d:	48 89 df             	mov    %rbx,%rdi
    5b70:	4c 89 f6             	mov    %r14,%rsi
    5b73:	e8 a8 e9 ff ff       	call   4520 <create_tree>
    5b78:	49 89 c6             	mov    %rax,%r14
    5b7b:	48 89 5c 24 08       	mov    %rbx,0x8(%rsp)
    5b80:	48 8d 35 b9 ee ff ff 	lea    -0x1147(%rip),%rsi        # 4a40 <del_token>
    5b87:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    5b8c:	e8 8f 09 00 00       	call   6520 <ft_lstclear>
    5b91:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5b98:	00 00 
    5b9a:	48 3b 44 24 10       	cmp    0x10(%rsp),%rax
    5b9f:	75 08                	jne    5ba9 <create_exec_tree+0x149>
    5ba1:	4c 89 f0             	mov    %r14,%rax
    5ba4:	e9 3c ff ff ff       	jmp    5ae5 <create_exec_tree+0x85>
    5ba9:	e8 32 b5 ff ff       	call   10e0 <__stack_chk_fail@plt>
    5bae:	66 90                	xchg   %ax,%ax

0000000000005bb0 <add_token>:
    5bb0:	53                   	push   %rbx
    5bb1:	48 89 fb             	mov    %rdi,%rbx
    5bb4:	48 89 f7             	mov    %rsi,%rdi
    5bb7:	e8 44 0a 00 00       	call   6600 <ft_lstnew>
    5bbc:	48 85 c0             	test   %rax,%rax
    5bbf:	74 13                	je     5bd4 <add_token+0x24>
    5bc1:	48 89 df             	mov    %rbx,%rdi
    5bc4:	48 89 c6             	mov    %rax,%rsi
    5bc7:	e8 24 09 00 00       	call   64f0 <ft_lstadd_back>
    5bcc:	31 c0                	xor    %eax,%eax
    5bce:	5b                   	pop    %rbx
    5bcf:	31 ff                	xor    %edi,%edi
    5bd1:	31 f6                	xor    %esi,%esi
    5bd3:	c3                   	ret
    5bd4:	48 8d 3d e2 26 00 00 	lea    0x26e2(%rip),%rdi        # 82bd <_IO_stdin_used+0x2bd>
    5bdb:	e8 10 b6 ff ff       	call   11f0 <perror@plt>
    5be0:	b8 01 00 00 00       	mov    $0x1,%eax
    5be5:	eb e7                	jmp    5bce <add_token+0x1e>
    5be7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    5bee:	00 00 

0000000000005bf0 <create_token>:
    5bf0:	50                   	push   %rax
    5bf1:	bf 40 00 00 00       	mov    $0x40,%edi
    5bf6:	e8 95 b5 ff ff       	call   1190 <malloc@plt>
    5bfb:	48 85 c0             	test   %rax,%rax
    5bfe:	74 15                	je     5c15 <create_token+0x25>
    5c00:	c7 40 20 00 00 00 00 	movl   $0x0,0x20(%rax)
    5c07:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5c0e:	0f 57 c0             	xorps  %xmm0,%xmm0
    5c11:	0f 11 40 28          	movups %xmm0,0x28(%rax)
    5c15:	59                   	pop    %rcx
    5c16:	31 c9                	xor    %ecx,%ecx
    5c18:	31 ff                	xor    %edi,%edi
    5c1a:	c3                   	ret
    5c1b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000005c20 <set_operator_options>:
    5c20:	8b 07                	mov    (%rdi),%eax
    5c22:	0f ab f0             	bts    %esi,%eax
    5c25:	89 c1                	mov    %eax,%ecx
    5c27:	81 c9 00 10 00 00    	or     $0x1000,%ecx
    5c2d:	89 0f                	mov    %ecx,(%rdi)
    5c2f:	8d 56 fd             	lea    -0x3(%rsi),%edx
    5c32:	b9 00 12 00 00       	mov    $0x1200,%ecx
    5c37:	83 fa 04             	cmp    $0x4,%edx
    5c3a:	72 0d                	jb     5c49 <set_operator_options+0x29>
    5c3c:	83 c6 f9             	add    $0xfffffff9,%esi
    5c3f:	b9 00 14 00 00       	mov    $0x1400,%ecx
    5c44:	83 fe 01             	cmp    $0x1,%esi
    5c47:	77 04                	ja     5c4d <set_operator_options+0x2d>
    5c49:	09 c8                	or     %ecx,%eax
    5c4b:	89 07                	mov    %eax,(%rdi)
    5c4d:	31 c0                	xor    %eax,%eax
    5c4f:	31 c9                	xor    %ecx,%ecx
    5c51:	31 ff                	xor    %edi,%edi
    5c53:	31 d2                	xor    %edx,%edx
    5c55:	31 f6                	xor    %esi,%esi
    5c57:	c3                   	ret
    5c58:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5c5f:	00 

0000000000005c60 <handle_operator>:
    5c60:	55                   	push   %rbp
    5c61:	41 57                	push   %r15
    5c63:	41 56                	push   %r14
    5c65:	41 55                	push   %r13
    5c67:	41 54                	push   %r12
    5c69:	53                   	push   %rbx
    5c6a:	50                   	push   %rax
    5c6b:	49 89 ce             	mov    %rcx,%r14
    5c6e:	49 89 d7             	mov    %rdx,%r15
    5c71:	49 89 f4             	mov    %rsi,%r12
    5c74:	48 89 3c 24          	mov    %rdi,(%rsp)
    5c78:	31 ed                	xor    %ebp,%ebp
    5c7a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    5c80:	4c 89 e7             	mov    %r12,%rdi
    5c83:	4c 89 f6             	mov    %r14,%rsi
    5c86:	e8 35 0b 00 00       	call   67c0 <skip_blank>
    5c8b:	49 8b 3e             	mov    (%r14),%rdi
    5c8e:	4c 01 e7             	add    %r12,%rdi
    5c91:	4c 89 fe             	mov    %r15,%rsi
    5c94:	e8 97 09 00 00       	call   6630 <is_operator>
    5c99:	83 f8 ff             	cmp    $0xffffffff,%eax
    5c9c:	0f 84 a6 00 00 00    	je     5d48 <handle_operator+0xe8>
    5ca2:	89 c3                	mov    %eax,%ebx
    5ca4:	bf 40 00 00 00       	mov    $0x40,%edi
    5ca9:	e8 e2 b4 ff ff       	call   1190 <malloc@plt>
    5cae:	48 85 c0             	test   %rax,%rax
    5cb1:	0f 84 aa 00 00 00    	je     5d61 <handle_operator+0x101>
    5cb7:	49 89 c5             	mov    %rax,%r13
    5cba:	b8 01 00 00 00       	mov    $0x1,%eax
    5cbf:	89 d9                	mov    %ebx,%ecx
    5cc1:	d3 e0                	shl    %cl,%eax
    5cc3:	49 c7 45 00 00 00 00 	movq   $0x0,0x0(%r13)
    5cca:	00 
    5ccb:	0f 57 c0             	xorps  %xmm0,%xmm0
    5cce:	41 0f 11 45 28       	movups %xmm0,0x28(%r13)
    5cd3:	b9 00 10 00 00       	mov    $0x1000,%ecx
    5cd8:	0f ab d9             	bts    %ebx,%ecx
    5cdb:	41 89 4d 20          	mov    %ecx,0x20(%r13)
    5cdf:	8d 53 fd             	lea    -0x3(%rbx),%edx
    5ce2:	b9 00 12 00 00       	mov    $0x1200,%ecx
    5ce7:	83 fa 04             	cmp    $0x4,%edx
    5cea:	72 0d                	jb     5cf9 <handle_operator+0x99>
    5cec:	8d 53 f9             	lea    -0x7(%rbx),%edx
    5cef:	b9 00 14 00 00       	mov    $0x1400,%ecx
    5cf4:	83 fa 01             	cmp    $0x1,%edx
    5cf7:	77 06                	ja     5cff <handle_operator+0x9f>
    5cf9:	09 c1                	or     %eax,%ecx
    5cfb:	41 89 4d 20          	mov    %ecx,0x20(%r13)
    5cff:	4c 89 ef             	mov    %r13,%rdi
    5d02:	e8 f9 08 00 00       	call   6600 <ft_lstnew>
    5d07:	48 85 c0             	test   %rax,%rax
    5d0a:	74 5e                	je     5d6a <handle_operator+0x10a>
    5d0c:	48 8b 3c 24          	mov    (%rsp),%rdi
    5d10:	48 89 c6             	mov    %rax,%rsi
    5d13:	e8 d8 07 00 00       	call   64f0 <ft_lstadd_back>
    5d18:	48 63 c3             	movslq %ebx,%rax
    5d1b:	49 8b 3c c7          	mov    (%r15,%rax,8),%rdi
    5d1f:	e8 ec d0 ff ff       	call   2e10 <ft_strlen>
    5d24:	49 01 06             	add    %rax,(%r14)
    5d27:	4c 89 e7             	mov    %r12,%rdi
    5d2a:	4c 89 f6             	mov    %r14,%rsi
    5d2d:	e8 8e 0a 00 00       	call   67c0 <skip_blank>
    5d32:	49 8b 3e             	mov    (%r14),%rdi
    5d35:	4c 01 e7             	add    %r12,%rdi
    5d38:	4c 89 fe             	mov    %r15,%rsi
    5d3b:	e8 f0 08 00 00       	call   6630 <is_operator>
    5d40:	85 c0                	test   %eax,%eax
    5d42:	0f 89 38 ff ff ff    	jns    5c80 <handle_operator+0x20>
    5d48:	89 e8                	mov    %ebp,%eax
    5d4a:	48 83 c4 08          	add    $0x8,%rsp
    5d4e:	5b                   	pop    %rbx
    5d4f:	41 5c                	pop    %r12
    5d51:	41 5d                	pop    %r13
    5d53:	41 5e                	pop    %r14
    5d55:	41 5f                	pop    %r15
    5d57:	5d                   	pop    %rbp
    5d58:	31 c9                	xor    %ecx,%ecx
    5d5a:	31 ff                	xor    %edi,%edi
    5d5c:	31 d2                	xor    %edx,%edx
    5d5e:	31 f6                	xor    %esi,%esi
    5d60:	c3                   	ret
    5d61:	48 8d 3d 70 25 00 00 	lea    0x2570(%rip),%rdi        # 82d8 <_IO_stdin_used+0x2d8>
    5d68:	eb 1b                	jmp    5d85 <handle_operator+0x125>
    5d6a:	48 8d 3d 4c 25 00 00 	lea    0x254c(%rip),%rdi        # 82bd <_IO_stdin_used+0x2bd>
    5d71:	e8 7a b4 ff ff       	call   11f0 <perror@plt>
    5d76:	4c 89 ef             	mov    %r13,%rdi
    5d79:	e8 c2 b2 ff ff       	call   1040 <free@plt>
    5d7e:	48 8d 3d 68 25 00 00 	lea    0x2568(%rip),%rdi        # 82ed <_IO_stdin_used+0x2ed>
    5d85:	e8 66 b4 ff ff       	call   11f0 <perror@plt>
    5d8a:	bd 01 00 00 00       	mov    $0x1,%ebp
    5d8f:	eb b7                	jmp    5d48 <handle_operator+0xe8>
    5d91:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    5d98:	0f 1f 84 00 00 00 00 
    5d9f:	00 

0000000000005da0 <handle_word>:
    5da0:	55                   	push   %rbp
    5da1:	41 57                	push   %r15
    5da3:	41 56                	push   %r14
    5da5:	41 55                	push   %r13
    5da7:	41 54                	push   %r12
    5da9:	53                   	push   %rbx
    5daa:	50                   	push   %rax
    5dab:	49 89 cf             	mov    %rcx,%r15
    5dae:	49 89 d4             	mov    %rdx,%r12
    5db1:	49 89 f5             	mov    %rsi,%r13
    5db4:	49 89 fe             	mov    %rdi,%r14
    5db7:	48 89 f7             	mov    %rsi,%rdi
    5dba:	48 89 ce             	mov    %rcx,%rsi
    5dbd:	e8 fe 09 00 00       	call   67c0 <skip_blank>
    5dc2:	bf 40 00 00 00       	mov    $0x40,%edi
    5dc7:	e8 c4 b3 ff ff       	call   1190 <malloc@plt>
    5dcc:	48 85 c0             	test   %rax,%rax
    5dcf:	0f 84 ba 00 00 00    	je     5e8f <handle_word+0xef>
    5dd5:	48 89 c3             	mov    %rax,%rbx
    5dd8:	48 c7 00 00 00 00 00 	movq   $0x0,(%rax)
    5ddf:	0f 57 c0             	xorps  %xmm0,%xmm0
    5de2:	0f 11 40 28          	movups %xmm0,0x28(%rax)
    5de6:	c7 40 20 00 08 00 00 	movl   $0x800,0x20(%rax)
    5ded:	49 8b 3f             	mov    (%r15),%rdi
    5df0:	4c 01 ef             	add    %r13,%rdi
    5df3:	4c 89 e6             	mov    %r12,%rsi
    5df6:	e8 95 0a 00 00       	call   6890 <len_to_unquoted_delimiter>
    5dfb:	48 85 c0             	test   %rax,%rax
    5dfe:	74 67                	je     5e67 <handle_word+0xc7>
    5e00:	48 89 c5             	mov    %rax,%rbp
    5e03:	48 89 c7             	mov    %rax,%rdi
    5e06:	48 c1 e7 04          	shl    $0x4,%rdi
    5e0a:	48 83 e7 e0          	and    $0xffffffffffffffe0,%rdi
    5e0e:	48 83 c7 20          	add    $0x20,%rdi
    5e12:	e8 79 b3 ff ff       	call   1190 <malloc@plt>
    5e17:	48 89 43 30          	mov    %rax,0x30(%rbx)
    5e1b:	48 85 c0             	test   %rax,%rax
    5e1e:	0f 84 91 00 00 00    	je     5eb5 <handle_word+0x115>
    5e24:	49 8b 3f             	mov    (%r15),%rdi
    5e27:	4c 01 ef             	add    %r13,%rdi
    5e2a:	31 f6                	xor    %esi,%esi
    5e2c:	48 89 ea             	mov    %rbp,%rdx
    5e2f:	e8 ac d1 ff ff       	call   2fe0 <ft_substr>
    5e34:	48 89 03             	mov    %rax,(%rbx)
    5e37:	4c 89 ef             	mov    %r13,%rdi
    5e3a:	4c 89 e6             	mov    %r12,%rsi
    5e3d:	48 89 da             	mov    %rbx,%rdx
    5e40:	4c 89 f9             	mov    %r15,%rcx
    5e43:	e8 58 e9 ff ff       	call   47a0 <handle_fragments>
    5e48:	85 c0                	test   %eax,%eax
    5e4a:	74 27                	je     5e73 <handle_word+0xd3>
    5e4c:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
    5e50:	e8 eb b1 ff ff       	call   1040 <free@plt>
    5e55:	48 8b 3b             	mov    (%rbx),%rdi
    5e58:	e8 e3 b1 ff ff       	call   1040 <free@plt>
    5e5d:	48 89 df             	mov    %rbx,%rdi
    5e60:	e8 db b1 ff ff       	call   1040 <free@plt>
    5e65:	eb 62                	jmp    5ec9 <handle_word+0x129>
    5e67:	48 89 df             	mov    %rbx,%rdi
    5e6a:	e8 d1 b1 ff ff       	call   1040 <free@plt>
    5e6f:	31 c0                	xor    %eax,%eax
    5e71:	eb 5b                	jmp    5ece <handle_word+0x12e>
    5e73:	48 89 df             	mov    %rbx,%rdi
    5e76:	e8 85 07 00 00       	call   6600 <ft_lstnew>
    5e7b:	48 85 c0             	test   %rax,%rax
    5e7e:	74 18                	je     5e98 <handle_word+0xf8>
    5e80:	4c 89 f7             	mov    %r14,%rdi
    5e83:	48 89 c6             	mov    %rax,%rsi
    5e86:	e8 65 06 00 00       	call   64f0 <ft_lstadd_back>
    5e8b:	31 c0                	xor    %eax,%eax
    5e8d:	eb 3f                	jmp    5ece <handle_word+0x12e>
    5e8f:	48 8d 3d 42 24 00 00 	lea    0x2442(%rip),%rdi        # 82d8 <_IO_stdin_used+0x2d8>
    5e96:	eb 2c                	jmp    5ec4 <handle_word+0x124>
    5e98:	48 8d 3d 1e 24 00 00 	lea    0x241e(%rip),%rdi        # 82bd <_IO_stdin_used+0x2bd>
    5e9f:	e8 4c b3 ff ff       	call   11f0 <perror@plt>
    5ea4:	48 8b 7b 30          	mov    0x30(%rbx),%rdi
    5ea8:	e8 93 b1 ff ff       	call   1040 <free@plt>
    5ead:	48 8b 3b             	mov    (%rbx),%rdi
    5eb0:	e8 8b b1 ff ff       	call   1040 <free@plt>
    5eb5:	48 89 df             	mov    %rbx,%rdi
    5eb8:	e8 83 b1 ff ff       	call   1040 <free@plt>
    5ebd:	48 8d 3d 3b 24 00 00 	lea    0x243b(%rip),%rdi        # 82ff <_IO_stdin_used+0x2ff>
    5ec4:	e8 27 b3 ff ff       	call   11f0 <perror@plt>
    5ec9:	b8 01 00 00 00       	mov    $0x1,%eax
    5ece:	48 83 c4 08          	add    $0x8,%rsp
    5ed2:	5b                   	pop    %rbx
    5ed3:	41 5c                	pop    %r12
    5ed5:	41 5d                	pop    %r13
    5ed7:	41 5e                	pop    %r14
    5ed9:	41 5f                	pop    %r15
    5edb:	5d                   	pop    %rbp
    5edc:	31 c9                	xor    %ecx,%ecx
    5ede:	31 ff                	xor    %edi,%edi
    5ee0:	31 d2                	xor    %edx,%edx
    5ee2:	31 f6                	xor    %esi,%esi
    5ee4:	c3                   	ret
    5ee5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    5eec:	00 00 00 00 

0000000000005ef0 <tokenize>:
    5ef0:	41 57                	push   %r15
    5ef2:	41 56                	push   %r14
    5ef4:	41 54                	push   %r12
    5ef6:	53                   	push   %rbx
    5ef7:	48 83 ec 18          	sub    $0x18,%rsp
    5efb:	48 89 f3             	mov    %rsi,%rbx
    5efe:	49 89 fe             	mov    %rdi,%r14
    5f01:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    5f08:	00 00 
    5f0a:	48 89 44 24 10       	mov    %rax,0x10(%rsp)
    5f0f:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    5f16:	00 
    5f17:	48 c7 44 24 08 00 00 	movq   $0x0,0x8(%rsp)
    5f1e:	00 00 
    5f20:	4c 8d 7c 24 08       	lea    0x8(%rsp),%r15
    5f25:	49 89 e4             	mov    %rsp,%r12
    5f28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    5f2f:	00 
    5f30:	48 8b 04 24          	mov    (%rsp),%rax
    5f34:	41 80 3c 06 00       	cmpb   $0x0,(%r14,%rax,1)
    5f39:	74 44                	je     5f7f <tokenize+0x8f>
    5f3b:	4c 89 ff             	mov    %r15,%rdi
    5f3e:	4c 89 f6             	mov    %r14,%rsi
    5f41:	48 89 da             	mov    %rbx,%rdx
    5f44:	4c 89 e1             	mov    %r12,%rcx
    5f47:	e8 14 fd ff ff       	call   5c60 <handle_operator>
    5f4c:	85 c0                	test   %eax,%eax
    5f4e:	75 58                	jne    5fa8 <tokenize+0xb8>
    5f50:	4c 89 ff             	mov    %r15,%rdi
    5f53:	4c 89 f6             	mov    %r14,%rsi
    5f56:	48 89 da             	mov    %rbx,%rdx
    5f59:	4c 89 e1             	mov    %r12,%rcx
    5f5c:	e8 3f fe ff ff       	call   5da0 <handle_word>
    5f61:	85 c0                	test   %eax,%eax
    5f63:	74 cb                	je     5f30 <tokenize+0x40>
    5f65:	48 8d 35 64 00 00 00 	lea    0x64(%rip),%rsi        # 5fd0 <free_token>
    5f6c:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    5f71:	e8 aa 05 00 00       	call   6520 <ft_lstclear>
    5f76:	48 8d 3d ad 23 00 00 	lea    0x23ad(%rip),%rdi        # 832a <_IO_stdin_used+0x32a>
    5f7d:	eb 41                	jmp    5fc0 <tokenize+0xd0>
    5f7f:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    5f84:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    5f8b:	00 00 
    5f8d:	48 3b 4c 24 10       	cmp    0x10(%rsp),%rcx
    5f92:	75 35                	jne    5fc9 <tokenize+0xd9>
    5f94:	48 83 c4 18          	add    $0x18,%rsp
    5f98:	5b                   	pop    %rbx
    5f99:	41 5c                	pop    %r12
    5f9b:	41 5e                	pop    %r14
    5f9d:	41 5f                	pop    %r15
    5f9f:	31 c9                	xor    %ecx,%ecx
    5fa1:	31 ff                	xor    %edi,%edi
    5fa3:	31 d2                	xor    %edx,%edx
    5fa5:	31 f6                	xor    %esi,%esi
    5fa7:	c3                   	ret
    5fa8:	48 8d 35 21 00 00 00 	lea    0x21(%rip),%rsi        # 5fd0 <free_token>
    5faf:	48 8d 7c 24 08       	lea    0x8(%rsp),%rdi
    5fb4:	e8 67 05 00 00       	call   6520 <ft_lstclear>
    5fb9:	48 8d 3d 53 23 00 00 	lea    0x2353(%rip),%rdi        # 8313 <_IO_stdin_used+0x313>
    5fc0:	e8 2b b2 ff ff       	call   11f0 <perror@plt>
    5fc5:	31 c0                	xor    %eax,%eax
    5fc7:	eb bb                	jmp    5f84 <tokenize+0x94>
    5fc9:	e8 12 b1 ff ff       	call   10e0 <__stack_chk_fail@plt>
    5fce:	66 90                	xchg   %ax,%ax

0000000000005fd0 <free_token>:
    5fd0:	53                   	push   %rbx
    5fd1:	48 89 fb             	mov    %rdi,%rbx
    5fd4:	48 8b 7f 30          	mov    0x30(%rdi),%rdi
    5fd8:	e8 63 b0 ff ff       	call   1040 <free@plt>
    5fdd:	48 8b 3b             	mov    (%rbx),%rdi
    5fe0:	e8 5b b0 ff ff       	call   1040 <free@plt>
    5fe5:	48 89 df             	mov    %rbx,%rdi
    5fe8:	5b                   	pop    %rbx
    5fe9:	e9 52 b0 ff ff       	jmp    1040 <free@plt>
    5fee:	66 90                	xchg   %ax,%ax

0000000000005ff0 <wrong_first_token>:
    5ff0:	48 8b 07             	mov    (%rdi),%rax
    5ff3:	8b 78 20             	mov    0x20(%rax),%edi
    5ff6:	f7 c7 07 01 00 00    	test   $0x107,%edi
    5ffc:	74 2a                	je     6028 <wrong_first_token+0x38>
    5ffe:	53                   	push   %rbx
    5fff:	48 89 f3             	mov    %rsi,%rbx
    6002:	e8 b9 e9 ff ff       	call   49c0 <btoindex>
    6007:	48 98                	cltq
    6009:	48 8b 14 c3          	mov    (%rbx,%rax,8),%rdx
    600d:	48 8d 35 29 23 00 00 	lea    0x2329(%rip),%rsi        # 833d <_IO_stdin_used+0x33d>
    6014:	bf 02 00 00 00       	mov    $0x2,%edi
    6019:	31 c0                	xor    %eax,%eax
    601b:	e8 30 c4 ff ff       	call   2450 <ft_printf>
    6020:	b8 01 00 00 00       	mov    $0x1,%eax
    6025:	5b                   	pop    %rbx
    6026:	eb 02                	jmp    602a <wrong_first_token+0x3a>
    6028:	31 c0                	xor    %eax,%eax
    602a:	31 ff                	xor    %edi,%edi
    602c:	31 d2                	xor    %edx,%edx
    602e:	31 f6                	xor    %esi,%esi
    6030:	c3                   	ret
    6031:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    6038:	0f 1f 84 00 00 00 00 
    603f:	00 

0000000000006040 <validate_and_or>:
    6040:	53                   	push   %rbx
    6041:	48 8b 47 08          	mov    0x8(%rdi),%rax
    6045:	48 85 c0             	test   %rax,%rax
    6048:	74 31                	je     607b <validate_and_or+0x3b>
    604a:	48 8b 00             	mov    (%rax),%rax
    604d:	8b 78 20             	mov    0x20(%rax),%edi
    6050:	f7 c7 07 01 00 00    	test   $0x107,%edi
    6056:	74 3d                	je     6095 <validate_and_or+0x55>
    6058:	48 89 f3             	mov    %rsi,%rbx
    605b:	e8 60 e9 ff ff       	call   49c0 <btoindex>
    6060:	48 98                	cltq
    6062:	48 8b 14 c3          	mov    (%rbx,%rax,8),%rdx
    6066:	48 8d 35 3d 23 00 00 	lea    0x233d(%rip),%rsi        # 83aa <_IO_stdin_used+0x3aa>
    606d:	bf 02 00 00 00       	mov    $0x2,%edi
    6072:	31 c0                	xor    %eax,%eax
    6074:	e8 d7 c3 ff ff       	call   2450 <ft_printf>
    6079:	eb 13                	jmp    608e <validate_and_or+0x4e>
    607b:	48 8d 35 ef 22 00 00 	lea    0x22ef(%rip),%rsi        # 8371 <_IO_stdin_used+0x371>
    6082:	bf 02 00 00 00       	mov    $0x2,%edi
    6087:	31 c0                	xor    %eax,%eax
    6089:	e8 c2 c3 ff ff       	call   2450 <ft_printf>
    608e:	b8 01 00 00 00       	mov    $0x1,%eax
    6093:	eb 02                	jmp    6097 <validate_and_or+0x57>
    6095:	31 c0                	xor    %eax,%eax
    6097:	5b                   	pop    %rbx
    6098:	31 ff                	xor    %edi,%edi
    609a:	31 d2                	xor    %edx,%edx
    609c:	31 f6                	xor    %esi,%esi
    609e:	c3                   	ret
    609f:	90                   	nop

00000000000060a0 <validate_redir>:
    60a0:	53                   	push   %rbx
    60a1:	48 8b 47 08          	mov    0x8(%rdi),%rax
    60a5:	48 85 c0             	test   %rax,%rax
    60a8:	74 33                	je     60dd <validate_redir+0x3d>
    60aa:	48 8b 00             	mov    (%rax),%rax
    60ad:	8b 78 20             	mov    0x20(%rax),%edi
    60b0:	31 c0                	xor    %eax,%eax
    60b2:	f7 c7 00 08 00 00    	test   $0x800,%edi
    60b8:	75 3b                	jne    60f5 <validate_redir+0x55>
    60ba:	48 89 f3             	mov    %rsi,%rbx
    60bd:	e8 fe e8 ff ff       	call   49c0 <btoindex>
    60c2:	48 98                	cltq
    60c4:	48 8b 14 c3          	mov    (%rbx,%rax,8),%rdx
    60c8:	48 8d 35 6e 22 00 00 	lea    0x226e(%rip),%rsi        # 833d <_IO_stdin_used+0x33d>
    60cf:	bf 02 00 00 00       	mov    $0x2,%edi
    60d4:	31 c0                	xor    %eax,%eax
    60d6:	e8 75 c3 ff ff       	call   2450 <ft_printf>
    60db:	eb 13                	jmp    60f0 <validate_redir+0x50>
    60dd:	48 8d 35 8d 22 00 00 	lea    0x228d(%rip),%rsi        # 8371 <_IO_stdin_used+0x371>
    60e4:	bf 02 00 00 00       	mov    $0x2,%edi
    60e9:	31 c0                	xor    %eax,%eax
    60eb:	e8 60 c3 ff ff       	call   2450 <ft_printf>
    60f0:	b8 01 00 00 00       	mov    $0x1,%eax
    60f5:	5b                   	pop    %rbx
    60f6:	31 ff                	xor    %edi,%edi
    60f8:	31 d2                	xor    %edx,%edx
    60fa:	31 f6                	xor    %esi,%esi
    60fc:	c3                   	ret
    60fd:	0f 1f 00             	nopl   (%rax)

0000000000006100 <validate_open_paren>:
    6100:	53                   	push   %rbx
    6101:	48 8b 47 08          	mov    0x8(%rdi),%rax
    6105:	48 85 c0             	test   %rax,%rax
    6108:	74 34                	je     613e <validate_open_paren+0x3e>
    610a:	48 ff 06             	incq   (%rsi)
    610d:	48 8b 00             	mov    (%rax),%rax
    6110:	8b 78 20             	mov    0x20(%rax),%edi
    6113:	f7 c7 07 01 00 00    	test   $0x107,%edi
    6119:	74 3d                	je     6158 <validate_open_paren+0x58>
    611b:	48 89 d3             	mov    %rdx,%rbx
    611e:	e8 9d e8 ff ff       	call   49c0 <btoindex>
    6123:	48 98                	cltq
    6125:	48 8b 14 c3          	mov    (%rbx,%rax,8),%rdx
    6129:	48 8d 35 7a 22 00 00 	lea    0x227a(%rip),%rsi        # 83aa <_IO_stdin_used+0x3aa>
    6130:	bf 02 00 00 00       	mov    $0x2,%edi
    6135:	31 c0                	xor    %eax,%eax
    6137:	e8 14 c3 ff ff       	call   2450 <ft_printf>
    613c:	eb 13                	jmp    6151 <validate_open_paren+0x51>
    613e:	48 8d 35 2c 22 00 00 	lea    0x222c(%rip),%rsi        # 8371 <_IO_stdin_used+0x371>
    6145:	bf 02 00 00 00       	mov    $0x2,%edi
    614a:	31 c0                	xor    %eax,%eax
    614c:	e8 ff c2 ff ff       	call   2450 <ft_printf>
    6151:	b8 01 00 00 00       	mov    $0x1,%eax
    6156:	eb 02                	jmp    615a <validate_open_paren+0x5a>
    6158:	31 c0                	xor    %eax,%eax
    615a:	5b                   	pop    %rbx
    615b:	31 ff                	xor    %edi,%edi
    615d:	31 d2                	xor    %edx,%edx
    615f:	31 f6                	xor    %esi,%esi
    6161:	c3                   	ret
    6162:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    6169:	1f 84 00 00 00 00 00 

0000000000006170 <validate_close_paren>:
    6170:	50                   	push   %rax
    6171:	48 8b 06             	mov    (%rsi),%rax
    6174:	48 85 c0             	test   %rax,%rax
    6177:	74 2c                	je     61a5 <validate_close_paren+0x35>
    6179:	48 ff c8             	dec    %rax
    617c:	48 89 06             	mov    %rax,(%rsi)
    617f:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    6183:	31 c0                	xor    %eax,%eax
    6185:	48 85 c9             	test   %rcx,%rcx
    6188:	74 4b                	je     61d5 <validate_close_paren+0x65>
    618a:	48 8b 09             	mov    (%rcx),%rcx
    618d:	8b 51 20             	mov    0x20(%rcx),%edx
    6190:	f7 c2 00 08 00 00    	test   $0x800,%edx
    6196:	75 22                	jne    61ba <validate_close_paren+0x4a>
    6198:	84 d2                	test   %dl,%dl
    619a:	79 39                	jns    61d5 <validate_close_paren+0x65>
    619c:	48 8d 35 6e 22 00 00 	lea    0x226e(%rip),%rsi        # 8411 <_IO_stdin_used+0x411>
    61a3:	eb 07                	jmp    61ac <validate_close_paren+0x3c>
    61a5:	48 8d 35 32 22 00 00 	lea    0x2232(%rip),%rsi        # 83de <_IO_stdin_used+0x3de>
    61ac:	bf 02 00 00 00       	mov    $0x2,%edi
    61b1:	31 c0                	xor    %eax,%eax
    61b3:	e8 98 c2 ff ff       	call   2450 <ft_printf>
    61b8:	eb 16                	jmp    61d0 <validate_close_paren+0x60>
    61ba:	48 8b 11             	mov    (%rcx),%rdx
    61bd:	48 8d 35 79 21 00 00 	lea    0x2179(%rip),%rsi        # 833d <_IO_stdin_used+0x33d>
    61c4:	bf 02 00 00 00       	mov    $0x2,%edi
    61c9:	31 c0                	xor    %eax,%eax
    61cb:	e8 80 c2 ff ff       	call   2450 <ft_printf>
    61d0:	b8 01 00 00 00       	mov    $0x1,%eax
    61d5:	59                   	pop    %rcx
    61d6:	31 c9                	xor    %ecx,%ecx
    61d8:	31 ff                	xor    %edi,%edi
    61da:	31 d2                	xor    %edx,%edx
    61dc:	31 f6                	xor    %esi,%esi
    61de:	c3                   	ret
    61df:	90                   	nop

00000000000061e0 <validate_paren>:
    61e0:	53                   	push   %rbx
    61e1:	48 8b 07             	mov    (%rdi),%rax
    61e4:	8b 40 20             	mov    0x20(%rax),%eax
    61e7:	84 c0                	test   %al,%al
    61e9:	78 1c                	js     6207 <validate_paren+0x27>
    61eb:	a9 00 01 00 00       	test   $0x100,%eax
    61f0:	75 56                	jne    6248 <validate_paren+0x68>
    61f2:	48 8d 35 4b 22 00 00 	lea    0x224b(%rip),%rsi        # 8444 <_IO_stdin_used+0x444>
    61f9:	bf 02 00 00 00       	mov    $0x2,%edi
    61fe:	31 c0                	xor    %eax,%eax
    6200:	e8 4b c2 ff ff       	call   2450 <ft_printf>
    6205:	eb 3d                	jmp    6244 <validate_paren+0x64>
    6207:	48 8b 47 08          	mov    0x8(%rdi),%rax
    620b:	48 85 c0             	test   %rax,%rax
    620e:	74 6c                	je     627c <validate_paren+0x9c>
    6210:	48 ff 06             	incq   (%rsi)
    6213:	48 8b 00             	mov    (%rax),%rax
    6216:	8b 78 20             	mov    0x20(%rax),%edi
    6219:	f7 c7 07 01 00 00    	test   $0x107,%edi
    621f:	74 23                	je     6244 <validate_paren+0x64>
    6221:	48 89 d3             	mov    %rdx,%rbx
    6224:	e8 97 e7 ff ff       	call   49c0 <btoindex>
    6229:	48 98                	cltq
    622b:	48 8b 14 c3          	mov    (%rbx,%rax,8),%rdx
    622f:	48 8d 35 74 21 00 00 	lea    0x2174(%rip),%rsi        # 83aa <_IO_stdin_used+0x3aa>
    6236:	bf 02 00 00 00       	mov    $0x2,%edi
    623b:	31 c0                	xor    %eax,%eax
    623d:	e8 0e c2 ff ff       	call   2450 <ft_printf>
    6242:	eb 54                	jmp    6298 <validate_paren+0xb8>
    6244:	31 c0                	xor    %eax,%eax
    6246:	eb 55                	jmp    629d <validate_paren+0xbd>
    6248:	48 8b 06             	mov    (%rsi),%rax
    624b:	48 85 c0             	test   %rax,%rax
    624e:	74 35                	je     6285 <validate_paren+0xa5>
    6250:	48 ff c8             	dec    %rax
    6253:	48 89 06             	mov    %rax,(%rsi)
    6256:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    625a:	31 c0                	xor    %eax,%eax
    625c:	48 85 c9             	test   %rcx,%rcx
    625f:	74 3c                	je     629d <validate_paren+0xbd>
    6261:	48 8b 09             	mov    (%rcx),%rcx
    6264:	8b 51 20             	mov    0x20(%rcx),%edx
    6267:	f7 c2 00 08 00 00    	test   $0x800,%edx
    626d:	75 38                	jne    62a7 <validate_paren+0xc7>
    626f:	84 d2                	test   %dl,%dl
    6271:	79 2a                	jns    629d <validate_paren+0xbd>
    6273:	48 8d 35 97 21 00 00 	lea    0x2197(%rip),%rsi        # 8411 <_IO_stdin_used+0x411>
    627a:	eb 10                	jmp    628c <validate_paren+0xac>
    627c:	48 8d 35 ee 20 00 00 	lea    0x20ee(%rip),%rsi        # 8371 <_IO_stdin_used+0x371>
    6283:	eb 07                	jmp    628c <validate_paren+0xac>
    6285:	48 8d 35 52 21 00 00 	lea    0x2152(%rip),%rsi        # 83de <_IO_stdin_used+0x3de>
    628c:	bf 02 00 00 00       	mov    $0x2,%edi
    6291:	31 c0                	xor    %eax,%eax
    6293:	e8 b8 c1 ff ff       	call   2450 <ft_printf>
    6298:	b8 01 00 00 00       	mov    $0x1,%eax
    629d:	5b                   	pop    %rbx
    629e:	31 c9                	xor    %ecx,%ecx
    62a0:	31 ff                	xor    %edi,%edi
    62a2:	31 d2                	xor    %edx,%edx
    62a4:	31 f6                	xor    %esi,%esi
    62a6:	c3                   	ret
    62a7:	48 8b 11             	mov    (%rcx),%rdx
    62aa:	48 8d 35 8c 20 00 00 	lea    0x208c(%rip),%rsi        # 833d <_IO_stdin_used+0x33d>
    62b1:	eb 83                	jmp    6236 <validate_paren+0x56>
    62b3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    62ba:	84 00 00 00 00 00 

00000000000062c0 <validate_pipe>:
    62c0:	53                   	push   %rbx
    62c1:	48 8b 47 08          	mov    0x8(%rdi),%rax
    62c5:	48 85 c0             	test   %rax,%rax
    62c8:	74 31                	je     62fb <validate_pipe+0x3b>
    62ca:	48 8b 00             	mov    (%rax),%rax
    62cd:	8b 78 20             	mov    0x20(%rax),%edi
    62d0:	f7 c7 07 01 00 00    	test   $0x107,%edi
    62d6:	74 3d                	je     6315 <validate_pipe+0x55>
    62d8:	48 89 f3             	mov    %rsi,%rbx
    62db:	e8 e0 e6 ff ff       	call   49c0 <btoindex>
    62e0:	48 98                	cltq
    62e2:	48 8b 14 c3          	mov    (%rbx,%rax,8),%rdx
    62e6:	48 8d 35 50 20 00 00 	lea    0x2050(%rip),%rsi        # 833d <_IO_stdin_used+0x33d>
    62ed:	bf 02 00 00 00       	mov    $0x2,%edi
    62f2:	31 c0                	xor    %eax,%eax
    62f4:	e8 57 c1 ff ff       	call   2450 <ft_printf>
    62f9:	eb 13                	jmp    630e <validate_pipe+0x4e>
    62fb:	48 8d 35 6f 20 00 00 	lea    0x206f(%rip),%rsi        # 8371 <_IO_stdin_used+0x371>
    6302:	bf 02 00 00 00       	mov    $0x2,%edi
    6307:	31 c0                	xor    %eax,%eax
    6309:	e8 42 c1 ff ff       	call   2450 <ft_printf>
    630e:	b8 01 00 00 00       	mov    $0x1,%eax
    6313:	eb 02                	jmp    6317 <validate_pipe+0x57>
    6315:	31 c0                	xor    %eax,%eax
    6317:	5b                   	pop    %rbx
    6318:	31 ff                	xor    %edi,%edi
    631a:	31 d2                	xor    %edx,%edx
    631c:	31 f6                	xor    %esi,%esi
    631e:	c3                   	ret
    631f:	90                   	nop

0000000000006320 <validate_word>:
    6320:	48 8b 4f 08          	mov    0x8(%rdi),%rcx
    6324:	31 c0                	xor    %eax,%eax
    6326:	48 85 c9             	test   %rcx,%rcx
    6329:	74 26                	je     6351 <validate_word+0x31>
    632b:	48 8b 09             	mov    (%rcx),%rcx
    632e:	f6 41 20 80          	testb  $0x80,0x20(%rcx)
    6332:	74 1d                	je     6351 <validate_word+0x31>
    6334:	50                   	push   %rax
    6335:	48 8d 35 d5 20 00 00 	lea    0x20d5(%rip),%rsi        # 8411 <_IO_stdin_used+0x411>
    633c:	bf 02 00 00 00       	mov    $0x2,%edi
    6341:	31 c0                	xor    %eax,%eax
    6343:	e8 08 c1 ff ff       	call   2450 <ft_printf>
    6348:	b8 01 00 00 00       	mov    $0x1,%eax
    634d:	48 83 c4 08          	add    $0x8,%rsp
    6351:	31 c9                	xor    %ecx,%ecx
    6353:	31 ff                	xor    %edi,%edi
    6355:	31 f6                	xor    %esi,%esi
    6357:	c3                   	ret
    6358:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    635f:	00 

0000000000006360 <validate_tokens>:
    6360:	55                   	push   %rbp
    6361:	41 57                	push   %r15
    6363:	41 56                	push   %r14
    6365:	41 54                	push   %r12
    6367:	53                   	push   %rbx
    6368:	48 83 ec 10          	sub    $0x10,%rsp
    636c:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6373:	00 00 
    6375:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    637a:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    6381:	00 
    6382:	31 db                	xor    %ebx,%ebx
    6384:	48 85 ff             	test   %rdi,%rdi
    6387:	0f 84 1f 01 00 00    	je     64ac <validate_tokens+0x14c>
    638d:	49 89 f6             	mov    %rsi,%r14
    6390:	49 89 ff             	mov    %rdi,%r15
    6393:	48 8b 07             	mov    (%rdi),%rax
    6396:	8b 78 20             	mov    0x20(%rax),%edi
    6399:	f7 c7 07 01 00 00    	test   $0x107,%edi
    639f:	74 23                	je     63c4 <validate_tokens+0x64>
    63a1:	e8 1a e6 ff ff       	call   49c0 <btoindex>
    63a6:	48 98                	cltq
    63a8:	49 8b 14 c6          	mov    (%r14,%rax,8),%rdx
    63ac:	48 8d 35 8a 1f 00 00 	lea    0x1f8a(%rip),%rsi        # 833d <_IO_stdin_used+0x33d>
    63b3:	bf 02 00 00 00       	mov    $0x2,%edi
    63b8:	31 c0                	xor    %eax,%eax
    63ba:	e8 91 c0 ff ff       	call   2450 <ft_printf>
    63bf:	e9 e3 00 00 00       	jmp    64a7 <validate_tokens+0x147>
    63c4:	49 89 e4             	mov    %rsp,%r12
    63c7:	eb 10                	jmp    63d9 <validate_tokens+0x79>
    63c9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    63d0:	4d 85 ff             	test   %r15,%r15
    63d3:	0f 84 b4 00 00 00    	je     648d <validate_tokens+0x12d>
    63d9:	49 8b 07             	mov    (%r15),%rax
    63dc:	8b 68 20             	mov    0x20(%rax),%ebp
    63df:	40 f6 c5 05          	test   $0x5,%bpl
    63e3:	74 1f                	je     6404 <validate_tokens+0xa4>
    63e5:	49 8b 47 08          	mov    0x8(%r15),%rax
    63e9:	48 85 c0             	test   %rax,%rax
    63ec:	0f 84 a2 00 00 00    	je     6494 <validate_tokens+0x134>
    63f2:	48 8b 00             	mov    (%rax),%rax
    63f5:	8b 78 20             	mov    0x20(%rax),%edi
    63f8:	f7 c7 07 01 00 00    	test   $0x107,%edi
    63fe:	0f 85 cd 00 00 00    	jne    64d1 <validate_tokens+0x171>
    6404:	f7 c5 00 02 00 00    	test   $0x200,%ebp
    640a:	74 1b                	je     6427 <validate_tokens+0xc7>
    640c:	49 8b 47 08          	mov    0x8(%r15),%rax
    6410:	48 85 c0             	test   %rax,%rax
    6413:	74 7f                	je     6494 <validate_tokens+0x134>
    6415:	48 8b 00             	mov    (%rax),%rax
    6418:	8b 78 20             	mov    0x20(%rax),%edi
    641b:	f7 c7 00 08 00 00    	test   $0x800,%edi
    6421:	0f 84 7a ff ff ff    	je     63a1 <validate_tokens+0x41>
    6427:	f7 c5 00 04 00 00    	test   $0x400,%ebp
    642d:	74 12                	je     6441 <validate_tokens+0xe1>
    642f:	4c 89 ff             	mov    %r15,%rdi
    6432:	4c 89 e6             	mov    %r12,%rsi
    6435:	4c 89 f2             	mov    %r14,%rdx
    6438:	e8 a3 fd ff ff       	call   61e0 <validate_paren>
    643d:	85 c0                	test   %eax,%eax
    643f:	75 66                	jne    64a7 <validate_tokens+0x147>
    6441:	40 f6 c5 02          	test   $0x2,%bpl
    6445:	74 1b                	je     6462 <validate_tokens+0x102>
    6447:	49 8b 47 08          	mov    0x8(%r15),%rax
    644b:	48 85 c0             	test   %rax,%rax
    644e:	74 44                	je     6494 <validate_tokens+0x134>
    6450:	48 8b 00             	mov    (%rax),%rax
    6453:	8b 78 20             	mov    0x20(%rax),%edi
    6456:	f7 c7 07 01 00 00    	test   $0x107,%edi
    645c:	0f 85 3f ff ff ff    	jne    63a1 <validate_tokens+0x41>
    6462:	4d 8b 7f 08          	mov    0x8(%r15),%r15
    6466:	f7 c5 00 08 00 00    	test   $0x800,%ebp
    646c:	0f 84 5e ff ff ff    	je     63d0 <validate_tokens+0x70>
    6472:	4d 85 ff             	test   %r15,%r15
    6475:	74 16                	je     648d <validate_tokens+0x12d>
    6477:	49 8b 07             	mov    (%r15),%rax
    647a:	f6 40 20 80          	testb  $0x80,0x20(%rax)
    647e:	0f 84 4c ff ff ff    	je     63d0 <validate_tokens+0x70>
    6484:	48 8d 35 86 1f 00 00 	lea    0x1f86(%rip),%rsi        # 8411 <_IO_stdin_used+0x411>
    648b:	eb 0e                	jmp    649b <validate_tokens+0x13b>
    648d:	48 83 3c 24 00       	cmpq   $0x0,(%rsp)
    6492:	7e 18                	jle    64ac <validate_tokens+0x14c>
    6494:	48 8d 35 d6 1e 00 00 	lea    0x1ed6(%rip),%rsi        # 8371 <_IO_stdin_used+0x371>
    649b:	bf 02 00 00 00       	mov    $0x2,%edi
    64a0:	31 c0                	xor    %eax,%eax
    64a2:	e8 a9 bf ff ff       	call   2450 <ft_printf>
    64a7:	bb 01 00 00 00       	mov    $0x1,%ebx
    64ac:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    64b3:	00 00 
    64b5:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
    64ba:	75 2c                	jne    64e8 <validate_tokens+0x188>
    64bc:	89 d8                	mov    %ebx,%eax
    64be:	48 83 c4 10          	add    $0x10,%rsp
    64c2:	5b                   	pop    %rbx
    64c3:	41 5c                	pop    %r12
    64c5:	41 5e                	pop    %r14
    64c7:	41 5f                	pop    %r15
    64c9:	5d                   	pop    %rbp
    64ca:	31 ff                	xor    %edi,%edi
    64cc:	31 d2                	xor    %edx,%edx
    64ce:	31 f6                	xor    %esi,%esi
    64d0:	c3                   	ret
    64d1:	e8 ea e4 ff ff       	call   49c0 <btoindex>
    64d6:	48 98                	cltq
    64d8:	49 8b 14 c6          	mov    (%r14,%rax,8),%rdx
    64dc:	48 8d 35 c7 1e 00 00 	lea    0x1ec7(%rip),%rsi        # 83aa <_IO_stdin_used+0x3aa>
    64e3:	e9 cb fe ff ff       	jmp    63b3 <validate_tokens+0x53>
    64e8:	e8 f3 ab ff ff       	call   10e0 <__stack_chk_fail@plt>
    64ed:	0f 1f 00             	nopl   (%rax)

00000000000064f0 <ft_lstadd_back>:
    64f0:	53                   	push   %rbx
    64f1:	48 89 f3             	mov    %rsi,%rbx
    64f4:	48 8b 07             	mov    (%rdi),%rax
    64f7:	48 85 c0             	test   %rax,%rax
    64fa:	74 0f                	je     650b <ft_lstadd_back+0x1b>
    64fc:	48 89 c7             	mov    %rax,%rdi
    64ff:	e8 dc 00 00 00       	call   65e0 <ft_lstlast>
    6504:	48 89 c7             	mov    %rax,%rdi
    6507:	48 83 c7 08          	add    $0x8,%rdi
    650b:	48 89 1f             	mov    %rbx,(%rdi)
    650e:	5b                   	pop    %rbx
    650f:	31 c0                	xor    %eax,%eax
    6511:	31 ff                	xor    %edi,%edi
    6513:	31 f6                	xor    %esi,%esi
    6515:	c3                   	ret
    6516:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    651d:	00 00 00 

0000000000006520 <ft_lstclear>:
    6520:	41 57                	push   %r15
    6522:	41 56                	push   %r14
    6524:	53                   	push   %rbx
    6525:	48 89 fb             	mov    %rdi,%rbx
    6528:	48 8b 3f             	mov    (%rdi),%rdi
    652b:	48 85 ff             	test   %rdi,%rdi
    652e:	74 27                	je     6557 <ft_lstclear+0x37>
    6530:	49 89 f6             	mov    %rsi,%r14
    6533:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    653a:	84 00 00 00 00 00 
    6540:	4c 8b 7f 08          	mov    0x8(%rdi),%r15
    6544:	4c 89 f6             	mov    %r14,%rsi
    6547:	e8 24 00 00 00       	call   6570 <ft_lstdelone>
    654c:	4c 89 3b             	mov    %r15,(%rbx)
    654f:	4c 89 ff             	mov    %r15,%rdi
    6552:	4d 85 ff             	test   %r15,%r15
    6555:	75 e9                	jne    6540 <ft_lstclear+0x20>
    6557:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    655e:	5b                   	pop    %rbx
    655f:	41 5e                	pop    %r14
    6561:	41 5f                	pop    %r15
    6563:	31 ff                	xor    %edi,%edi
    6565:	31 f6                	xor    %esi,%esi
    6567:	c3                   	ret
    6568:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    656f:	00 

0000000000006570 <ft_lstdelone>:
    6570:	53                   	push   %rbx
    6571:	48 89 fb             	mov    %rdi,%rbx
    6574:	48 8b 3f             	mov    (%rdi),%rdi
    6577:	ff d6                	call   *%rsi
    6579:	48 89 df             	mov    %rbx,%rdi
    657c:	5b                   	pop    %rbx
    657d:	31 f6                	xor    %esi,%esi
    657f:	e9 bc aa ff ff       	jmp    1040 <free@plt>
    6584:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    658b:	00 00 00 
    658e:	66 90                	xchg   %ax,%ax

0000000000006590 <ft_lstiter>:
    6590:	48 85 ff             	test   %rdi,%rdi
    6593:	74 36                	je     65cb <ft_lstiter+0x3b>
    6595:	41 57                	push   %r15
    6597:	41 56                	push   %r14
    6599:	53                   	push   %rbx
    659a:	48 89 d3             	mov    %rdx,%rbx
    659d:	49 89 f6             	mov    %rsi,%r14
    65a0:	49 89 ff             	mov    %rdi,%r15
    65a3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    65aa:	84 00 00 00 00 00 
    65b0:	49 8b 07             	mov    (%r15),%rax
    65b3:	48 89 43 08          	mov    %rax,0x8(%rbx)
    65b7:	48 89 df             	mov    %rbx,%rdi
    65ba:	41 ff d6             	call   *%r14
    65bd:	4d 8b 7f 08          	mov    0x8(%r15),%r15
    65c1:	4d 85 ff             	test   %r15,%r15
    65c4:	75 ea                	jne    65b0 <ft_lstiter+0x20>
    65c6:	5b                   	pop    %rbx
    65c7:	41 5e                	pop    %r14
    65c9:	41 5f                	pop    %r15
    65cb:	31 c0                	xor    %eax,%eax
    65cd:	31 ff                	xor    %edi,%edi
    65cf:	31 d2                	xor    %edx,%edx
    65d1:	31 f6                	xor    %esi,%esi
    65d3:	c3                   	ret
    65d4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    65db:	00 00 00 
    65de:	66 90                	xchg   %ax,%ax

00000000000065e0 <ft_lstlast>:
    65e0:	48 89 f8             	mov    %rdi,%rax
    65e3:	48 85 ff             	test   %rdi,%rdi
    65e6:	74 09                	je     65f1 <ft_lstlast+0x11>
    65e8:	48 8b 78 08          	mov    0x8(%rax),%rdi
    65ec:	48 85 ff             	test   %rdi,%rdi
    65ef:	75 ef                	jne    65e0 <ft_lstlast>
    65f1:	31 ff                	xor    %edi,%edi
    65f3:	c3                   	ret
    65f4:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    65fb:	00 00 00 
    65fe:	66 90                	xchg   %ax,%ax

0000000000006600 <ft_lstnew>:
    6600:	53                   	push   %rbx
    6601:	48 89 fb             	mov    %rdi,%rbx
    6604:	bf 10 00 00 00       	mov    $0x10,%edi
    6609:	e8 82 ab ff ff       	call   1190 <malloc@plt>
    660e:	48 85 c0             	test   %rax,%rax
    6611:	74 0b                	je     661e <ft_lstnew+0x1e>
    6613:	48 89 18             	mov    %rbx,(%rax)
    6616:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
    661d:	00 
    661e:	5b                   	pop    %rbx
    661f:	31 ff                	xor    %edi,%edi
    6621:	c3                   	ret
    6622:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6629:	00 00 00 
    662c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000006630 <is_operator>:
    6630:	41 57                	push   %r15
    6632:	41 56                	push   %r14
    6634:	41 55                	push   %r13
    6636:	41 54                	push   %r12
    6638:	53                   	push   %rbx
    6639:	4c 8b 26             	mov    (%rsi),%r12
    663c:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
    6641:	4d 85 e4             	test   %r12,%r12
    6644:	74 36                	je     667c <is_operator+0x4c>
    6646:	49 89 f6             	mov    %rsi,%r14
    6649:	49 89 ff             	mov    %rdi,%r15
    664c:	45 31 ed             	xor    %r13d,%r13d
    664f:	90                   	nop
    6650:	4c 89 e7             	mov    %r12,%rdi
    6653:	e8 b8 c7 ff ff       	call   2e10 <ft_strlen>
    6658:	4c 89 ff             	mov    %r15,%rdi
    665b:	4c 89 e6             	mov    %r12,%rsi
    665e:	48 89 c2             	mov    %rax,%rdx
    6661:	e8 da c7 ff ff       	call   2e40 <ft_strncmp>
    6666:	85 c0                	test   %eax,%eax
    6668:	74 0f                	je     6679 <is_operator+0x49>
    666a:	4f 8b 64 ee 08       	mov    0x8(%r14,%r13,8),%r12
    666f:	49 ff c5             	inc    %r13
    6672:	4d 85 e4             	test   %r12,%r12
    6675:	75 d9                	jne    6650 <is_operator+0x20>
    6677:	eb 03                	jmp    667c <is_operator+0x4c>
    6679:	44 89 eb             	mov    %r13d,%ebx
    667c:	89 d8                	mov    %ebx,%eax
    667e:	5b                   	pop    %rbx
    667f:	41 5c                	pop    %r12
    6681:	41 5d                	pop    %r13
    6683:	41 5e                	pop    %r14
    6685:	41 5f                	pop    %r15
    6687:	31 ff                	xor    %edi,%edi
    6689:	31 d2                	xor    %edx,%edx
    668b:	31 f6                	xor    %esi,%esi
    668d:	c3                   	ret
    668e:	66 90                	xchg   %ax,%ax

0000000000006690 <set_len_and_op>:
    6690:	55                   	push   %rbp
    6691:	41 57                	push   %r15
    6693:	41 56                	push   %r14
    6695:	41 55                	push   %r13
    6697:	41 54                	push   %r12
    6699:	53                   	push   %rbx
    669a:	48 83 ec 18          	sub    $0x18,%rsp
    669e:	48 89 4c 24 08       	mov    %rcx,0x8(%rsp)
    66a3:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    66a8:	49 89 f7             	mov    %rsi,%r15
    66ab:	49 89 fc             	mov    %rdi,%r12
    66ae:	4c 8b 2e             	mov    (%rsi),%r13
    66b1:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    66b6:	4d 85 ed             	test   %r13,%r13
    66b9:	74 30                	je     66eb <set_len_and_op+0x5b>
    66bb:	31 db                	xor    %ebx,%ebx
    66bd:	0f 1f 00             	nopl   (%rax)
    66c0:	4c 89 ef             	mov    %r13,%rdi
    66c3:	e8 48 c7 ff ff       	call   2e10 <ft_strlen>
    66c8:	4c 89 e7             	mov    %r12,%rdi
    66cb:	4c 89 ee             	mov    %r13,%rsi
    66ce:	48 89 c2             	mov    %rax,%rdx
    66d1:	e8 6a c7 ff ff       	call   2e40 <ft_strncmp>
    66d6:	85 c0                	test   %eax,%eax
    66d8:	74 0f                	je     66e9 <set_len_and_op+0x59>
    66da:	4d 8b 6c df 08       	mov    0x8(%r15,%rbx,8),%r13
    66df:	48 ff c3             	inc    %rbx
    66e2:	4d 85 ed             	test   %r13,%r13
    66e5:	75 d9                	jne    66c0 <set_len_and_op+0x30>
    66e7:	eb 02                	jmp    66eb <set_len_and_op+0x5b>
    66e9:	89 dd                	mov    %ebx,%ebp
    66eb:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    66f0:	89 28                	mov    %ebp,(%rax)
    66f2:	31 db                	xor    %ebx,%ebx
    66f4:	83 fd ff             	cmp    $0xffffffff,%ebp
    66f7:	0f 85 82 00 00 00    	jne    677f <set_len_and_op+0xef>
    66fd:	41 80 3c 24 00       	cmpb   $0x0,(%r12)
    6702:	74 7b                	je     677f <set_len_and_op+0xef>
    6704:	31 db                	xor    %ebx,%ebx
    6706:	4c 89 24 24          	mov    %r12,(%rsp)
    670a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6710:	4d 8d 2c 1c          	lea    (%r12,%rbx,1),%r13
    6714:	49 ff c5             	inc    %r13
    6717:	49 8b 2f             	mov    (%r15),%rbp
    671a:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
    6720:	48 85 ed             	test   %rbp,%rbp
    6723:	74 42                	je     6767 <set_len_and_op+0xd7>
    6725:	45 31 e4             	xor    %r12d,%r12d
    6728:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    672f:	00 
    6730:	48 89 ef             	mov    %rbp,%rdi
    6733:	e8 d8 c6 ff ff       	call   2e10 <ft_strlen>
    6738:	4c 89 ef             	mov    %r13,%rdi
    673b:	48 89 ee             	mov    %rbp,%rsi
    673e:	48 89 c2             	mov    %rax,%rdx
    6741:	e8 fa c6 ff ff       	call   2e40 <ft_strncmp>
    6746:	85 c0                	test   %eax,%eax
    6748:	74 16                	je     6760 <set_len_and_op+0xd0>
    674a:	4b 8b 6c e7 08       	mov    0x8(%r15,%r12,8),%rbp
    674f:	49 ff c4             	inc    %r12
    6752:	48 85 ed             	test   %rbp,%rbp
    6755:	75 d9                	jne    6730 <set_len_and_op+0xa0>
    6757:	eb 0a                	jmp    6763 <set_len_and_op+0xd3>
    6759:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6760:	45 89 e6             	mov    %r12d,%r14d
    6763:	4c 8b 24 24          	mov    (%rsp),%r12
    6767:	48 ff c3             	inc    %rbx
    676a:	48 8b 44 24 08       	mov    0x8(%rsp),%rax
    676f:	44 89 30             	mov    %r14d,(%rax)
    6772:	41 83 fe ff          	cmp    $0xffffffff,%r14d
    6776:	75 07                	jne    677f <set_len_and_op+0xef>
    6778:	41 80 7d 00 00       	cmpb   $0x0,0x0(%r13)
    677d:	75 91                	jne    6710 <set_len_and_op+0x80>
    677f:	48 8b 44 24 10       	mov    0x10(%rsp),%rax
    6784:	48 89 18             	mov    %rbx,(%rax)
    6787:	48 83 c4 18          	add    $0x18,%rsp
    678b:	5b                   	pop    %rbx
    678c:	41 5c                	pop    %r12
    678e:	41 5d                	pop    %r13
    6790:	41 5e                	pop    %r14
    6792:	41 5f                	pop    %r15
    6794:	5d                   	pop    %rbp
    6795:	31 c0                	xor    %eax,%eax
    6797:	31 c9                	xor    %ecx,%ecx
    6799:	31 ff                	xor    %edi,%edi
    679b:	31 d2                	xor    %edx,%edx
    679d:	31 f6                	xor    %esi,%esi
    679f:	c3                   	ret

00000000000067a0 <is_blank>:
    67a0:	40 80 ff 20          	cmp    $0x20,%dil
    67a4:	0f 94 c0             	sete   %al
    67a7:	40 80 ff 09          	cmp    $0x9,%dil
    67ab:	0f 94 c1             	sete   %cl
    67ae:	08 c1                	or     %al,%cl
    67b0:	0f b6 c1             	movzbl %cl,%eax
    67b3:	31 c9                	xor    %ecx,%ecx
    67b5:	31 ff                	xor    %edi,%edi
    67b7:	c3                   	ret
    67b8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    67bf:	00 

00000000000067c0 <skip_blank>:
    67c0:	48 8b 06             	mov    (%rsi),%rax
    67c3:	eb 0e                	jmp    67d3 <skip_blank+0x13>
    67c5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    67cc:	00 00 00 00 
    67d0:	48 89 06             	mov    %rax,(%rsi)
    67d3:	48 ff c0             	inc    %rax
    67d6:	0f b6 4c 07 ff       	movzbl -0x1(%rdi,%rax,1),%ecx
    67db:	83 f9 20             	cmp    $0x20,%ecx
    67de:	74 f0                	je     67d0 <skip_blank+0x10>
    67e0:	83 f9 09             	cmp    $0x9,%ecx
    67e3:	74 eb                	je     67d0 <skip_blank+0x10>
    67e5:	31 c0                	xor    %eax,%eax
    67e7:	31 c9                	xor    %ecx,%ecx
    67e9:	31 ff                	xor    %edi,%edi
    67eb:	31 f6                	xor    %esi,%esi
    67ed:	c3                   	ret
    67ee:	66 90                	xchg   %ax,%ax

00000000000067f0 <len_to_delimiter>:
    67f0:	55                   	push   %rbp
    67f1:	41 57                	push   %r15
    67f3:	41 56                	push   %r14
    67f5:	41 55                	push   %r13
    67f7:	41 54                	push   %r12
    67f9:	53                   	push   %rbx
    67fa:	50                   	push   %rax
    67fb:	48 89 f3             	mov    %rsi,%rbx
    67fe:	49 89 fe             	mov    %rdi,%r14
    6801:	48 8d 46 08          	lea    0x8(%rsi),%rax
    6805:	48 89 04 24          	mov    %rax,(%rsp)
    6809:	45 31 ff             	xor    %r15d,%r15d
    680c:	eb 05                	jmp    6813 <len_to_delimiter+0x23>
    680e:	66 90                	xchg   %ax,%ax
    6810:	49 ff c7             	inc    %r15
    6813:	43 0f b6 04 3e       	movzbl (%r14,%r15,1),%eax
    6818:	48 83 f8 20          	cmp    $0x20,%rax
    681c:	77 10                	ja     682e <len_to_delimiter+0x3e>
    681e:	48 b9 01 02 00 00 01 	movabs $0x100000201,%rcx
    6825:	00 00 00 
    6828:	48 0f a3 c1          	bt     %rax,%rcx
    682c:	72 3b                	jb     6869 <len_to_delimiter+0x79>
    682e:	4c 8b 2b             	mov    (%rbx),%r13
    6831:	4d 85 ed             	test   %r13,%r13
    6834:	74 da                	je     6810 <len_to_delimiter+0x20>
    6836:	4f 8d 24 3e          	lea    (%r14,%r15,1),%r12
    683a:	48 8b 2c 24          	mov    (%rsp),%rbp
    683e:	66 90                	xchg   %ax,%ax
    6840:	4c 89 ef             	mov    %r13,%rdi
    6843:	e8 c8 c5 ff ff       	call   2e10 <ft_strlen>
    6848:	4c 89 e7             	mov    %r12,%rdi
    684b:	4c 89 ee             	mov    %r13,%rsi
    684e:	48 89 c2             	mov    %rax,%rdx
    6851:	e8 ea c5 ff ff       	call   2e40 <ft_strncmp>
    6856:	85 c0                	test   %eax,%eax
    6858:	74 0f                	je     6869 <len_to_delimiter+0x79>
    685a:	4c 8b 6d 00          	mov    0x0(%rbp),%r13
    685e:	48 83 c5 08          	add    $0x8,%rbp
    6862:	4d 85 ed             	test   %r13,%r13
    6865:	75 d9                	jne    6840 <len_to_delimiter+0x50>
    6867:	eb a7                	jmp    6810 <len_to_delimiter+0x20>
    6869:	4c 89 f8             	mov    %r15,%rax
    686c:	48 83 c4 08          	add    $0x8,%rsp
    6870:	5b                   	pop    %rbx
    6871:	41 5c                	pop    %r12
    6873:	41 5d                	pop    %r13
    6875:	41 5e                	pop    %r14
    6877:	41 5f                	pop    %r15
    6879:	5d                   	pop    %rbp
    687a:	31 c9                	xor    %ecx,%ecx
    687c:	31 ff                	xor    %edi,%edi
    687e:	31 d2                	xor    %edx,%edx
    6880:	31 f6                	xor    %esi,%esi
    6882:	c3                   	ret
    6883:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    688a:	84 00 00 00 00 00 

0000000000006890 <len_to_unquoted_delimiter>:
    6890:	55                   	push   %rbp
    6891:	41 57                	push   %r15
    6893:	41 56                	push   %r14
    6895:	41 55                	push   %r13
    6897:	41 54                	push   %r12
    6899:	53                   	push   %rbx
    689a:	48 83 ec 18          	sub    $0x18,%rsp
    689e:	0f b6 07             	movzbl (%rdi),%eax
    68a1:	31 c9                	xor    %ecx,%ecx
    68a3:	84 c0                	test   %al,%al
    68a5:	0f 84 c0 00 00 00    	je     696b <len_to_unquoted_delimiter+0xdb>
    68ab:	49 89 ff             	mov    %rdi,%r15
    68ae:	4c 8d 76 08          	lea    0x8(%rsi),%r14
    68b2:	31 db                	xor    %ebx,%ebx
    68b4:	48 89 74 24 10       	mov    %rsi,0x10(%rsp)
    68b9:	4c 89 74 24 08       	mov    %r14,0x8(%rsp)
    68be:	eb 23                	jmp    68e3 <len_to_unquoted_delimiter+0x53>
    68c0:	48 8b 74 24 10       	mov    0x10(%rsp),%rsi
    68c5:	4c 8b 74 24 08       	mov    0x8(%rsp),%r14
    68ca:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    68d0:	41 0f b6 44 1f 01    	movzbl 0x1(%r15,%rbx,1),%eax
    68d6:	48 ff c3             	inc    %rbx
    68d9:	89 e9                	mov    %ebp,%ecx
    68db:	84 c0                	test   %al,%al
    68dd:	0f 84 8a 00 00 00    	je     696d <len_to_unquoted_delimiter+0xdd>
    68e3:	85 c9                	test   %ecx,%ecx
    68e5:	75 09                	jne    68f0 <len_to_unquoted_delimiter+0x60>
    68e7:	bd 01 00 00 00       	mov    $0x1,%ebp
    68ec:	3c 22                	cmp    $0x22,%al
    68ee:	74 e0                	je     68d0 <len_to_unquoted_delimiter+0x40>
    68f0:	85 c9                	test   %ecx,%ecx
    68f2:	75 09                	jne    68fd <len_to_unquoted_delimiter+0x6d>
    68f4:	bd 02 00 00 00       	mov    $0x2,%ebp
    68f9:	3c 27                	cmp    $0x27,%al
    68fb:	74 d3                	je     68d0 <len_to_unquoted_delimiter+0x40>
    68fd:	83 f9 01             	cmp    $0x1,%ecx
    6900:	75 04                	jne    6906 <len_to_unquoted_delimiter+0x76>
    6902:	3c 22                	cmp    $0x22,%al
    6904:	74 23                	je     6929 <len_to_unquoted_delimiter+0x99>
    6906:	3c 27                	cmp    $0x27,%al
    6908:	0f 94 c2             	sete   %dl
    690b:	83 f9 02             	cmp    $0x2,%ecx
    690e:	40 0f 94 c7          	sete   %dil
    6912:	85 c9                	test   %ecx,%ecx
    6914:	74 07                	je     691d <len_to_unquoted_delimiter+0x8d>
    6916:	89 cd                	mov    %ecx,%ebp
    6918:	40 20 d7             	and    %dl,%dil
    691b:	74 b3                	je     68d0 <len_to_unquoted_delimiter+0x40>
    691d:	3c 09                	cmp    $0x9,%al
    691f:	74 4c                	je     696d <len_to_unquoted_delimiter+0xdd>
    6921:	0f b6 c0             	movzbl %al,%eax
    6924:	83 f8 20             	cmp    $0x20,%eax
    6927:	74 44                	je     696d <len_to_unquoted_delimiter+0xdd>
    6929:	4c 8b 2e             	mov    (%rsi),%r13
    692c:	31 ed                	xor    %ebp,%ebp
    692e:	4d 85 ed             	test   %r13,%r13
    6931:	74 9d                	je     68d0 <len_to_unquoted_delimiter+0x40>
    6933:	4d 8d 24 1f          	lea    (%r15,%rbx,1),%r12
    6937:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    693e:	00 00 
    6940:	4c 89 ef             	mov    %r13,%rdi
    6943:	e8 c8 c4 ff ff       	call   2e10 <ft_strlen>
    6948:	4c 89 e7             	mov    %r12,%rdi
    694b:	4c 89 ee             	mov    %r13,%rsi
    694e:	48 89 c2             	mov    %rax,%rdx
    6951:	e8 ea c4 ff ff       	call   2e40 <ft_strncmp>
    6956:	85 c0                	test   %eax,%eax
    6958:	74 13                	je     696d <len_to_unquoted_delimiter+0xdd>
    695a:	4d 8b 2e             	mov    (%r14),%r13
    695d:	49 83 c6 08          	add    $0x8,%r14
    6961:	4d 85 ed             	test   %r13,%r13
    6964:	75 da                	jne    6940 <len_to_unquoted_delimiter+0xb0>
    6966:	e9 55 ff ff ff       	jmp    68c0 <len_to_unquoted_delimiter+0x30>
    696b:	31 db                	xor    %ebx,%ebx
    696d:	48 89 d8             	mov    %rbx,%rax
    6970:	48 83 c4 18          	add    $0x18,%rsp
    6974:	5b                   	pop    %rbx
    6975:	41 5c                	pop    %r12
    6977:	41 5d                	pop    %r13
    6979:	41 5e                	pop    %r14
    697b:	41 5f                	pop    %r15
    697d:	5d                   	pop    %rbp
    697e:	31 c9                	xor    %ecx,%ecx
    6980:	31 ff                	xor    %edi,%edi
    6982:	31 d2                	xor    %edx,%edx
    6984:	31 f6                	xor    %esi,%esi
    6986:	c3                   	ret
    6987:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    698e:	00 00 

0000000000006990 <len_to_quote_or_delimiter>:
    6990:	55                   	push   %rbp
    6991:	41 57                	push   %r15
    6993:	41 56                	push   %r14
    6995:	41 55                	push   %r13
    6997:	41 54                	push   %r12
    6999:	53                   	push   %rbx
    699a:	50                   	push   %rax
    699b:	48 89 f3             	mov    %rsi,%rbx
    699e:	49 89 fe             	mov    %rdi,%r14
    69a1:	48 8d 46 08          	lea    0x8(%rsi),%rax
    69a5:	48 89 04 24          	mov    %rax,(%rsp)
    69a9:	45 31 ff             	xor    %r15d,%r15d
    69ac:	eb 05                	jmp    69b3 <len_to_quote_or_delimiter+0x23>
    69ae:	66 90                	xchg   %ax,%ax
    69b0:	49 ff c7             	inc    %r15
    69b3:	43 0f b6 04 3e       	movzbl (%r14,%r15,1),%eax
    69b8:	48 83 f8 27          	cmp    $0x27,%rax
    69bc:	77 10                	ja     69ce <len_to_quote_or_delimiter+0x3e>
    69be:	48 b9 01 02 00 00 85 	movabs $0x8500000201,%rcx
    69c5:	00 00 00 
    69c8:	48 0f a3 c1          	bt     %rax,%rcx
    69cc:	72 3b                	jb     6a09 <len_to_quote_or_delimiter+0x79>
    69ce:	4c 8b 2b             	mov    (%rbx),%r13
    69d1:	4d 85 ed             	test   %r13,%r13
    69d4:	74 da                	je     69b0 <len_to_quote_or_delimiter+0x20>
    69d6:	4f 8d 24 3e          	lea    (%r14,%r15,1),%r12
    69da:	48 8b 2c 24          	mov    (%rsp),%rbp
    69de:	66 90                	xchg   %ax,%ax
    69e0:	4c 89 ef             	mov    %r13,%rdi
    69e3:	e8 28 c4 ff ff       	call   2e10 <ft_strlen>
    69e8:	4c 89 e7             	mov    %r12,%rdi
    69eb:	4c 89 ee             	mov    %r13,%rsi
    69ee:	48 89 c2             	mov    %rax,%rdx
    69f1:	e8 4a c4 ff ff       	call   2e40 <ft_strncmp>
    69f6:	85 c0                	test   %eax,%eax
    69f8:	74 0f                	je     6a09 <len_to_quote_or_delimiter+0x79>
    69fa:	4c 8b 6d 00          	mov    0x0(%rbp),%r13
    69fe:	48 83 c5 08          	add    $0x8,%rbp
    6a02:	4d 85 ed             	test   %r13,%r13
    6a05:	75 d9                	jne    69e0 <len_to_quote_or_delimiter+0x50>
    6a07:	eb a7                	jmp    69b0 <len_to_quote_or_delimiter+0x20>
    6a09:	4c 89 f8             	mov    %r15,%rax
    6a0c:	48 83 c4 08          	add    $0x8,%rsp
    6a10:	5b                   	pop    %rbx
    6a11:	41 5c                	pop    %r12
    6a13:	41 5d                	pop    %r13
    6a15:	41 5e                	pop    %r14
    6a17:	41 5f                	pop    %r15
    6a19:	5d                   	pop    %rbp
    6a1a:	31 c9                	xor    %ecx,%ecx
    6a1c:	31 ff                	xor    %edi,%edi
    6a1e:	31 d2                	xor    %edx,%edx
    6a20:	31 f6                	xor    %esi,%esi
    6a22:	c3                   	ret
    6a23:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6a2a:	00 00 00 
    6a2d:	0f 1f 00             	nopl   (%rax)

0000000000006a30 <star_forward>:
    6a30:	48 8b 07             	mov    (%rdi),%rax
    6a33:	80 3c 01 00          	cmpb   $0x0,(%rcx,%rax,1)
    6a37:	4c 8b 06             	mov    (%rsi),%r8
    6a3a:	74 0f                	je     6a4b <star_forward+0x1b>
    6a3c:	42 80 3c 02 2a       	cmpb   $0x2a,(%rdx,%r8,1)
    6a41:	75 08                	jne    6a4b <star_forward+0x1b>
    6a43:	42 80 7c 02 01 00    	cmpb   $0x0,0x1(%rdx,%r8,1)
    6a49:	74 76                	je     6ac1 <star_forward+0x91>
    6a4b:	48 01 c1             	add    %rax,%rcx
    6a4e:	41 b9 01 00 00 00    	mov    $0x1,%r9d
    6a54:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    6a5b:	00 00 00 00 00 
    6a60:	46 0f b6 54 02 01    	movzbl 0x1(%rdx,%r8,1),%r10d
    6a66:	49 ff c9             	dec    %r9
    6a69:	49 ff c0             	inc    %r8
    6a6c:	45 84 d2             	test   %r10b,%r10b
    6a6f:	74 11                	je     6a82 <star_forward+0x52>
    6a71:	44 0f b6 19          	movzbl (%rcx),%r11d
    6a75:	45 84 db             	test   %r11b,%r11b
    6a78:	74 08                	je     6a82 <star_forward+0x52>
    6a7a:	48 ff c1             	inc    %rcx
    6a7d:	45 38 d3             	cmp    %r10b,%r11b
    6a80:	74 de                	je     6a60 <star_forward+0x30>
    6a82:	41 80 fa 2a          	cmp    $0x2a,%r10b
    6a86:	75 07                	jne    6a8f <star_forward+0x5f>
    6a88:	4d 85 c9             	test   %r9,%r9
    6a8b:	75 0c                	jne    6a99 <star_forward+0x69>
    6a8d:	eb 15                	jmp    6aa4 <star_forward+0x74>
    6a8f:	4d 85 c9             	test   %r9,%r9
    6a92:	74 10                	je     6aa4 <star_forward+0x74>
    6a94:	45 84 d2             	test   %r10b,%r10b
    6a97:	75 0b                	jne    6aa4 <star_forward+0x74>
    6a99:	4c 89 06             	mov    %r8,(%rsi)
    6a9c:	48 8b 07             	mov    (%rdi),%rax
    6a9f:	4c 29 c8             	sub    %r9,%rax
    6aa2:	eb 03                	jmp    6aa7 <star_forward+0x77>
    6aa4:	48 ff c0             	inc    %rax
    6aa7:	48 89 07             	mov    %rax,(%rdi)
    6aaa:	31 c0                	xor    %eax,%eax
    6aac:	31 c9                	xor    %ecx,%ecx
    6aae:	31 ff                	xor    %edi,%edi
    6ab0:	31 d2                	xor    %edx,%edx
    6ab2:	31 f6                	xor    %esi,%esi
    6ab4:	45 31 c0             	xor    %r8d,%r8d
    6ab7:	45 31 c9             	xor    %r9d,%r9d
    6aba:	45 31 d2             	xor    %r10d,%r10d
    6abd:	45 31 db             	xor    %r11d,%r11d
    6ac0:	c3                   	ret
    6ac1:	48 ff c0             	inc    %rax
    6ac4:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    6acb:	00 00 00 00 00 
    6ad0:	48 89 07             	mov    %rax,(%rdi)
    6ad3:	80 3c 01 00          	cmpb   $0x0,(%rcx,%rax,1)
    6ad7:	48 8d 40 01          	lea    0x1(%rax),%rax
    6adb:	75 f3                	jne    6ad0 <star_forward+0xa0>
    6add:	48 8b 06             	mov    (%rsi),%rax
    6ae0:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
    6ae4:	74 c4                	je     6aaa <star_forward+0x7a>
    6ae6:	48 ff c0             	inc    %rax
    6ae9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
    6af0:	48 89 06             	mov    %rax,(%rsi)
    6af3:	80 3c 02 00          	cmpb   $0x0,(%rdx,%rax,1)
    6af7:	48 8d 40 01          	lea    0x1(%rax),%rax
    6afb:	75 f3                	jne    6af0 <star_forward+0xc0>
    6afd:	eb ab                	jmp    6aaa <star_forward+0x7a>
    6aff:	90                   	nop

0000000000006b00 <star_match>:
    6b00:	53                   	push   %rbx
    6b01:	48 8d 47 01          	lea    0x1(%rdi),%rax
    6b05:	31 c9                	xor    %ecx,%ecx
    6b07:	31 d2                	xor    %edx,%edx
    6b09:	eb 05                	jmp    6b10 <star_match+0x10>
    6b0b:	48 ff c1             	inc    %rcx
    6b0e:	66 90                	xchg   %ax,%ax
    6b10:	44 0f b6 0c 17       	movzbl (%rdi,%rdx,1),%r9d
    6b15:	41 80 f9 2a          	cmp    $0x2a,%r9b
    6b19:	0f 85 a1 00 00 00    	jne    6bc0 <star_match+0xc0>
    6b1f:	4c 8d 42 01          	lea    0x1(%rdx),%r8
    6b23:	80 7c 17 01 2a       	cmpb   $0x2a,0x1(%rdi,%rdx,1)
    6b28:	49 0f 44 d0          	cmove  %r8,%rdx
    6b2c:	4c 8d 04 17          	lea    (%rdi,%rdx,1),%r8
    6b30:	44 0f b6 0c 17       	movzbl (%rdi,%rdx,1),%r9d
    6b35:	41 80 f9 2a          	cmp    $0x2a,%r9b
    6b39:	0f 85 85 00 00 00    	jne    6bc4 <star_match+0xc4>
    6b3f:	80 3c 0e 00          	cmpb   $0x0,(%rsi,%rcx,1)
    6b43:	0f 84 be 00 00 00    	je     6c07 <star_match+0x107>
    6b49:	41 80 78 01 00       	cmpb   $0x0,0x1(%r8)
    6b4e:	74 50                	je     6ba0 <star_match+0xa0>
    6b50:	4c 8d 0c 0e          	lea    (%rsi,%rcx,1),%r9
    6b54:	49 89 c3             	mov    %rax,%r11
    6b57:	45 31 c0             	xor    %r8d,%r8d
    6b5a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6b60:	45 0f b6 14 13       	movzbl (%r11,%rdx,1),%r10d
    6b65:	49 ff c8             	dec    %r8
    6b68:	45 84 d2             	test   %r10b,%r10b
    6b6b:	74 13                	je     6b80 <star_match+0x80>
    6b6d:	41 0f b6 19          	movzbl (%r9),%ebx
    6b71:	84 db                	test   %bl,%bl
    6b73:	74 0b                	je     6b80 <star_match+0x80>
    6b75:	49 ff c3             	inc    %r11
    6b78:	49 ff c1             	inc    %r9
    6b7b:	44 38 d3             	cmp    %r10b,%bl
    6b7e:	74 e0                	je     6b60 <star_match+0x60>
    6b80:	41 80 fa 2a          	cmp    $0x2a,%r10b
    6b84:	75 60                	jne    6be6 <star_match+0xe6>
    6b86:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
    6b8a:	75 6d                	jne    6bf9 <star_match+0xf9>
    6b8c:	e9 7a ff ff ff       	jmp    6b0b <star_match+0xb>
    6b91:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    6b98:	0f 1f 84 00 00 00 00 
    6b9f:	00 
    6ba0:	80 7c 0e 01 00       	cmpb   $0x0,0x1(%rsi,%rcx,1)
    6ba5:	48 8d 49 01          	lea    0x1(%rcx),%rcx
    6ba9:	75 f5                	jne    6ba0 <star_match+0xa0>
    6bab:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)
    6bb0:	80 3c 10 00          	cmpb   $0x0,(%rax,%rdx,1)
    6bb4:	48 8d 52 01          	lea    0x1(%rdx),%rdx
    6bb8:	75 f6                	jne    6bb0 <star_match+0xb0>
    6bba:	e9 51 ff ff ff       	jmp    6b10 <star_match+0x10>
    6bbf:	90                   	nop
    6bc0:	4c 8d 04 17          	lea    (%rdi,%rdx,1),%r8
    6bc4:	44 0f b6 1c 0e       	movzbl (%rsi,%rcx,1),%r11d
    6bc9:	45 31 d2             	xor    %r10d,%r10d
    6bcc:	45 84 db             	test   %r11b,%r11b
    6bcf:	74 3f                	je     6c10 <star_match+0x110>
    6bd1:	45 84 c9             	test   %r9b,%r9b
    6bd4:	74 3a                	je     6c10 <star_match+0x110>
    6bd6:	45 38 d9             	cmp    %r11b,%r9b
    6bd9:	75 35                	jne    6c10 <star_match+0x110>
    6bdb:	48 ff c1             	inc    %rcx
    6bde:	48 ff c2             	inc    %rdx
    6be1:	e9 2a ff ff ff       	jmp    6b10 <star_match+0x10>
    6be6:	49 83 f8 ff          	cmp    $0xffffffffffffffff,%r8
    6bea:	0f 84 1b ff ff ff    	je     6b0b <star_match+0xb>
    6bf0:	45 84 d2             	test   %r10b,%r10b
    6bf3:	0f 85 12 ff ff ff    	jne    6b0b <star_match+0xb>
    6bf9:	4c 29 c2             	sub    %r8,%rdx
    6bfc:	49 f7 d0             	not    %r8
    6bff:	4c 01 c1             	add    %r8,%rcx
    6c02:	e9 09 ff ff ff       	jmp    6b10 <star_match+0x10>
    6c07:	41 b2 01             	mov    $0x1,%r10b
    6c0a:	41 b1 2a             	mov    $0x2a,%r9b
    6c0d:	45 31 db             	xor    %r11d,%r11d
    6c10:	b8 01 00 00 00       	mov    $0x1,%eax
    6c15:	45 08 cb             	or     %r9b,%r11b
    6c18:	74 0e                	je     6c28 <star_match+0x128>
    6c1a:	45 84 d2             	test   %r10b,%r10b
    6c1d:	74 07                	je     6c26 <star_match+0x126>
    6c1f:	41 80 78 01 00       	cmpb   $0x0,0x1(%r8)
    6c24:	74 02                	je     6c28 <star_match+0x128>
    6c26:	31 c0                	xor    %eax,%eax
    6c28:	5b                   	pop    %rbx
    6c29:	31 c9                	xor    %ecx,%ecx
    6c2b:	31 ff                	xor    %edi,%edi
    6c2d:	31 d2                	xor    %edx,%edx
    6c2f:	31 f6                	xor    %esi,%esi
    6c31:	45 31 c0             	xor    %r8d,%r8d
    6c34:	45 31 c9             	xor    %r9d,%r9d
    6c37:	45 31 d2             	xor    %r10d,%r10d
    6c3a:	45 31 db             	xor    %r11d,%r11d
    6c3d:	c3                   	ret
    6c3e:	66 90                	xchg   %ax,%ax

0000000000006c40 <expand_star_append>:
    6c40:	41 57                	push   %r15
    6c42:	41 56                	push   %r14
    6c44:	41 54                	push   %r12
    6c46:	53                   	push   %rbx
    6c47:	48 81 ec 00 10 00 00 	sub    $0x1000,%rsp
    6c4e:	48 c7 04 24 00 00 00 	movq   $0x0,(%rsp)
    6c55:	00 
    6c56:	50                   	push   %rax
    6c57:	48 89 f3             	mov    %rsi,%rbx
    6c5a:	49 89 fe             	mov    %rdi,%r14
    6c5d:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    6c64:	00 00 
    6c66:	48 89 84 24 00 10 00 	mov    %rax,0x1000(%rsp)
    6c6d:	00 
    6c6e:	48 89 e7             	mov    %rsp,%rdi
    6c71:	be 00 10 00 00       	mov    $0x1000,%esi
    6c76:	ba 00 10 00 00       	mov    $0x1000,%edx
    6c7b:	e8 00 a4 ff ff       	call   1080 <__getcwd_chk@plt>
    6c80:	48 85 c0             	test   %rax,%rax
    6c83:	74 7e                	je     6d03 <expand_star_append+0xc3>
    6c85:	48 89 e7             	mov    %rsp,%rdi
    6c88:	e8 23 a4 ff ff       	call   10b0 <opendir@plt>
    6c8d:	48 85 c0             	test   %rax,%rax
    6c90:	74 7d                	je     6d0f <expand_star_append+0xcf>
    6c92:	49 89 c7             	mov    %rax,%r15
    6c95:	48 89 c7             	mov    %rax,%rdi
    6c98:	e8 e3 a4 ff ff       	call   1180 <readdir@plt>
    6c9d:	48 85 c0             	test   %rax,%rax
    6ca0:	74 65                	je     6d07 <expand_star_append+0xc7>
    6ca2:	49 89 c4             	mov    %rax,%r12
    6ca5:	eb 19                	jmp    6cc0 <expand_star_append+0x80>
    6ca7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    6cae:	00 00 
    6cb0:	4c 89 ff             	mov    %r15,%rdi
    6cb3:	e8 c8 a4 ff ff       	call   1180 <readdir@plt>
    6cb8:	49 89 c4             	mov    %rax,%r12
    6cbb:	48 85 c0             	test   %rax,%rax
    6cbe:	74 47                	je     6d07 <expand_star_append+0xc7>
    6cc0:	49 83 c4 13          	add    $0x13,%r12
    6cc4:	4c 89 f7             	mov    %r14,%rdi
    6cc7:	4c 89 e6             	mov    %r12,%rsi
    6cca:	e8 31 fe ff ff       	call   6b00 <star_match>
    6ccf:	85 c0                	test   %eax,%eax
    6cd1:	74 dd                	je     6cb0 <expand_star_append+0x70>
    6cd3:	4c 89 e7             	mov    %r12,%rdi
    6cd6:	e8 c5 bf ff ff       	call   2ca0 <ft_strdup>
    6cdb:	48 85 c0             	test   %rax,%rax
    6cde:	74 1b                	je     6cfb <expand_star_append+0xbb>
    6ce0:	49 89 c4             	mov    %rax,%r12
    6ce3:	48 89 df             	mov    %rbx,%rdi
    6ce6:	48 89 c6             	mov    %rax,%rsi
    6ce9:	e8 c2 ae ff ff       	call   1bb0 <ft_append_arr_str>
    6cee:	48 85 c0             	test   %rax,%rax
    6cf1:	75 bd                	jne    6cb0 <expand_star_append+0x70>
    6cf3:	4c 89 e7             	mov    %r12,%rdi
    6cf6:	e8 45 a3 ff ff       	call   1040 <free@plt>
    6cfb:	4c 89 ff             	mov    %r15,%rdi
    6cfe:	e8 3d a4 ff ff       	call   1140 <closedir@plt>
    6d03:	31 c0                	xor    %eax,%eax
    6d05:	eb 0b                	jmp    6d12 <expand_star_append+0xd2>
    6d07:	4c 89 ff             	mov    %r15,%rdi
    6d0a:	e8 31 a4 ff ff       	call   1140 <closedir@plt>
    6d0f:	48 8b 03             	mov    (%rbx),%rax
    6d12:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    6d19:	00 00 
    6d1b:	48 3b 8c 24 00 10 00 	cmp    0x1000(%rsp),%rcx
    6d22:	00 
    6d23:	75 17                	jne    6d3c <expand_star_append+0xfc>
    6d25:	48 81 c4 08 10 00 00 	add    $0x1008,%rsp
    6d2c:	5b                   	pop    %rbx
    6d2d:	41 5c                	pop    %r12
    6d2f:	41 5e                	pop    %r14
    6d31:	41 5f                	pop    %r15
    6d33:	31 c9                	xor    %ecx,%ecx
    6d35:	31 ff                	xor    %edi,%edi
    6d37:	31 d2                	xor    %edx,%edx
    6d39:	31 f6                	xor    %esi,%esi
    6d3b:	c3                   	ret
    6d3c:	e8 9f a3 ff ff       	call   10e0 <__stack_chk_fail@plt>
    6d41:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6d48:	00 00 00 
    6d4b:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

0000000000006d50 <isbin>:
    6d50:	48 85 f6             	test   %rsi,%rsi
    6d53:	0f 94 c0             	sete   %al
    6d56:	48 85 ff             	test   %rdi,%rdi
    6d59:	0f 94 c1             	sete   %cl
    6d5c:	08 c1                	or     %al,%cl
    6d5e:	74 04                	je     6d64 <isbin+0x14>
    6d60:	31 c0                	xor    %eax,%eax
    6d62:	eb 73                	jmp    6dd7 <isbin+0x87>
    6d64:	41 56                	push   %r14
    6d66:	53                   	push   %rbx
    6d67:	50                   	push   %rax
    6d68:	48 89 fb             	mov    %rdi,%rbx
    6d6b:	48 8d 3d 12 13 00 00 	lea    0x1312(%rip),%rdi        # 8084 <_IO_stdin_used+0x84>
    6d72:	e8 79 bf ff ff       	call   2cf0 <ft_strjoin>
    6d77:	48 85 c0             	test   %rax,%rax
    6d7a:	74 41                	je     6dbd <isbin+0x6d>
    6d7c:	48 89 df             	mov    %rbx,%rdi
    6d7f:	48 89 c6             	mov    %rax,%rsi
    6d82:	48 89 c3             	mov    %rax,%rbx
    6d85:	e8 66 bf ff ff       	call   2cf0 <ft_strjoin>
    6d8a:	49 89 c6             	mov    %rax,%r14
    6d8d:	48 89 df             	mov    %rbx,%rdi
    6d90:	e8 ab a2 ff ff       	call   1040 <free@plt>
    6d95:	4c 89 f0             	mov    %r14,%rax
    6d98:	4d 85 f6             	test   %r14,%r14
    6d9b:	74 16                	je     6db3 <isbin+0x63>
    6d9d:	48 89 c7             	mov    %rax,%rdi
    6da0:	31 f6                	xor    %esi,%esi
    6da2:	48 89 c3             	mov    %rax,%rbx
    6da5:	e8 36 a4 ff ff       	call   11e0 <access@plt>
    6daa:	89 c1                	mov    %eax,%ecx
    6dac:	48 89 d8             	mov    %rbx,%rax
    6daf:	85 c9                	test   %ecx,%ecx
    6db1:	74 1d                	je     6dd0 <isbin+0x80>
    6db3:	48 89 c7             	mov    %rax,%rdi
    6db6:	e8 85 a2 ff ff       	call   1040 <free@plt>
    6dbb:	eb 11                	jmp    6dce <isbin+0x7e>
    6dbd:	48 8d 3d a4 16 00 00 	lea    0x16a4(%rip),%rdi        # 8468 <_IO_stdin_used+0x468>
    6dc4:	be 02 00 00 00       	mov    $0x2,%esi
    6dc9:	e8 c2 b9 ff ff       	call   2790 <ft_putstr_fd>
    6dce:	31 c0                	xor    %eax,%eax
    6dd0:	48 83 c4 08          	add    $0x8,%rsp
    6dd4:	5b                   	pop    %rbx
    6dd5:	41 5e                	pop    %r14
    6dd7:	31 c9                	xor    %ecx,%ecx
    6dd9:	31 ff                	xor    %edi,%edi
    6ddb:	31 f6                	xor    %esi,%esi
    6ddd:	c3                   	ret
    6dde:	66 90                	xchg   %ax,%ax

0000000000006de0 <ft_free_split>:
    6de0:	55                   	push   %rbp
    6de1:	53                   	push   %rbx
    6de2:	50                   	push   %rax
    6de3:	48 89 fb             	mov    %rdi,%rbx
    6de6:	48 85 ff             	test   %rdi,%rdi
    6de9:	74 38                	je     6e23 <ft_free_split+0x43>
    6deb:	48 8b 3b             	mov    (%rbx),%rdi
    6dee:	48 85 ff             	test   %rdi,%rdi
    6df1:	74 2b                	je     6e1e <ft_free_split+0x3e>
    6df3:	31 ed                	xor    %ebp,%ebp
    6df5:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6dfc:	00 00 00 00 
    6e00:	48 63 c5             	movslq %ebp,%rax
    6e03:	48 8b 04 c7          	mov    (%rdi,%rax,8),%rax
    6e07:	48 85 c0             	test   %rax,%rax
    6e0a:	74 12                	je     6e1e <ft_free_split+0x3e>
    6e0c:	48 89 c7             	mov    %rax,%rdi
    6e0f:	e8 2c a2 ff ff       	call   1040 <free@plt>
    6e14:	ff c5                	inc    %ebp
    6e16:	48 8b 3b             	mov    (%rbx),%rdi
    6e19:	48 85 ff             	test   %rdi,%rdi
    6e1c:	75 e2                	jne    6e00 <ft_free_split+0x20>
    6e1e:	e8 1d a2 ff ff       	call   1040 <free@plt>
    6e23:	48 c7 03 00 00 00 00 	movq   $0x0,(%rbx)
    6e2a:	48 83 c4 08          	add    $0x8,%rsp
    6e2e:	5b                   	pop    %rbx
    6e2f:	5d                   	pop    %rbp
    6e30:	31 c0                	xor    %eax,%eax
    6e32:	31 ff                	xor    %edi,%edi
    6e34:	c3                   	ret
    6e35:	66 66 2e 0f 1f 84 00 	data16 cs nopw 0x0(%rax,%rax,1)
    6e3c:	00 00 00 00 

0000000000006e40 <get_env_path>:
    6e40:	55                   	push   %rbp
    6e41:	41 57                	push   %r15
    6e43:	41 56                	push   %r14
    6e45:	41 54                	push   %r12
    6e47:	53                   	push   %rbx
    6e48:	48 89 fb             	mov    %rdi,%rbx
    6e4b:	48 8b 3f             	mov    (%rdi),%rdi
    6e4e:	48 85 ff             	test   %rdi,%rdi
    6e51:	74 1b                	je     6e6e <get_env_path+0x2e>
    6e53:	48 8d 35 1d 16 00 00 	lea    0x161d(%rip),%rsi        # 8477 <_IO_stdin_used+0x477>
    6e5a:	ba 05 00 00 00       	mov    $0x5,%edx
    6e5f:	e8 2c c0 ff ff       	call   2e90 <ft_strnstr>
    6e64:	48 85 c0             	test   %rax,%rax
    6e67:	74 0a                	je     6e73 <get_env_path+0x33>
    6e69:	45 31 e4             	xor    %r12d,%r12d
    6e6c:	eb 42                	jmp    6eb0 <get_env_path+0x70>
    6e6e:	45 31 f6             	xor    %r14d,%r14d
    6e71:	eb 41                	jmp    6eb4 <get_env_path+0x74>
    6e73:	bd 01 00 00 00       	mov    $0x1,%ebp
    6e78:	45 31 f6             	xor    %r14d,%r14d
    6e7b:	4c 8d 3d f5 15 00 00 	lea    0x15f5(%rip),%r15        # 8477 <_IO_stdin_used+0x477>
    6e82:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    6e89:	1f 84 00 00 00 00 00 
    6e90:	4c 63 e5             	movslq %ebp,%r12
    6e93:	4a 8b 3c e3          	mov    (%rbx,%r12,8),%rdi
    6e97:	48 85 ff             	test   %rdi,%rdi
    6e9a:	74 18                	je     6eb4 <get_env_path+0x74>
    6e9c:	ba 05 00 00 00       	mov    $0x5,%edx
    6ea1:	4c 89 fe             	mov    %r15,%rsi
    6ea4:	e8 e7 bf ff ff       	call   2e90 <ft_strnstr>
    6ea9:	ff c5                	inc    %ebp
    6eab:	48 85 c0             	test   %rax,%rax
    6eae:	74 e0                	je     6e90 <get_env_path+0x50>
    6eb0:	4e 8b 34 e3          	mov    (%rbx,%r12,8),%r14
    6eb4:	4c 89 f0             	mov    %r14,%rax
    6eb7:	5b                   	pop    %rbx
    6eb8:	41 5c                	pop    %r12
    6eba:	41 5e                	pop    %r14
    6ebc:	41 5f                	pop    %r15
    6ebe:	5d                   	pop    %rbp
    6ebf:	31 ff                	xor    %edi,%edi
    6ec1:	31 d2                	xor    %edx,%edx
    6ec3:	31 f6                	xor    %esi,%esi
    6ec5:	c3                   	ret
    6ec6:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    6ecd:	00 00 00 

0000000000006ed0 <get_path_path>:
    6ed0:	55                   	push   %rbp
    6ed1:	41 57                	push   %r15
    6ed3:	41 56                	push   %r14
    6ed5:	41 55                	push   %r13
    6ed7:	41 54                	push   %r12
    6ed9:	53                   	push   %rbx
    6eda:	50                   	push   %rax
    6edb:	48 89 f3             	mov    %rsi,%rbx
    6ede:	49 89 fe             	mov    %rdi,%r14
    6ee1:	48 8b 3f             	mov    (%rdi),%rdi
    6ee4:	48 85 ff             	test   %rdi,%rdi
    6ee7:	74 1b                	je     6f04 <get_path_path+0x34>
    6ee9:	48 8d 35 87 15 00 00 	lea    0x1587(%rip),%rsi        # 8477 <_IO_stdin_used+0x477>
    6ef0:	ba 05 00 00 00       	mov    $0x5,%edx
    6ef5:	e8 96 bf ff ff       	call   2e90 <ft_strnstr>
    6efa:	48 85 c0             	test   %rax,%rax
    6efd:	74 0a                	je     6f09 <get_path_path+0x39>
    6eff:	45 31 ed             	xor    %r13d,%r13d
    6f02:	eb 3c                	jmp    6f40 <get_path_path+0x70>
    6f04:	45 31 ff             	xor    %r15d,%r15d
    6f07:	eb 3b                	jmp    6f44 <get_path_path+0x74>
    6f09:	bd 01 00 00 00       	mov    $0x1,%ebp
    6f0e:	45 31 ff             	xor    %r15d,%r15d
    6f11:	4c 8d 25 5f 15 00 00 	lea    0x155f(%rip),%r12        # 8477 <_IO_stdin_used+0x477>
    6f18:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    6f1f:	00 
    6f20:	4c 63 ed             	movslq %ebp,%r13
    6f23:	4b 8b 3c ee          	mov    (%r14,%r13,8),%rdi
    6f27:	48 85 ff             	test   %rdi,%rdi
    6f2a:	74 18                	je     6f44 <get_path_path+0x74>
    6f2c:	ba 05 00 00 00       	mov    $0x5,%edx
    6f31:	4c 89 e6             	mov    %r12,%rsi
    6f34:	e8 57 bf ff ff       	call   2e90 <ft_strnstr>
    6f39:	ff c5                	inc    %ebp
    6f3b:	48 85 c0             	test   %rax,%rax
    6f3e:	74 e0                	je     6f20 <get_path_path+0x50>
    6f40:	4f 8b 3c ee          	mov    (%r14,%r13,8),%r15
    6f44:	49 83 c7 05          	add    $0x5,%r15
    6f48:	4c 89 ff             	mov    %r15,%rdi
    6f4b:	be 3a 00 00 00       	mov    $0x3a,%esi
    6f50:	e8 cb bb ff ff       	call   2b20 <ft_split>
    6f55:	49 89 c6             	mov    %rax,%r14
    6f58:	48 85 c0             	test   %rax,%rax
    6f5b:	74 68                	je     6fc5 <get_path_path+0xf5>
    6f5d:	49 8b 3e             	mov    (%r14),%rdi
    6f60:	48 85 ff             	test   %rdi,%rdi
    6f63:	74 65                	je     6fca <get_path_path+0xfa>
    6f65:	41 bc 01 00 00 00    	mov    $0x1,%r12d
    6f6b:	eb 12                	jmp    6f7f <get_path_path+0xaf>
    6f6d:	0f 1f 00             	nopl   (%rax)
    6f70:	4d 63 e4             	movslq %r12d,%r12
    6f73:	4b 8b 3c e6          	mov    (%r14,%r12,8),%rdi
    6f77:	41 ff c4             	inc    %r12d
    6f7a:	48 85 ff             	test   %rdi,%rdi
    6f7d:	74 4e                	je     6fcd <get_path_path+0xfd>
    6f7f:	48 89 de             	mov    %rbx,%rsi
    6f82:	e8 c9 fd ff ff       	call   6d50 <isbin>
    6f87:	49 89 c7             	mov    %rax,%r15
    6f8a:	48 85 c0             	test   %rax,%rax
    6f8d:	74 e1                	je     6f70 <get_path_path+0xa0>
    6f8f:	4c 89 ff             	mov    %r15,%rdi
    6f92:	be 01 00 00 00       	mov    $0x1,%esi
    6f97:	e8 44 a2 ff ff       	call   11e0 <access@plt>
    6f9c:	85 c0                	test   %eax,%eax
    6f9e:	75 d0                	jne    6f70 <get_path_path+0xa0>
    6fa0:	49 8b 3e             	mov    (%r14),%rdi
    6fa3:	48 85 ff             	test   %rdi,%rdi
    6fa6:	74 4b                	je     6ff3 <get_path_path+0x123>
    6fa8:	bb 01 00 00 00       	mov    $0x1,%ebx
    6fad:	0f 1f 00             	nopl   (%rax)
    6fb0:	e8 8b a0 ff ff       	call   1040 <free@plt>
    6fb5:	48 63 db             	movslq %ebx,%rbx
    6fb8:	49 8b 3c de          	mov    (%r14,%rbx,8),%rdi
    6fbc:	ff c3                	inc    %ebx
    6fbe:	48 85 ff             	test   %rdi,%rdi
    6fc1:	75 ed                	jne    6fb0 <get_path_path+0xe0>
    6fc3:	eb 2e                	jmp    6ff3 <get_path_path+0x123>
    6fc5:	45 31 ff             	xor    %r15d,%r15d
    6fc8:	eb 29                	jmp    6ff3 <get_path_path+0x123>
    6fca:	45 31 ff             	xor    %r15d,%r15d
    6fcd:	49 8b 3e             	mov    (%r14),%rdi
    6fd0:	48 85 ff             	test   %rdi,%rdi
    6fd3:	74 1e                	je     6ff3 <get_path_path+0x123>
    6fd5:	bb 01 00 00 00       	mov    $0x1,%ebx
    6fda:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
    6fe0:	e8 5b a0 ff ff       	call   1040 <free@plt>
    6fe5:	48 63 db             	movslq %ebx,%rbx
    6fe8:	49 8b 3c de          	mov    (%r14,%rbx,8),%rdi
    6fec:	ff c3                	inc    %ebx
    6fee:	48 85 ff             	test   %rdi,%rdi
    6ff1:	75 ed                	jne    6fe0 <get_path_path+0x110>
    6ff3:	4c 89 f7             	mov    %r14,%rdi
    6ff6:	e8 45 a0 ff ff       	call   1040 <free@plt>
    6ffb:	4c 89 f8             	mov    %r15,%rax
    6ffe:	48 83 c4 08          	add    $0x8,%rsp
    7002:	5b                   	pop    %rbx
    7003:	41 5c                	pop    %r12
    7005:	41 5d                	pop    %r13
    7007:	41 5e                	pop    %r14
    7009:	41 5f                	pop    %r15
    700b:	5d                   	pop    %rbp
    700c:	31 ff                	xor    %edi,%edi
    700e:	31 d2                	xor    %edx,%edx
    7010:	31 f6                	xor    %esi,%esi
    7012:	c3                   	ret
    7013:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    701a:	84 00 00 00 00 00 

0000000000007020 <get_path>:
    7020:	41 56                	push   %r14
    7022:	53                   	push   %rbx
    7023:	50                   	push   %rax
    7024:	48 89 f3             	mov    %rsi,%rbx
    7027:	49 89 fe             	mov    %rdi,%r14
    702a:	48 89 f7             	mov    %rsi,%rdi
    702d:	be 2f 00 00 00       	mov    $0x2f,%esi
    7032:	e8 29 bc ff ff       	call   2c60 <ft_strchr>
    7037:	48 85 c0             	test   %rax,%rax
    703a:	74 29                	je     7065 <get_path+0x45>
    703c:	48 89 df             	mov    %rbx,%rdi
    703f:	31 f6                	xor    %esi,%esi
    7041:	e8 9a a1 ff ff       	call   11e0 <access@plt>
    7046:	85 c0                	test   %eax,%eax
    7048:	74 2d                	je     7077 <get_path+0x57>
    704a:	48 8d 3d 2c 14 00 00 	lea    0x142c(%rip),%rdi        # 847d <_IO_stdin_used+0x47d>
    7051:	be 02 00 00 00       	mov    $0x2,%esi
    7056:	e8 35 b7 ff ff       	call   2790 <ft_putstr_fd>
    705b:	31 c0                	xor    %eax,%eax
    705d:	48 83 c4 08          	add    $0x8,%rsp
    7061:	5b                   	pop    %rbx
    7062:	41 5e                	pop    %r14
    7064:	c3                   	ret
    7065:	4c 89 f7             	mov    %r14,%rdi
    7068:	48 89 de             	mov    %rbx,%rsi
    706b:	48 83 c4 08          	add    $0x8,%rsp
    706f:	5b                   	pop    %rbx
    7070:	41 5e                	pop    %r14
    7072:	e9 59 fe ff ff       	jmp    6ed0 <get_path_path>
    7077:	48 89 df             	mov    %rbx,%rdi
    707a:	48 83 c4 08          	add    $0x8,%rsp
    707e:	5b                   	pop    %rbx
    707f:	41 5e                	pop    %r14
    7081:	e9 1a bc ff ff       	jmp    2ca0 <ft_strdup>
    7086:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    708d:	00 00 00 

0000000000007090 <execute>:
    7090:	48 85 ff             	test   %rdi,%rdi
    7093:	74 22                	je     70b7 <execute+0x27>
    7095:	8b 47 18             	mov    0x18(%rdi),%eax
    7098:	48 83 f8 04          	cmp    $0x4,%rax
    709c:	77 19                	ja     70b7 <execute+0x27>
    709e:	48 8d 0d 7b 17 00 00 	lea    0x177b(%rip),%rcx        # 8820 <_IO_stdin_used+0x820>
    70a5:	48 63 04 81          	movslq (%rcx,%rax,4),%rax
    70a9:	48 01 c8             	add    %rcx,%rax
    70ac:	ff e0                	jmp    *%rax
    70ae:	31 c0                	xor    %eax,%eax
    70b0:	31 c9                	xor    %ecx,%ecx
    70b2:	e9 69 09 00 00       	jmp    7a20 <ft_command>
    70b7:	31 c0                	xor    %eax,%eax
    70b9:	31 c9                	xor    %ecx,%ecx
    70bb:	c3                   	ret
    70bc:	31 c0                	xor    %eax,%eax
    70be:	31 c9                	xor    %ecx,%ecx
    70c0:	e9 1b 0d 00 00       	jmp    7de0 <ft_subshell>
    70c5:	31 c0                	xor    %eax,%eax
    70c7:	31 c9                	xor    %ecx,%ecx
    70c9:	e9 e2 00 00 00       	jmp    71b0 <ft_and>
    70ce:	31 c0                	xor    %eax,%eax
    70d0:	31 c9                	xor    %ecx,%ecx
    70d2:	e9 c9 09 00 00       	jmp    7aa0 <ft_or>
    70d7:	31 c0                	xor    %eax,%eax
    70d9:	31 c9                	xor    %ecx,%ecx
    70db:	e9 20 0b 00 00       	jmp    7c00 <ft_pipe>

00000000000070e0 <wait_and_get_exit_value>:
    70e0:	53                   	push   %rbx
    70e1:	48 83 ec 10          	sub    $0x10,%rsp
    70e5:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    70ec:	00 00 
    70ee:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    70f3:	48 85 ff             	test   %rdi,%rdi
    70f6:	74 33                	je     712b <wait_and_get_exit_value+0x4b>
    70f8:	8b 47 08             	mov    0x8(%rdi),%eax
    70fb:	48 8b 0f             	mov    (%rdi),%rcx
    70fe:	83 f8 ff             	cmp    $0xffffffff,%eax
    7101:	74 46                	je     7149 <wait_and_get_exit_value+0x69>
    7103:	48 85 c9             	test   %rcx,%rcx
    7106:	74 64                	je     716c <wait_and_get_exit_value+0x8c>
    7108:	48 89 fb             	mov    %rdi,%rbx
    710b:	89 c7                	mov    %eax,%edi
    710d:	31 f6                	xor    %esi,%esi
    710f:	31 d2                	xor    %edx,%edx
    7111:	e8 aa a0 ff ff       	call   11c0 <waitpid@plt>
    7116:	48 8b 3b             	mov    (%rbx),%rdi
    7119:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7120:	00 00 
    7122:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
    7127:	74 33                	je     715c <wait_and_get_exit_value+0x7c>
    7129:	eb 77                	jmp    71a2 <wait_and_get_exit_value+0xc2>
    712b:	31 c0                	xor    %eax,%eax
    712d:	64 48 8b 0c 25 28 00 	mov    %fs:0x28,%rcx
    7134:	00 00 
    7136:	48 3b 4c 24 08       	cmp    0x8(%rsp),%rcx
    713b:	75 65                	jne    71a2 <wait_and_get_exit_value+0xc2>
    713d:	48 83 c4 10          	add    $0x10,%rsp
    7141:	5b                   	pop    %rbx
    7142:	31 c9                	xor    %ecx,%ecx
    7144:	31 d2                	xor    %edx,%edx
    7146:	31 f6                	xor    %esi,%esi
    7148:	c3                   	ret
    7149:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7150:	00 00 
    7152:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
    7157:	75 49                	jne    71a2 <wait_and_get_exit_value+0xc2>
    7159:	48 89 cf             	mov    %rcx,%rdi
    715c:	48 83 c4 10          	add    $0x10,%rsp
    7160:	5b                   	pop    %rbx
    7161:	31 c9                	xor    %ecx,%ecx
    7163:	31 d2                	xor    %edx,%edx
    7165:	31 f6                	xor    %esi,%esi
    7167:	e9 74 ff ff ff       	jmp    70e0 <wait_and_get_exit_value>
    716c:	48 8d 74 24 04       	lea    0x4(%rsp),%rsi
    7171:	89 c7                	mov    %eax,%edi
    7173:	31 d2                	xor    %edx,%edx
    7175:	e8 46 a0 ff ff       	call   11c0 <waitpid@plt>
    717a:	8b 4c 24 04          	mov    0x4(%rsp),%ecx
    717e:	89 c8                	mov    %ecx,%eax
    7180:	83 e0 7f             	and    $0x7f,%eax
    7183:	89 c2                	mov    %eax,%edx
    7185:	c1 e2 18             	shl    $0x18,%edx
    7188:	81 c2 00 00 00 01    	add    $0x1000000,%edx
    718e:	81 fa 00 00 00 02    	cmp    $0x2000000,%edx
    7194:	7c 07                	jl     719d <wait_and_get_exit_value+0xbd>
    7196:	0d 80 00 00 00       	or     $0x80,%eax
    719b:	eb 90                	jmp    712d <wait_and_get_exit_value+0x4d>
    719d:	0f b6 c5             	movzbl %ch,%eax
    71a0:	eb 8b                	jmp    712d <wait_and_get_exit_value+0x4d>
    71a2:	e8 39 9f ff ff       	call   10e0 <__stack_chk_fail@plt>
    71a7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    71ae:	00 00 

00000000000071b0 <ft_and>:
    71b0:	55                   	push   %rbp
    71b1:	41 57                	push   %r15
    71b3:	41 56                	push   %r14
    71b5:	53                   	push   %rbx
    71b6:	50                   	push   %rax
    71b7:	48 89 f3             	mov    %rsi,%rbx
    71ba:	49 89 fe             	mov    %rdi,%r14
    71bd:	48 8b 3f             	mov    (%rdi),%rdi
    71c0:	e8 cb fe ff ff       	call   7090 <execute>
    71c5:	4c 8d 7b 10          	lea    0x10(%rbx),%r15
    71c9:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    71cd:	e8 0e ff ff ff       	call   70e0 <wait_and_get_exit_value>
    71d2:	89 c5                	mov    %eax,%ebp
    71d4:	4c 89 ff             	mov    %r15,%rdi
    71d7:	e8 44 c0 ff ff       	call   3220 <free_pids>
    71dc:	85 ed                	test   %ebp,%ebp
    71de:	74 0d                	je     71ed <ft_and+0x3d>
    71e0:	48 83 c4 08          	add    $0x8,%rsp
    71e4:	5b                   	pop    %rbx
    71e5:	41 5e                	pop    %r14
    71e7:	41 5f                	pop    %r15
    71e9:	5d                   	pop    %rbp
    71ea:	31 c0                	xor    %eax,%eax
    71ec:	c3                   	ret
    71ed:	49 8b 7e 08          	mov    0x8(%r14),%rdi
    71f1:	48 89 de             	mov    %rbx,%rsi
    71f4:	48 83 c4 08          	add    $0x8,%rsp
    71f8:	5b                   	pop    %rbx
    71f9:	41 5e                	pop    %r14
    71fb:	41 5f                	pop    %r15
    71fd:	5d                   	pop    %rbp
    71fe:	31 c0                	xor    %eax,%eax
    7200:	e9 8b fe ff ff       	jmp    7090 <execute>
    7205:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    720c:	00 00 00 
    720f:	90                   	nop

0000000000007210 <ft_execve>:
    7210:	41 57                	push   %r15
    7212:	41 56                	push   %r14
    7214:	53                   	push   %rbx
    7215:	48 89 f3             	mov    %rsi,%rbx
    7218:	49 89 fe             	mov    %rdi,%r14
    721b:	bf 02 00 00 00       	mov    $0x2,%edi
    7220:	31 f6                	xor    %esi,%esi
    7222:	e8 49 9f ff ff       	call   1170 <signal@plt>
    7227:	be 01 00 00 00       	mov    $0x1,%esi
    722c:	bf 03 00 00 00       	mov    $0x3,%edi
    7231:	e8 3a 9f ff ff       	call   1170 <signal@plt>
    7236:	4c 89 f7             	mov    %r14,%rdi
    7239:	e8 b2 00 00 00       	call   72f0 <redirection>
    723e:	85 c0                	test   %eax,%eax
    7240:	74 0f                	je     7251 <ft_execve+0x41>
    7242:	48 8d 35 53 12 00 00 	lea    0x1253(%rip),%rsi        # 849c <_IO_stdin_used+0x49c>
    7249:	48 89 df             	mov    %rbx,%rdi
    724c:	e8 0f c9 ff ff       	call   3b60 <ft_exit>
    7251:	48 8b 3b             	mov    (%rbx),%rdi
    7254:	49 8b 46 10          	mov    0x10(%r14),%rax
    7258:	48 8b 30             	mov    (%rax),%rsi
    725b:	e8 c0 fd ff ff       	call   7020 <get_path>
    7260:	49 89 c7             	mov    %rax,%r15
    7263:	48 85 c0             	test   %rax,%rax
    7266:	75 33                	jne    729b <ft_execve+0x8b>
    7268:	48 8d 3d 2f 12 00 00 	lea    0x122f(%rip),%rdi        # 849e <_IO_stdin_used+0x49e>
    726f:	e8 4c b5 ff ff       	call   27c0 <ft_putstrerr>
    7274:	49 8b 46 10          	mov    0x10(%r14),%rax
    7278:	48 8b 38             	mov    (%rax),%rdi
    727b:	e8 40 b5 ff ff       	call   27c0 <ft_putstrerr>
    7280:	48 8d 3d 1f 12 00 00 	lea    0x121f(%rip),%rdi        # 84a6 <_IO_stdin_used+0x4a6>
    7287:	e8 34 b5 ff ff       	call   27c0 <ft_putstrerr>
    728c:	48 8d 35 1f 12 00 00 	lea    0x121f(%rip),%rsi        # 84b2 <_IO_stdin_used+0x4b2>
    7293:	48 89 df             	mov    %rbx,%rdi
    7296:	e8 c5 c8 ff ff       	call   3b60 <ft_exit>
    729b:	49 8b 76 10          	mov    0x10(%r14),%rsi
    729f:	48 8b 13             	mov    (%rbx),%rdx
    72a2:	4c 89 ff             	mov    %r15,%rdi
    72a5:	e8 a6 9e ff ff       	call   1150 <execve@plt>
    72aa:	48 8d 3d ed 11 00 00 	lea    0x11ed(%rip),%rdi        # 849e <_IO_stdin_used+0x49e>
    72b1:	e8 0a b5 ff ff       	call   27c0 <ft_putstrerr>
    72b6:	4c 89 ff             	mov    %r15,%rdi
    72b9:	e8 02 b5 ff ff       	call   27c0 <ft_putstrerr>
    72be:	48 8d 3d f1 11 00 00 	lea    0x11f1(%rip),%rdi        # 84b6 <_IO_stdin_used+0x4b6>
    72c5:	e8 f6 b4 ff ff       	call   27c0 <ft_putstrerr>
    72ca:	4c 89 ff             	mov    %r15,%rdi
    72cd:	e8 6e 9d ff ff       	call   1040 <free@plt>
    72d2:	48 8d 35 ee 11 00 00 	lea    0x11ee(%rip),%rsi        # 84c7 <_IO_stdin_used+0x4c7>
    72d9:	48 89 df             	mov    %rbx,%rdi
    72dc:	5b                   	pop    %rbx
    72dd:	41 5e                	pop    %r14
    72df:	41 5f                	pop    %r15
    72e1:	31 c0                	xor    %eax,%eax
    72e3:	31 d2                	xor    %edx,%edx
    72e5:	e9 76 c8 ff ff       	jmp    3b60 <ft_exit>
    72ea:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

00000000000072f0 <redirection>:
    72f0:	53                   	push   %rbx
    72f1:	48 89 fb             	mov    %rdi,%rbx
    72f4:	48 8b 7f 20          	mov    0x20(%rdi),%rdi
    72f8:	48 85 ff             	test   %rdi,%rdi
    72fb:	74 14                	je     7311 <redirection+0x21>
    72fd:	31 f6                	xor    %esi,%esi
    72ff:	e8 9c 9d ff ff       	call   10a0 <__open_2@plt>
    7304:	85 c0                	test   %eax,%eax
    7306:	7f 43                	jg     734b <redirection+0x5b>
    7308:	89 c7                	mov    %eax,%edi
    730a:	31 f6                	xor    %esi,%esi
    730c:	e8 df 9d ff ff       	call   10f0 <dup2@plt>
    7311:	48 8b 7b 28          	mov    0x28(%rbx),%rdi
    7315:	48 85 ff             	test   %rdi,%rdi
    7318:	74 2d                	je     7347 <redirection+0x57>
    731a:	31 f6                	xor    %esi,%esi
    731c:	83 7b 30 00          	cmpl   $0x0,0x30(%rbx)
    7320:	40 0f 95 c6          	setne  %sil
    7324:	c1 e6 0a             	shl    $0xa,%esi
    7327:	83 ce 41             	or     $0x41,%esi
    732a:	ba ff 01 00 00       	mov    $0x1ff,%edx
    732f:	31 c0                	xor    %eax,%eax
    7331:	e8 9a 9e ff ff       	call   11d0 <open@plt>
    7336:	83 f8 ff             	cmp    $0xffffffff,%eax
    7339:	74 10                	je     734b <redirection+0x5b>
    733b:	89 c7                	mov    %eax,%edi
    733d:	be 01 00 00 00       	mov    $0x1,%esi
    7342:	e8 a9 9d ff ff       	call   10f0 <dup2@plt>
    7347:	31 c0                	xor    %eax,%eax
    7349:	eb 11                	jmp    735c <redirection+0x6c>
    734b:	48 8d 3d b3 11 00 00 	lea    0x11b3(%rip),%rdi        # 8505 <_IO_stdin_used+0x505>
    7352:	e8 69 b4 ff ff       	call   27c0 <ft_putstrerr>
    7357:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
    735c:	5b                   	pop    %rbx
    735d:	31 ff                	xor    %edi,%edi
    735f:	31 d2                	xor    %edx,%edx
    7361:	31 f6                	xor    %esi,%esi
    7363:	c3                   	ret
    7364:	66 66 66 2e 0f 1f 84 	data16 data16 cs nopw 0x0(%rax,%rax,1)
    736b:	00 00 00 00 00 

0000000000007370 <echo_maker>:
    7370:	53                   	push   %rbx
    7371:	48 89 fb             	mov    %rdi,%rbx
    7374:	48 8b 47 10          	mov    0x10(%rdi),%rax
    7378:	48 8b 50 08          	mov    0x8(%rax),%rdx
    737c:	48 8d 3d 48 11 00 00 	lea    0x1148(%rip),%rdi        # 84cb <_IO_stdin_used+0x4cb>
    7383:	31 c0                	xor    %eax,%eax
    7385:	e8 46 00 00 00       	call   73d0 <_ZL6printfPKcU17pass_object_size1z>
    738a:	48 8b 43 10          	mov    0x10(%rbx),%rax
    738e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7392:	48 8d 3d 79 0c 00 00 	lea    0xc79(%rip),%rdi        # 8012 <_IO_stdin_used+0x12>
    7399:	31 c0                	xor    %eax,%eax
    739b:	e8 30 00 00 00       	call   73d0 <_ZL6printfPKcU17pass_object_size1z>
    73a0:	48 8d 3d 28 11 00 00 	lea    0x1128(%rip),%rdi        # 84cf <_IO_stdin_used+0x4cf>
    73a7:	ba 01 00 00 00       	mov    $0x1,%edx
    73ac:	31 c0                	xor    %eax,%eax
    73ae:	e8 1d 00 00 00       	call   73d0 <_ZL6printfPKcU17pass_object_size1z>
    73b3:	48 8b 43 10          	mov    0x10(%rbx),%rax
    73b7:	48 8b 78 08          	mov    0x8(%rax),%rdi
    73bb:	48 8d 35 18 11 00 00 	lea    0x1118(%rip),%rsi        # 84da <_IO_stdin_used+0x4da>
    73c2:	ba 03 00 00 00       	mov    $0x3,%edx
    73c7:	e8 74 ba ff ff       	call   2e40 <ft_strncmp>
    73cc:	0f 1f 40 00          	nopl   0x0(%rax)

00000000000073d0 <_ZL6printfPKcU17pass_object_size1z>:
    73d0:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    73d7:	48 89 fe             	mov    %rdi,%rsi
    73da:	48 89 54 24 10       	mov    %rdx,0x10(%rsp)
    73df:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    73e4:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    73e9:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    73ee:	84 c0                	test   %al,%al
    73f0:	74 31                	je     7423 <_ZL6printfPKcU17pass_object_size1z+0x53>
    73f2:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    73f7:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
    73fc:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
    7401:	0f 29 5c 24 60       	movaps %xmm3,0x60(%rsp)
    7406:	0f 29 64 24 70       	movaps %xmm4,0x70(%rsp)
    740b:	0f 29 ac 24 80 00 00 	movaps %xmm5,0x80(%rsp)
    7412:	00 
    7413:	0f 29 b4 24 90 00 00 	movaps %xmm6,0x90(%rsp)
    741a:	00 
    741b:	0f 29 bc 24 a0 00 00 	movaps %xmm7,0xa0(%rsp)
    7422:	00 
    7423:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    742a:	00 00 
    742c:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
    7433:	00 
    7434:	48 89 e0             	mov    %rsp,%rax
    7437:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    743e:	00 
    743f:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
    7446:	00 
    7447:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    744e:	00 
    744f:	48 b8 10 00 00 00 30 	movabs $0x3000000010,%rax
    7456:	00 00 00 
    7459:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
    7460:	00 
    7461:	48 8d 94 24 b0 00 00 	lea    0xb0(%rsp),%rdx
    7468:	00 
    7469:	bf 01 00 00 00       	mov    $0x1,%edi
    746e:	e8 ed 9b ff ff       	call   1060 <__vprintf_chk@plt>
    7473:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    747a:	00 00 
    747c:	48 3b 84 24 d0 00 00 	cmp    0xd0(%rsp),%rax
    7483:	00 
    7484:	75 18                	jne    749e <_ZL6printfPKcU17pass_object_size1z+0xce>
    7486:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    748d:	31 c0                	xor    %eax,%eax
    748f:	31 c9                	xor    %ecx,%ecx
    7491:	31 ff                	xor    %edi,%edi
    7493:	31 d2                	xor    %edx,%edx
    7495:	31 f6                	xor    %esi,%esi
    7497:	45 31 c0             	xor    %r8d,%r8d
    749a:	45 31 c9             	xor    %r9d,%r9d
    749d:	c3                   	ret
    749e:	e8 3d 9c ff ff       	call   10e0 <__stack_chk_fail@plt>
    74a3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    74aa:	84 00 00 00 00 00 

00000000000074b0 <echo_wrap>:
    74b0:	55                   	push   %rbp
    74b1:	41 56                	push   %r14
    74b3:	53                   	push   %rbx
    74b4:	49 89 f6             	mov    %rsi,%r14
    74b7:	48 89 fb             	mov    %rdi,%rbx
    74ba:	48 83 7f 20 00       	cmpq   $0x0,0x20(%rdi)
    74bf:	75 07                	jne    74c8 <echo_wrap+0x18>
    74c1:	48 83 7b 28 00       	cmpq   $0x0,0x28(%rbx)
    74c6:	74 52                	je     751a <echo_wrap+0x6a>
    74c8:	48 8d 3d 0e 10 00 00 	lea    0x100e(%rip),%rdi        # 84dd <_IO_stdin_used+0x4dd>
    74cf:	31 c0                	xor    %eax,%eax
    74d1:	e8 fa fe ff ff       	call   73d0 <_ZL6printfPKcU17pass_object_size1z>
    74d6:	e8 35 9d ff ff       	call   1210 <fork@plt>
    74db:	89 c5                	mov    %eax,%ebp
    74dd:	bf 02 00 00 00       	mov    $0x2,%edi
    74e2:	31 f6                	xor    %esi,%esi
    74e4:	e8 87 9c ff ff       	call   1170 <signal@plt>
    74e9:	be 01 00 00 00       	mov    $0x1,%esi
    74ee:	bf 03 00 00 00       	mov    $0x3,%edi
    74f3:	e8 78 9c ff ff       	call   1170 <signal@plt>
    74f8:	48 89 df             	mov    %rbx,%rdi
    74fb:	e8 f0 fd ff ff       	call   72f0 <redirection>
    7500:	85 ed                	test   %ebp,%ebp
    7502:	7e 16                	jle    751a <echo_wrap+0x6a>
    7504:	49 83 c6 10          	add    $0x10,%r14
    7508:	4c 89 f7             	mov    %r14,%rdi
    750b:	89 ee                	mov    %ebp,%esi
    750d:	5b                   	pop    %rbx
    750e:	41 5e                	pop    %r14
    7510:	5d                   	pop    %rbp
    7511:	31 c0                	xor    %eax,%eax
    7513:	31 d2                	xor    %edx,%edx
    7515:	e9 86 bc ff ff       	jmp    31a0 <add_last_id>
    751a:	48 8b 43 10          	mov    0x10(%rbx),%rax
    751e:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7522:	48 8d 3d a2 0f 00 00 	lea    0xfa2(%rip),%rdi        # 84cb <_IO_stdin_used+0x4cb>
    7529:	31 c0                	xor    %eax,%eax
    752b:	e8 a0 fe ff ff       	call   73d0 <_ZL6printfPKcU17pass_object_size1z>
    7530:	48 8b 43 10          	mov    0x10(%rbx),%rax
    7534:	48 8b 50 08          	mov    0x8(%rax),%rdx
    7538:	48 8d 3d d3 0a 00 00 	lea    0xad3(%rip),%rdi        # 8012 <_IO_stdin_used+0x12>
    753f:	31 c0                	xor    %eax,%eax
    7541:	e8 8a fe ff ff       	call   73d0 <_ZL6printfPKcU17pass_object_size1z>
    7546:	48 8d 3d 82 0f 00 00 	lea    0xf82(%rip),%rdi        # 84cf <_IO_stdin_used+0x4cf>
    754d:	ba 01 00 00 00       	mov    $0x1,%edx
    7552:	31 c0                	xor    %eax,%eax
    7554:	e8 77 fe ff ff       	call   73d0 <_ZL6printfPKcU17pass_object_size1z>
    7559:	48 8b 43 10          	mov    0x10(%rbx),%rax
    755d:	48 8b 78 08          	mov    0x8(%rax),%rdi
    7561:	48 8d 35 72 0f 00 00 	lea    0xf72(%rip),%rsi        # 84da <_IO_stdin_used+0x4da>
    7568:	ba 03 00 00 00       	mov    $0x3,%edx
    756d:	e8 ce b8 ff ff       	call   2e40 <ft_strncmp>
    7572:	66 66 66 66 66 2e 0f 	data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    7579:	1f 84 00 00 00 00 00 

0000000000007580 <cd_wrap>:
    7580:	55                   	push   %rbp
    7581:	41 56                	push   %r14
    7583:	53                   	push   %rbx
    7584:	48 89 f3             	mov    %rsi,%rbx
    7587:	49 89 fe             	mov    %rdi,%r14
    758a:	48 83 7f 20 00       	cmpq   $0x0,0x20(%rdi)
    758f:	75 07                	jne    7598 <cd_wrap+0x18>
    7591:	49 83 7e 28 00       	cmpq   $0x0,0x28(%r14)
    7596:	74 30                	je     75c8 <cd_wrap+0x48>
    7598:	e8 73 9c ff ff       	call   1210 <fork@plt>
    759d:	89 c5                	mov    %eax,%ebp
    759f:	bf 02 00 00 00       	mov    $0x2,%edi
    75a4:	31 f6                	xor    %esi,%esi
    75a6:	e8 c5 9b ff ff       	call   1170 <signal@plt>
    75ab:	be 01 00 00 00       	mov    $0x1,%esi
    75b0:	bf 03 00 00 00       	mov    $0x3,%edi
    75b5:	e8 b6 9b ff ff       	call   1170 <signal@plt>
    75ba:	4c 89 f7             	mov    %r14,%rdi
    75bd:	e8 2e fd ff ff       	call   72f0 <redirection>
    75c2:	85 ed                	test   %ebp,%ebp
    75c4:	7f 34                	jg     75fa <cd_wrap+0x7a>
    75c6:	eb 05                	jmp    75cd <cd_wrap+0x4d>
    75c8:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    75cd:	49 8b 46 10          	mov    0x10(%r14),%rax
    75d1:	48 8b 70 08          	mov    0x8(%rax),%rsi
    75d5:	48 85 f6             	test   %rsi,%rsi
    75d8:	74 05                	je     75df <cd_wrap+0x5f>
    75da:	48 89 df             	mov    %rbx,%rdi
    75dd:	eb 12                	jmp    75f1 <cd_wrap+0x71>
    75df:	48 8d 3d 56 0c 00 00 	lea    0xc56(%rip),%rdi        # 823c <_IO_stdin_used+0x23c>
    75e6:	e8 b5 b6 ff ff       	call   2ca0 <ft_strdup>
    75eb:	48 89 df             	mov    %rbx,%rdi
    75ee:	48 89 c6             	mov    %rax,%rsi
    75f1:	e8 7a bd ff ff       	call   3370 <ft_cd>
    75f6:	85 ed                	test   %ebp,%ebp
    75f8:	74 14                	je     760e <cd_wrap+0x8e>
    75fa:	48 83 c3 10          	add    $0x10,%rbx
    75fe:	48 89 df             	mov    %rbx,%rdi
    7601:	89 ee                	mov    %ebp,%esi
    7603:	5b                   	pop    %rbx
    7604:	41 5e                	pop    %r14
    7606:	5d                   	pop    %rbp
    7607:	31 c0                	xor    %eax,%eax
    7609:	e9 92 bb ff ff       	jmp    31a0 <add_last_id>
    760e:	48 89 df             	mov    %rbx,%rdi
    7611:	31 f6                	xor    %esi,%esi
    7613:	5b                   	pop    %rbx
    7614:	41 5e                	pop    %r14
    7616:	5d                   	pop    %rbp
    7617:	31 c0                	xor    %eax,%eax
    7619:	e9 42 c5 ff ff       	jmp    3b60 <ft_exit>
    761e:	66 90                	xchg   %ax,%ax

0000000000007620 <export_wrap>:
    7620:	55                   	push   %rbp
    7621:	41 56                	push   %r14
    7623:	53                   	push   %rbx
    7624:	48 89 f3             	mov    %rsi,%rbx
    7627:	49 89 fe             	mov    %rdi,%r14
    762a:	48 83 7f 20 00       	cmpq   $0x0,0x20(%rdi)
    762f:	75 07                	jne    7638 <export_wrap+0x18>
    7631:	49 83 7e 28 00       	cmpq   $0x0,0x28(%r14)
    7636:	74 30                	je     7668 <export_wrap+0x48>
    7638:	e8 d3 9b ff ff       	call   1210 <fork@plt>
    763d:	89 c5                	mov    %eax,%ebp
    763f:	bf 02 00 00 00       	mov    $0x2,%edi
    7644:	31 f6                	xor    %esi,%esi
    7646:	e8 25 9b ff ff       	call   1170 <signal@plt>
    764b:	be 01 00 00 00       	mov    $0x1,%esi
    7650:	bf 03 00 00 00       	mov    $0x3,%edi
    7655:	e8 16 9b ff ff       	call   1170 <signal@plt>
    765a:	4c 89 f7             	mov    %r14,%rdi
    765d:	e8 8e fc ff ff       	call   72f0 <redirection>
    7662:	85 ed                	test   %ebp,%ebp
    7664:	7f 29                	jg     768f <export_wrap+0x6f>
    7666:	eb 05                	jmp    766d <export_wrap+0x4d>
    7668:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    766d:	49 8b 46 10          	mov    0x10(%r14),%rax
    7671:	48 8b 40 08          	mov    0x8(%rax),%rax
    7675:	48 85 c0             	test   %rax,%rax
    7678:	48 8d 35 bd 0b 00 00 	lea    0xbbd(%rip),%rsi        # 823c <_IO_stdin_used+0x23c>
    767f:	48 0f 45 f0          	cmovne %rax,%rsi
    7683:	48 89 df             	mov    %rbx,%rdi
    7686:	e8 b5 c0 ff ff       	call   3740 <ft_export>
    768b:	85 ed                	test   %ebp,%ebp
    768d:	74 14                	je     76a3 <export_wrap+0x83>
    768f:	48 83 c3 10          	add    $0x10,%rbx
    7693:	48 89 df             	mov    %rbx,%rdi
    7696:	89 ee                	mov    %ebp,%esi
    7698:	5b                   	pop    %rbx
    7699:	41 5e                	pop    %r14
    769b:	5d                   	pop    %rbp
    769c:	31 c0                	xor    %eax,%eax
    769e:	e9 fd ba ff ff       	jmp    31a0 <add_last_id>
    76a3:	48 89 df             	mov    %rbx,%rdi
    76a6:	31 f6                	xor    %esi,%esi
    76a8:	5b                   	pop    %rbx
    76a9:	41 5e                	pop    %r14
    76ab:	5d                   	pop    %rbp
    76ac:	31 c0                	xor    %eax,%eax
    76ae:	e9 ad c4 ff ff       	jmp    3b60 <ft_exit>
    76b3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    76ba:	84 00 00 00 00 00 

00000000000076c0 <unset_wrap>:
    76c0:	55                   	push   %rbp
    76c1:	41 56                	push   %r14
    76c3:	53                   	push   %rbx
    76c4:	48 89 f3             	mov    %rsi,%rbx
    76c7:	49 89 fe             	mov    %rdi,%r14
    76ca:	48 83 7f 20 00       	cmpq   $0x0,0x20(%rdi)
    76cf:	75 07                	jne    76d8 <unset_wrap+0x18>
    76d1:	49 83 7e 28 00       	cmpq   $0x0,0x28(%r14)
    76d6:	74 30                	je     7708 <unset_wrap+0x48>
    76d8:	e8 33 9b ff ff       	call   1210 <fork@plt>
    76dd:	89 c5                	mov    %eax,%ebp
    76df:	bf 02 00 00 00       	mov    $0x2,%edi
    76e4:	31 f6                	xor    %esi,%esi
    76e6:	e8 85 9a ff ff       	call   1170 <signal@plt>
    76eb:	be 01 00 00 00       	mov    $0x1,%esi
    76f0:	bf 03 00 00 00       	mov    $0x3,%edi
    76f5:	e8 76 9a ff ff       	call   1170 <signal@plt>
    76fa:	4c 89 f7             	mov    %r14,%rdi
    76fd:	e8 ee fb ff ff       	call   72f0 <redirection>
    7702:	85 ed                	test   %ebp,%ebp
    7704:	7f 34                	jg     773a <unset_wrap+0x7a>
    7706:	eb 05                	jmp    770d <unset_wrap+0x4d>
    7708:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    770d:	49 8b 46 10          	mov    0x10(%r14),%rax
    7711:	48 8b 70 08          	mov    0x8(%rax),%rsi
    7715:	48 85 f6             	test   %rsi,%rsi
    7718:	74 05                	je     771f <unset_wrap+0x5f>
    771a:	48 89 df             	mov    %rbx,%rdi
    771d:	eb 12                	jmp    7731 <unset_wrap+0x71>
    771f:	48 8d 3d 16 0b 00 00 	lea    0xb16(%rip),%rdi        # 823c <_IO_stdin_used+0x23c>
    7726:	e8 75 b5 ff ff       	call   2ca0 <ft_strdup>
    772b:	48 89 df             	mov    %rbx,%rdi
    772e:	48 89 c6             	mov    %rax,%rsi
    7731:	e8 ba c2 ff ff       	call   39f0 <ft_unset>
    7736:	85 ed                	test   %ebp,%ebp
    7738:	74 14                	je     774e <unset_wrap+0x8e>
    773a:	48 83 c3 10          	add    $0x10,%rbx
    773e:	48 89 df             	mov    %rbx,%rdi
    7741:	89 ee                	mov    %ebp,%esi
    7743:	5b                   	pop    %rbx
    7744:	41 5e                	pop    %r14
    7746:	5d                   	pop    %rbp
    7747:	31 c0                	xor    %eax,%eax
    7749:	e9 52 ba ff ff       	jmp    31a0 <add_last_id>
    774e:	48 89 df             	mov    %rbx,%rdi
    7751:	31 f6                	xor    %esi,%esi
    7753:	5b                   	pop    %rbx
    7754:	41 5e                	pop    %r14
    7756:	5d                   	pop    %rbp
    7757:	31 c0                	xor    %eax,%eax
    7759:	e9 02 c4 ff ff       	jmp    3b60 <ft_exit>
    775e:	66 90                	xchg   %ax,%ax

0000000000007760 <env_wrap>:
    7760:	55                   	push   %rbp
    7761:	41 56                	push   %r14
    7763:	53                   	push   %rbx
    7764:	48 89 f3             	mov    %rsi,%rbx
    7767:	49 89 fe             	mov    %rdi,%r14
    776a:	48 83 7f 20 00       	cmpq   $0x0,0x20(%rdi)
    776f:	75 07                	jne    7778 <env_wrap+0x18>
    7771:	49 83 7e 28 00       	cmpq   $0x0,0x28(%r14)
    7776:	74 4a                	je     77c2 <env_wrap+0x62>
    7778:	e8 93 9a ff ff       	call   1210 <fork@plt>
    777d:	89 c5                	mov    %eax,%ebp
    777f:	bf 02 00 00 00       	mov    $0x2,%edi
    7784:	31 f6                	xor    %esi,%esi
    7786:	e8 e5 99 ff ff       	call   1170 <signal@plt>
    778b:	be 01 00 00 00       	mov    $0x1,%esi
    7790:	bf 03 00 00 00       	mov    $0x3,%edi
    7795:	e8 d6 99 ff ff       	call   1170 <signal@plt>
    779a:	4c 89 f7             	mov    %r14,%rdi
    779d:	e8 4e fb ff ff       	call   72f0 <redirection>
    77a2:	85 ed                	test   %ebp,%ebp
    77a4:	7f 29                	jg     77cf <env_wrap+0x6f>
    77a6:	48 89 df             	mov    %rbx,%rdi
    77a9:	e8 32 be ff ff       	call   35e0 <ft_env>
    77ae:	85 ed                	test   %ebp,%ebp
    77b0:	75 1d                	jne    77cf <env_wrap+0x6f>
    77b2:	48 89 df             	mov    %rbx,%rdi
    77b5:	31 f6                	xor    %esi,%esi
    77b7:	5b                   	pop    %rbx
    77b8:	41 5e                	pop    %r14
    77ba:	5d                   	pop    %rbp
    77bb:	31 c0                	xor    %eax,%eax
    77bd:	e9 9e c3 ff ff       	jmp    3b60 <ft_exit>
    77c2:	48 89 df             	mov    %rbx,%rdi
    77c5:	e8 16 be ff ff       	call   35e0 <ft_env>
    77ca:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    77cf:	48 83 c3 10          	add    $0x10,%rbx
    77d3:	48 89 df             	mov    %rbx,%rdi
    77d6:	89 ee                	mov    %ebp,%esi
    77d8:	5b                   	pop    %rbx
    77d9:	41 5e                	pop    %r14
    77db:	5d                   	pop    %rbp
    77dc:	31 c0                	xor    %eax,%eax
    77de:	e9 bd b9 ff ff       	jmp    31a0 <add_last_id>
    77e3:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    77ea:	84 00 00 00 00 00 

00000000000077f0 <pwd_wrap>:
    77f0:	55                   	push   %rbp
    77f1:	41 56                	push   %r14
    77f3:	53                   	push   %rbx
    77f4:	48 89 f3             	mov    %rsi,%rbx
    77f7:	49 89 fe             	mov    %rdi,%r14
    77fa:	48 83 7f 20 00       	cmpq   $0x0,0x20(%rdi)
    77ff:	75 07                	jne    7808 <pwd_wrap+0x18>
    7801:	49 83 7e 28 00       	cmpq   $0x0,0x28(%r14)
    7806:	74 4a                	je     7852 <pwd_wrap+0x62>
    7808:	e8 03 9a ff ff       	call   1210 <fork@plt>
    780d:	89 c5                	mov    %eax,%ebp
    780f:	bf 02 00 00 00       	mov    $0x2,%edi
    7814:	31 f6                	xor    %esi,%esi
    7816:	e8 55 99 ff ff       	call   1170 <signal@plt>
    781b:	be 01 00 00 00       	mov    $0x1,%esi
    7820:	bf 03 00 00 00       	mov    $0x3,%edi
    7825:	e8 46 99 ff ff       	call   1170 <signal@plt>
    782a:	4c 89 f7             	mov    %r14,%rdi
    782d:	e8 be fa ff ff       	call   72f0 <redirection>
    7832:	85 ed                	test   %ebp,%ebp
    7834:	7f 29                	jg     785f <pwd_wrap+0x6f>
    7836:	48 89 df             	mov    %rbx,%rdi
    7839:	e8 32 c0 ff ff       	call   3870 <ft_pwd>
    783e:	85 ed                	test   %ebp,%ebp
    7840:	75 1d                	jne    785f <pwd_wrap+0x6f>
    7842:	48 89 df             	mov    %rbx,%rdi
    7845:	31 f6                	xor    %esi,%esi
    7847:	5b                   	pop    %rbx
    7848:	41 5e                	pop    %r14
    784a:	5d                   	pop    %rbp
    784b:	31 c0                	xor    %eax,%eax
    784d:	e9 0e c3 ff ff       	jmp    3b60 <ft_exit>
    7852:	48 89 df             	mov    %rbx,%rdi
    7855:	e8 16 c0 ff ff       	call   3870 <ft_pwd>
    785a:	bd ff ff ff ff       	mov    $0xffffffff,%ebp
    785f:	48 83 c3 10          	add    $0x10,%rbx
    7863:	48 89 df             	mov    %rbx,%rdi
    7866:	89 ee                	mov    %ebp,%esi
    7868:	5b                   	pop    %rbx
    7869:	41 5e                	pop    %r14
    786b:	5d                   	pop    %rbp
    786c:	31 c0                	xor    %eax,%eax
    786e:	e9 2d b9 ff ff       	jmp    31a0 <add_last_id>
    7873:	66 66 66 66 2e 0f 1f 	data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    787a:	84 00 00 00 00 00 

0000000000007880 <exit_wrap>:
    7880:	53                   	push   %rbx
    7881:	48 89 f3             	mov    %rsi,%rbx
    7884:	48 8b 47 10          	mov    0x10(%rdi),%rax
    7888:	48 8b 70 08          	mov    0x8(%rax),%rsi
    788c:	48 89 df             	mov    %rbx,%rdi
    788f:	e8 cc c2 ff ff       	call   3b60 <ft_exit>
    7894:	48 83 c3 10          	add    $0x10,%rbx
    7898:	48 89 df             	mov    %rbx,%rdi
    789b:	be ff ff ff ff       	mov    $0xffffffff,%esi
    78a0:	5b                   	pop    %rbx
    78a1:	31 c0                	xor    %eax,%eax
    78a3:	e9 f8 b8 ff ff       	jmp    31a0 <add_last_id>
    78a8:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
    78af:	00 

00000000000078b0 <is_buildin>:
    78b0:	41 56                	push   %r14
    78b2:	53                   	push   %rbx
    78b3:	50                   	push   %rax
    78b4:	48 89 f3             	mov    %rsi,%rbx
    78b7:	49 89 fe             	mov    %rdi,%r14
    78ba:	48 8b 47 10          	mov    0x10(%rdi),%rax
    78be:	48 8b 38             	mov    (%rax),%rdi
    78c1:	48 8d 35 1b 0c 00 00 	lea    0xc1b(%rip),%rsi        # 84e3 <_IO_stdin_used+0x4e3>
    78c8:	ba 03 00 00 00       	mov    $0x3,%edx
    78cd:	e8 6e b5 ff ff       	call   2e40 <ft_strncmp>
    78d2:	85 c0                	test   %eax,%eax
    78d4:	0f 84 e3 00 00 00    	je     79bd <is_buildin+0x10d>
    78da:	49 8b 46 10          	mov    0x10(%r14),%rax
    78de:	48 8b 38             	mov    (%rax),%rdi
    78e1:	48 8d 35 fe 0b 00 00 	lea    0xbfe(%rip),%rsi        # 84e6 <_IO_stdin_used+0x4e6>
    78e8:	ba 04 00 00 00       	mov    $0x4,%edx
    78ed:	e8 4e b5 ff ff       	call   2e40 <ft_strncmp>
    78f2:	85 c0                	test   %eax,%eax
    78f4:	0f 84 d0 00 00 00    	je     79ca <is_buildin+0x11a>
    78fa:	49 8b 46 10          	mov    0x10(%r14),%rax
    78fe:	48 8b 38             	mov    (%rax),%rdi
    7901:	48 8d 35 e2 0b 00 00 	lea    0xbe2(%rip),%rsi        # 84ea <_IO_stdin_used+0x4ea>
    7908:	ba 05 00 00 00       	mov    $0x5,%edx
    790d:	e8 2e b5 ff ff       	call   2e40 <ft_strncmp>
    7912:	85 c0                	test   %eax,%eax
    7914:	0f 84 bd 00 00 00    	je     79d7 <is_buildin+0x127>
    791a:	49 8b 46 10          	mov    0x10(%r14),%rax
    791e:	48 8b 38             	mov    (%rax),%rdi
    7921:	48 8d 35 c7 0b 00 00 	lea    0xbc7(%rip),%rsi        # 84ef <_IO_stdin_used+0x4ef>
    7928:	ba 04 00 00 00       	mov    $0x4,%edx
    792d:	e8 0e b5 ff ff       	call   2e40 <ft_strncmp>
    7932:	85 c0                	test   %eax,%eax
    7934:	0f 84 aa 00 00 00    	je     79e4 <is_buildin+0x134>
    793a:	49 8b 46 10          	mov    0x10(%r14),%rax
    793e:	48 8b 38             	mov    (%rax),%rdi
    7941:	48 8d 35 ab 0b 00 00 	lea    0xbab(%rip),%rsi        # 84f3 <_IO_stdin_used+0x4f3>
    7948:	ba 06 00 00 00       	mov    $0x6,%edx
    794d:	e8 ee b4 ff ff       	call   2e40 <ft_strncmp>
    7952:	85 c0                	test   %eax,%eax
    7954:	0f 84 97 00 00 00    	je     79f1 <is_buildin+0x141>
    795a:	49 8b 46 10          	mov    0x10(%r14),%rax
    795e:	48 8b 38             	mov    (%rax),%rdi
    7961:	48 8d 35 91 0b 00 00 	lea    0xb91(%rip),%rsi        # 84f9 <_IO_stdin_used+0x4f9>
    7968:	ba 07 00 00 00       	mov    $0x7,%edx
    796d:	e8 ce b4 ff ff       	call   2e40 <ft_strncmp>
    7972:	85 c0                	test   %eax,%eax
    7974:	0f 84 84 00 00 00    	je     79fe <is_buildin+0x14e>
    797a:	49 8b 46 10          	mov    0x10(%r14),%rax
    797e:	48 8b 38             	mov    (%rax),%rdi
    7981:	48 8d 35 78 0b 00 00 	lea    0xb78(%rip),%rsi        # 8500 <_IO_stdin_used+0x500>
    7988:	ba 05 00 00 00       	mov    $0x5,%edx
    798d:	e8 ae b4 ff ff       	call   2e40 <ft_strncmp>
    7992:	89 c1                	mov    %eax,%ecx
    7994:	31 c0                	xor    %eax,%eax
    7996:	85 c9                	test   %ecx,%ecx
    7998:	75 74                	jne    7a0e <is_buildin+0x15e>
    799a:	49 8b 46 10          	mov    0x10(%r14),%rax
    799e:	48 8b 70 08          	mov    0x8(%rax),%rsi
    79a2:	48 89 df             	mov    %rbx,%rdi
    79a5:	e8 b6 c1 ff ff       	call   3b60 <ft_exit>
    79aa:	48 83 c3 10          	add    $0x10,%rbx
    79ae:	48 89 df             	mov    %rbx,%rdi
    79b1:	be ff ff ff ff       	mov    $0xffffffff,%esi
    79b6:	e8 e5 b7 ff ff       	call   31a0 <add_last_id>
    79bb:	eb 4c                	jmp    7a09 <is_buildin+0x159>
    79bd:	4c 89 f7             	mov    %r14,%rdi
    79c0:	48 89 de             	mov    %rbx,%rsi
    79c3:	e8 b8 fb ff ff       	call   7580 <cd_wrap>
    79c8:	eb 3f                	jmp    7a09 <is_buildin+0x159>
    79ca:	4c 89 f7             	mov    %r14,%rdi
    79cd:	48 89 de             	mov    %rbx,%rsi
    79d0:	e8 1b fe ff ff       	call   77f0 <pwd_wrap>
    79d5:	eb 32                	jmp    7a09 <is_buildin+0x159>
    79d7:	4c 89 f7             	mov    %r14,%rdi
    79da:	48 89 de             	mov    %rbx,%rsi
    79dd:	e8 ce fa ff ff       	call   74b0 <echo_wrap>
    79e2:	eb 25                	jmp    7a09 <is_buildin+0x159>
    79e4:	4c 89 f7             	mov    %r14,%rdi
    79e7:	48 89 de             	mov    %rbx,%rsi
    79ea:	e8 71 fd ff ff       	call   7760 <env_wrap>
    79ef:	eb 18                	jmp    7a09 <is_buildin+0x159>
    79f1:	4c 89 f7             	mov    %r14,%rdi
    79f4:	48 89 de             	mov    %rbx,%rsi
    79f7:	e8 c4 fc ff ff       	call   76c0 <unset_wrap>
    79fc:	eb 0b                	jmp    7a09 <is_buildin+0x159>
    79fe:	4c 89 f7             	mov    %r14,%rdi
    7a01:	48 89 de             	mov    %rbx,%rsi
    7a04:	e8 17 fc ff ff       	call   7620 <export_wrap>
    7a09:	b8 01 00 00 00       	mov    $0x1,%eax
    7a0e:	48 83 c4 08          	add    $0x8,%rsp
    7a12:	5b                   	pop    %rbx
    7a13:	41 5e                	pop    %r14
    7a15:	31 c9                	xor    %ecx,%ecx
    7a17:	31 ff                	xor    %edi,%edi
    7a19:	31 d2                	xor    %edx,%edx
    7a1b:	31 f6                	xor    %esi,%esi
    7a1d:	c3                   	ret
    7a1e:	66 90                	xchg   %ax,%ax

0000000000007a20 <ft_command>:
    7a20:	41 56                	push   %r14
    7a22:	53                   	push   %rbx
    7a23:	50                   	push   %rax
    7a24:	48 89 f3             	mov    %rsi,%rbx
    7a27:	49 89 fe             	mov    %rdi,%r14
    7a2a:	e8 81 fe ff ff       	call   78b0 <is_buildin>
    7a2f:	85 c0                	test   %eax,%eax
    7a31:	75 32                	jne    7a65 <ft_command+0x45>
    7a33:	e8 d8 97 ff ff       	call   1210 <fork@plt>
    7a38:	85 c0                	test   %eax,%eax
    7a3a:	74 18                	je     7a54 <ft_command+0x34>
    7a3c:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    7a40:	89 c6                	mov    %eax,%esi
    7a42:	e8 59 b7 ff ff       	call   31a0 <add_last_id>
    7a47:	85 c0                	test   %eax,%eax
    7a49:	74 14                	je     7a5f <ft_command+0x3f>
    7a4b:	c7 43 08 01 00 00 00 	movl   $0x1,0x8(%rbx)
    7a52:	eb 0b                	jmp    7a5f <ft_command+0x3f>
    7a54:	4c 89 f7             	mov    %r14,%rdi
    7a57:	48 89 de             	mov    %rbx,%rsi
    7a5a:	e8 b1 f7 ff ff       	call   7210 <ft_execve>
    7a5f:	83 7b 20 01          	cmpl   $0x1,0x20(%rbx)
    7a63:	74 0e                	je     7a73 <ft_command+0x53>
    7a65:	48 83 c4 08          	add    $0x8,%rsp
    7a69:	5b                   	pop    %rbx
    7a6a:	41 5e                	pop    %r14
    7a6c:	31 c0                	xor    %eax,%eax
    7a6e:	31 ff                	xor    %edi,%edi
    7a70:	31 f6                	xor    %esi,%esi
    7a72:	c3                   	ret
    7a73:	31 ff                	xor    %edi,%edi
    7a75:	e8 a6 96 ff ff       	call   1120 <close@plt>
    7a7a:	bf 01 00 00 00       	mov    $0x1,%edi
    7a7f:	e8 9c 96 ff ff       	call   1120 <close@plt>
    7a84:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    7a88:	e8 53 f6 ff ff       	call   70e0 <wait_and_get_exit_value>
    7a8d:	89 c7                	mov    %eax,%edi
    7a8f:	e8 6c 97 ff ff       	call   1200 <exit@plt>
    7a94:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7a9b:	00 00 00 
    7a9e:	66 90                	xchg   %ax,%ax

0000000000007aa0 <ft_or>:
    7aa0:	55                   	push   %rbp
    7aa1:	41 57                	push   %r15
    7aa3:	41 56                	push   %r14
    7aa5:	53                   	push   %rbx
    7aa6:	50                   	push   %rax
    7aa7:	48 89 f3             	mov    %rsi,%rbx
    7aaa:	49 89 fe             	mov    %rdi,%r14
    7aad:	48 8b 3f             	mov    (%rdi),%rdi
    7ab0:	e8 db f5 ff ff       	call   7090 <execute>
    7ab5:	4c 8d 7b 10          	lea    0x10(%rbx),%r15
    7ab9:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    7abd:	e8 1e f6 ff ff       	call   70e0 <wait_and_get_exit_value>
    7ac2:	89 c5                	mov    %eax,%ebp
    7ac4:	4c 89 ff             	mov    %r15,%rdi
    7ac7:	e8 54 b7 ff ff       	call   3220 <free_pids>
    7acc:	85 ed                	test   %ebp,%ebp
    7ace:	74 18                	je     7ae8 <ft_or+0x48>
    7ad0:	49 8b 7e 08          	mov    0x8(%r14),%rdi
    7ad4:	48 89 de             	mov    %rbx,%rsi
    7ad7:	48 83 c4 08          	add    $0x8,%rsp
    7adb:	5b                   	pop    %rbx
    7adc:	41 5e                	pop    %r14
    7ade:	41 5f                	pop    %r15
    7ae0:	5d                   	pop    %rbp
    7ae1:	31 c0                	xor    %eax,%eax
    7ae3:	e9 a8 f5 ff ff       	jmp    7090 <execute>
    7ae8:	48 83 c4 08          	add    $0x8,%rsp
    7aec:	5b                   	pop    %rbx
    7aed:	41 5e                	pop    %r14
    7aef:	41 5f                	pop    %r15
    7af1:	5d                   	pop    %rbp
    7af2:	31 c0                	xor    %eax,%eax
    7af4:	c3                   	ret
    7af5:	66 2e 0f 1f 84 00 00 	cs nopw 0x0(%rax,%rax,1)
    7afc:	00 00 00 
    7aff:	90                   	nop

0000000000007b00 <read_pipe>:
    7b00:	41 57                	push   %r15
    7b02:	41 56                	push   %r14
    7b04:	53                   	push   %rbx
    7b05:	49 89 d7             	mov    %rdx,%r15
    7b08:	48 89 f3             	mov    %rsi,%rbx
    7b0b:	49 89 fe             	mov    %rdi,%r14
    7b0e:	be 01 00 00 00       	mov    $0x1,%esi
    7b13:	bf 02 00 00 00       	mov    $0x2,%edi
    7b18:	e8 53 96 ff ff       	call   1170 <signal@plt>
    7b1d:	be 01 00 00 00       	mov    $0x1,%esi
    7b22:	bf 03 00 00 00       	mov    $0x3,%edi
    7b27:	e8 44 96 ff ff       	call   1170 <signal@plt>
    7b2c:	31 ff                	xor    %edi,%edi
    7b2e:	e8 ed 95 ff ff       	call   1120 <close@plt>
    7b33:	c7 43 20 01 00 00 00 	movl   $0x1,0x20(%rbx)
    7b3a:	41 8b 3f             	mov    (%r15),%edi
    7b3d:	31 f6                	xor    %esi,%esi
    7b3f:	e8 ac 95 ff ff       	call   10f0 <dup2@plt>
    7b44:	41 8b 3f             	mov    (%r15),%edi
    7b47:	e8 d4 95 ff ff       	call   1120 <close@plt>
    7b4c:	41 8b 7f 04          	mov    0x4(%r15),%edi
    7b50:	e8 cb 95 ff ff       	call   1120 <close@plt>
    7b55:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    7b59:	e8 c2 b6 ff ff       	call   3220 <free_pids>
    7b5e:	49 8b 7e 08          	mov    0x8(%r14),%rdi
    7b62:	48 89 de             	mov    %rbx,%rsi
    7b65:	5b                   	pop    %rbx
    7b66:	41 5e                	pop    %r14
    7b68:	41 5f                	pop    %r15
    7b6a:	31 d2                	xor    %edx,%edx
    7b6c:	e9 1f f5 ff ff       	jmp    7090 <execute>
    7b71:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    7b78:	0f 1f 84 00 00 00 00 
    7b7f:	00 

0000000000007b80 <write_pipe>:
    7b80:	41 57                	push   %r15
    7b82:	41 56                	push   %r14
    7b84:	53                   	push   %rbx
    7b85:	49 89 d7             	mov    %rdx,%r15
    7b88:	48 89 f3             	mov    %rsi,%rbx
    7b8b:	49 89 fe             	mov    %rdi,%r14
    7b8e:	be 01 00 00 00       	mov    $0x1,%esi
    7b93:	bf 02 00 00 00       	mov    $0x2,%edi
    7b98:	e8 d3 95 ff ff       	call   1170 <signal@plt>
    7b9d:	be 01 00 00 00       	mov    $0x1,%esi
    7ba2:	bf 03 00 00 00       	mov    $0x3,%edi
    7ba7:	e8 c4 95 ff ff       	call   1170 <signal@plt>
    7bac:	bf 01 00 00 00       	mov    $0x1,%edi
    7bb1:	e8 6a 95 ff ff       	call   1120 <close@plt>
    7bb6:	c7 43 20 01 00 00 00 	movl   $0x1,0x20(%rbx)
    7bbd:	41 8b 7f 04          	mov    0x4(%r15),%edi
    7bc1:	be 01 00 00 00       	mov    $0x1,%esi
    7bc6:	e8 25 95 ff ff       	call   10f0 <dup2@plt>
    7bcb:	41 8b 3f             	mov    (%r15),%edi
    7bce:	e8 4d 95 ff ff       	call   1120 <close@plt>
    7bd3:	41 8b 7f 04          	mov    0x4(%r15),%edi
    7bd7:	e8 44 95 ff ff       	call   1120 <close@plt>
    7bdc:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    7be0:	e8 3b b6 ff ff       	call   3220 <free_pids>
    7be5:	49 8b 3e             	mov    (%r14),%rdi
    7be8:	48 89 de             	mov    %rbx,%rsi
    7beb:	5b                   	pop    %rbx
    7bec:	41 5e                	pop    %r14
    7bee:	41 5f                	pop    %r15
    7bf0:	31 d2                	xor    %edx,%edx
    7bf2:	e9 99 f4 ff ff       	jmp    7090 <execute>
    7bf7:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
    7bfe:	00 00 

0000000000007c00 <ft_pipe>:
    7c00:	41 57                	push   %r15
    7c02:	41 56                	push   %r14
    7c04:	53                   	push   %rbx
    7c05:	48 83 ec 10          	sub    $0x10,%rsp
    7c09:	48 89 f3             	mov    %rsi,%rbx
    7c0c:	49 89 ff             	mov    %rdi,%r15
    7c0f:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7c16:	00 00 
    7c18:	48 89 44 24 08       	mov    %rax,0x8(%rsp)
    7c1d:	48 89 e7             	mov    %rsp,%rdi
    7c20:	e8 0b 95 ff ff       	call   1130 <pipe@plt>
    7c25:	85 c0                	test   %eax,%eax
    7c27:	74 15                	je     7c3e <ft_pipe+0x3e>
    7c29:	48 8d 3d f9 08 00 00 	lea    0x8f9(%rip),%rdi        # 8529 <_IO_stdin_used+0x529>
    7c30:	e8 8b ab ff ff       	call   27c0 <ft_putstrerr>
    7c35:	c7 43 08 01 00 00 00 	movl   $0x1,0x8(%rbx)
    7c3c:	eb 4b                	jmp    7c89 <ft_pipe+0x89>
    7c3e:	e8 cd 95 ff ff       	call   1210 <fork@plt>
    7c43:	85 c0                	test   %eax,%eax
    7c45:	0f 84 8c 00 00 00    	je     7cd7 <ft_pipe+0xd7>
    7c4b:	4c 8d 73 10          	lea    0x10(%rbx),%r14
    7c4f:	4c 89 f7             	mov    %r14,%rdi
    7c52:	89 c6                	mov    %eax,%esi
    7c54:	e8 47 b5 ff ff       	call   31a0 <add_last_id>
    7c59:	85 c0                	test   %eax,%eax
    7c5b:	75 1b                	jne    7c78 <ft_pipe+0x78>
    7c5d:	e8 ae 95 ff ff       	call   1210 <fork@plt>
    7c62:	85 c0                	test   %eax,%eax
    7c64:	0f 84 82 00 00 00    	je     7cec <ft_pipe+0xec>
    7c6a:	4c 89 f7             	mov    %r14,%rdi
    7c6d:	89 c6                	mov    %eax,%esi
    7c6f:	e8 2c b5 ff ff       	call   31a0 <add_last_id>
    7c74:	85 c0                	test   %eax,%eax
    7c76:	74 33                	je     7cab <ft_pipe+0xab>
    7c78:	48 8b 05 79 43 00 00 	mov    0x4379(%rip),%rax        # bff8 <stderr@GLIBC_2.2.5>
    7c7f:	48 8b 38             	mov    (%rax),%rdi
    7c82:	31 c0                	xor    %eax,%eax
    7c84:	e8 87 00 00 00       	call   7d10 <_ZL7fprintfP8_IO_FILEU17pass_object_size1PKcz>
    7c89:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7c90:	00 00 
    7c92:	48 3b 44 24 08       	cmp    0x8(%rsp),%rax
    7c97:	75 39                	jne    7cd2 <ft_pipe+0xd2>
    7c99:	48 83 c4 10          	add    $0x10,%rsp
    7c9d:	5b                   	pop    %rbx
    7c9e:	41 5e                	pop    %r14
    7ca0:	41 5f                	pop    %r15
    7ca2:	31 c0                	xor    %eax,%eax
    7ca4:	31 ff                	xor    %edi,%edi
    7ca6:	31 d2                	xor    %edx,%edx
    7ca8:	31 f6                	xor    %esi,%esi
    7caa:	c3                   	ret
    7cab:	8b 3c 24             	mov    (%rsp),%edi
    7cae:	e8 6d 94 ff ff       	call   1120 <close@plt>
    7cb3:	8b 7c 24 04          	mov    0x4(%rsp),%edi
    7cb7:	e8 64 94 ff ff       	call   1120 <close@plt>
    7cbc:	48 8b 7b 10          	mov    0x10(%rbx),%rdi
    7cc0:	e8 1b f4 ff ff       	call   70e0 <wait_and_get_exit_value>
    7cc5:	89 43 08             	mov    %eax,0x8(%rbx)
    7cc8:	4c 89 f7             	mov    %r14,%rdi
    7ccb:	e8 50 b5 ff ff       	call   3220 <free_pids>
    7cd0:	eb b7                	jmp    7c89 <ft_pipe+0x89>
    7cd2:	e8 09 94 ff ff       	call   10e0 <__stack_chk_fail@plt>
    7cd7:	48 89 e2             	mov    %rsp,%rdx
    7cda:	4c 89 ff             	mov    %r15,%rdi
    7cdd:	48 89 de             	mov    %rbx,%rsi
    7ce0:	e8 1b fe ff ff       	call   7b00 <read_pipe>
    7ce5:	31 ff                	xor    %edi,%edi
    7ce7:	e8 14 95 ff ff       	call   1200 <exit@plt>
    7cec:	48 89 e2             	mov    %rsp,%rdx
    7cef:	4c 89 ff             	mov    %r15,%rdi
    7cf2:	48 89 de             	mov    %rbx,%rsi
    7cf5:	e8 86 fe ff ff       	call   7b80 <write_pipe>
    7cfa:	31 ff                	xor    %edi,%edi
    7cfc:	e8 ff 94 ff ff       	call   1200 <exit@plt>
    7d01:	66 66 66 66 66 66 2e 	data16 data16 data16 data16 data16 cs nopw 0x0(%rax,%rax,1)
    7d08:	0f 1f 84 00 00 00 00 
    7d0f:	00 

0000000000007d10 <_ZL7fprintfP8_IO_FILEU17pass_object_size1PKcz>:
    7d10:	48 81 ec d8 00 00 00 	sub    $0xd8,%rsp
    7d17:	48 89 4c 24 18       	mov    %rcx,0x18(%rsp)
    7d1c:	4c 89 44 24 20       	mov    %r8,0x20(%rsp)
    7d21:	4c 89 4c 24 28       	mov    %r9,0x28(%rsp)
    7d26:	84 c0                	test   %al,%al
    7d28:	74 31                	je     7d5b <_ZL7fprintfP8_IO_FILEU17pass_object_size1PKcz+0x4b>
    7d2a:	0f 29 44 24 30       	movaps %xmm0,0x30(%rsp)
    7d2f:	0f 29 4c 24 40       	movaps %xmm1,0x40(%rsp)
    7d34:	0f 29 54 24 50       	movaps %xmm2,0x50(%rsp)
    7d39:	0f 29 5c 24 60       	movaps %xmm3,0x60(%rsp)
    7d3e:	0f 29 64 24 70       	movaps %xmm4,0x70(%rsp)
    7d43:	0f 29 ac 24 80 00 00 	movaps %xmm5,0x80(%rsp)
    7d4a:	00 
    7d4b:	0f 29 b4 24 90 00 00 	movaps %xmm6,0x90(%rsp)
    7d52:	00 
    7d53:	0f 29 bc 24 a0 00 00 	movaps %xmm7,0xa0(%rsp)
    7d5a:	00 
    7d5b:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7d62:	00 00 
    7d64:	48 89 84 24 d0 00 00 	mov    %rax,0xd0(%rsp)
    7d6b:	00 
    7d6c:	48 89 e0             	mov    %rsp,%rax
    7d6f:	48 89 84 24 c0 00 00 	mov    %rax,0xc0(%rsp)
    7d76:	00 
    7d77:	48 8d 84 24 e0 00 00 	lea    0xe0(%rsp),%rax
    7d7e:	00 
    7d7f:	48 89 84 24 b8 00 00 	mov    %rax,0xb8(%rsp)
    7d86:	00 
    7d87:	48 b8 18 00 00 00 30 	movabs $0x3000000018,%rax
    7d8e:	00 00 00 
    7d91:	48 89 84 24 b0 00 00 	mov    %rax,0xb0(%rsp)
    7d98:	00 
    7d99:	48 8d 15 9a 07 00 00 	lea    0x79a(%rip),%rdx        # 853a <_IO_stdin_used+0x53a>
    7da0:	48 8d 8c 24 b0 00 00 	lea    0xb0(%rsp),%rcx
    7da7:	00 
    7da8:	be 01 00 00 00       	mov    $0x1,%esi
    7dad:	e8 9e 92 ff ff       	call   1050 <__vfprintf_chk@plt>
    7db2:	64 48 8b 04 25 28 00 	mov    %fs:0x28,%rax
    7db9:	00 00 
    7dbb:	48 3b 84 24 d0 00 00 	cmp    0xd0(%rsp),%rax
    7dc2:	00 
    7dc3:	75 16                	jne    7ddb <_ZL7fprintfP8_IO_FILEU17pass_object_size1PKcz+0xcb>
    7dc5:	48 81 c4 d8 00 00 00 	add    $0xd8,%rsp
    7dcc:	31 c0                	xor    %eax,%eax
    7dce:	31 c9                	xor    %ecx,%ecx
    7dd0:	31 d2                	xor    %edx,%edx
    7dd2:	31 f6                	xor    %esi,%esi
    7dd4:	45 31 c0             	xor    %r8d,%r8d
    7dd7:	45 31 c9             	xor    %r9d,%r9d
    7dda:	c3                   	ret
    7ddb:	e8 00 93 ff ff       	call   10e0 <__stack_chk_fail@plt>

0000000000007de0 <ft_subshell>:
    7de0:	41 56                	push   %r14
    7de2:	53                   	push   %rbx
    7de3:	50                   	push   %rax
    7de4:	48 89 f3             	mov    %rsi,%rbx
    7de7:	49 89 fe             	mov    %rdi,%r14
    7dea:	e8 21 94 ff ff       	call   1210 <fork@plt>
    7def:	85 c0                	test   %eax,%eax
    7df1:	74 17                	je     7e0a <ft_subshell+0x2a>
    7df3:	48 83 c3 10          	add    $0x10,%rbx
    7df7:	48 89 df             	mov    %rbx,%rdi
    7dfa:	89 c6                	mov    %eax,%esi
    7dfc:	48 83 c4 08          	add    $0x8,%rsp
    7e00:	5b                   	pop    %rbx
    7e01:	41 5e                	pop    %r14
    7e03:	31 c0                	xor    %eax,%eax
    7e05:	e9 96 b3 ff ff       	jmp    31a0 <add_last_id>
    7e0a:	be 01 00 00 00       	mov    $0x1,%esi
    7e0f:	bf 02 00 00 00       	mov    $0x2,%edi
    7e14:	e8 57 93 ff ff       	call   1170 <signal@plt>
    7e19:	be 01 00 00 00       	mov    $0x1,%esi
    7e1e:	bf 03 00 00 00       	mov    $0x3,%edi
    7e23:	e8 48 93 ff ff       	call   1170 <signal@plt>
    7e28:	48 8d 7b 10          	lea    0x10(%rbx),%rdi
    7e2c:	e8 ef b3 ff ff       	call   3220 <free_pids>
    7e31:	c7 43 20 01 00 00 00 	movl   $0x1,0x20(%rbx)
    7e38:	49 8b 3e             	mov    (%r14),%rdi
    7e3b:	48 89 de             	mov    %rbx,%rsi
    7e3e:	e8 4d f2 ff ff       	call   7090 <execute>
    7e43:	48 8b 7b 18          	mov    0x18(%rbx),%rdi
    7e47:	48 8d 35 72 95 ff ff 	lea    -0x6a8e(%rip),%rsi        # 13c0 <delete_bnode>
    7e4e:	e8 fd 98 ff ff       	call   1750 <btree_apply_suffix>
    7e53:	bf 01 00 00 00       	mov    $0x1,%edi
    7e58:	e8 a3 93 ff ff       	call   1200 <exit@plt>

Disassembly of section .fini:

0000000000007e60 <_fini>:
    7e60:	f3 0f 1e fa          	endbr64
    7e64:	48 83 ec 08          	sub    $0x8,%rsp
    7e68:	48 83 c4 08          	add    $0x8,%rsp
    7e6c:	c3                   	ret
